{"name":"Mathlib.SetTheory.Surreal.Dyadic","instances":[{"typeNames":["SetTheory.PGame.LeftMoves"],"name":"SetTheory.PGame.uniquePowHalfLeftMoves","className":"Unique"},{"typeNames":["SetTheory.PGame.RightMoves"],"name":"SetTheory.PGame.isEmpty_powHalf_zero_rightMoves","className":"IsEmpty"},{"typeNames":["SetTheory.PGame.RightMoves"],"name":"SetTheory.PGame.uniquePowHalfSuccRightMoves","className":"Unique"}],"imports":["Init","Mathlib.Algebra.Algebra.Basic","Mathlib.Algebra.GroupPower.Order","Mathlib.RingTheory.Localization.Basic","Mathlib.SetTheory.Game.Birthday","Mathlib.SetTheory.Surreal.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Surreal/Dyadic.lean#L280-L281","name":"Surreal.dyadic","line":280,"kind":"def","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.dyadic","doc":"We define dyadic surreals as the range of the map `dyadicMap`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.dyadic\"><span class=\"name\">Surreal</span>.<span class=\"name\">dyadic</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal\">Surreal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Surreal/Dyadic.lean#L275-L277","name":"Surreal.dyadicMap_apply_pow'","line":275,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.dyadicMap_apply_pow'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.dyadicMap_apply_pow'\"><span class=\"name\">Surreal</span>.<span class=\"name\">dyadicMap_apply_pow'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.powHalf\">Surreal.powHalf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Membership.html#Submonoid.log\">Submonoid.log</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Membership.html#Submonoid.pow\">Submonoid.pow</a> <span class=\"fn\">2</span> <span class=\"fn\">n</span></span>)</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.powHalf\">Surreal.powHalf</a> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Surreal/Dyadic.lean#L268-L271","name":"Surreal.dyadicMap_apply_pow","line":268,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.dyadicMap_apply_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.dyadicMap_apply_pow\"><span class=\"name\">Surreal</span>.<span class=\"name\">dyadicMap_apply_pow</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Surreal.dyadicMap</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Localization/Basic.html#IsLocalization.mk'\">IsLocalization.mk'</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Membership.html#Submonoid.powers\">Submonoid.powers</a> <span class=\"fn\">2</span></span>)</span></span>)</span> <span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Membership.html#Submonoid.pow\">Submonoid.pow</a> <span class=\"fn\">2</span> <span class=\"fn\">n</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.powHalf\">Surreal.powHalf</a> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Surreal/Dyadic.lean#L261-L264","name":"Surreal.dyadicMap_apply","line":261,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.dyadicMap_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.dyadicMap_apply\"><span class=\"name\">Surreal</span>.<span class=\"name\">dyadicMap_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Membership.html#Submonoid.powers\">Submonoid.powers</a> <span class=\"fn\">2</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Surreal.dyadicMap</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Localization/Basic.html#IsLocalization.mk'\">IsLocalization.mk'</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization\">Localization</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Membership.html#Submonoid.powers\">Submonoid.powers</a> <span class=\"fn\">2</span></span>)</span></span>)</span> <span class=\"fn\">m</span> <span class=\"fn\">p</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.powHalf\">Surreal.powHalf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Submonoid/Membership.html#Submonoid.log\">Submonoid.log</a> <span class=\"fn\">p</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Surreal/Dyadic.lean#L225-L257","name":"Surreal.dyadicMap","line":225,"kind":"def","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.dyadicMap","doc":"The additive monoid morphism `dyadicMap` sends ⟦⟨m, 2^n⟩⟧ to m • half ^ n. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.dyadicMap\"><span class=\"name\">Surreal</span>.<span class=\"name\">dyadicMap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/MonoidLocalization.html#Localization.Away\">Localization.Away</a> <span class=\"fn\">2</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal\">Surreal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Surreal/Dyadic.lean#L210-L221","name":"Surreal.dyadic_aux","line":210,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.dyadic_aux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.dyadic_aux\"><span class=\"name\">Surreal</span>.<span class=\"name\">dyadic_aux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m₁ : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m₂ : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₁ : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y₂ : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">y₁</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">m₂</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">y₂</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m₁</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.powHalf\">Surreal.powHalf</a> <span class=\"fn\">y₂</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">m₂</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.powHalf\">Surreal.powHalf</a> <span class=\"fn\">y₁</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Surreal/Dyadic.lean#L202-L207","name":"Surreal.zsmul_pow_two_powHalf","line":202,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.zsmul_pow_two_powHalf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.zsmul_pow_two_powHalf\"><span class=\"name\">Surreal</span>.<span class=\"name\">zsmul_pow_two_powHalf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span></span>)</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.powHalf\">Surreal.powHalf</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.powHalf\">Surreal.powHalf</a> <span class=\"fn\">k</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Surreal/Dyadic.lean#L193-L199","name":"Surreal.nsmul_pow_two_powHalf'","line":193,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.nsmul_pow_two_powHalf'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.nsmul_pow_two_powHalf'\"><span class=\"name\">Surreal</span>.<span class=\"name\">nsmul_pow_two_powHalf'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.powHalf\">Surreal.powHalf</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.powHalf\">Surreal.powHalf</a> <span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Surreal/Dyadic.lean#L185-L189","name":"Surreal.nsmul_pow_two_powHalf","line":185,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.nsmul_pow_two_powHalf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.nsmul_pow_two_powHalf\"><span class=\"name\">Surreal</span>.<span class=\"name\">nsmul_pow_two_powHalf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.powHalf\">Surreal.powHalf</a> <span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Surreal/Dyadic.lean#L180-L181","name":"Surreal.double_powHalf_succ_eq_powHalf","line":180,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.double_powHalf_succ_eq_powHalf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.double_powHalf_succ_eq_powHalf\"><span class=\"name\">Surreal</span>.<span class=\"name\">double_powHalf_succ_eq_powHalf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.powHalf\">Surreal.powHalf</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Nat.succ\">Nat.succ</a> <span class=\"fn\">n</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.powHalf\">Surreal.powHalf</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Surreal/Dyadic.lean#L175-L176","name":"Surreal.powHalf_zero","line":175,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.powHalf_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.powHalf_zero\"><span class=\"name\">Surreal</span>.<span class=\"name\">powHalf_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.powHalf\">Surreal.powHalf</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Surreal/Dyadic.lean#L170-L171","name":"Surreal.powHalf","line":170,"kind":"def","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.powHalf","doc":"Powers of the surreal number `half`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#Surreal.powHalf\"><span class=\"name\">Surreal</span>.<span class=\"name\">powHalf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/Surreal/Basic.html#Surreal\">Surreal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Surreal/Dyadic.lean#L157-L158","name":"SetTheory.PGame.half_add_half_equiv_one","line":157,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.half_add_half_equiv_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.half_add_half_equiv_one\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">half_add_half_equiv_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">SetTheory.PGame.powHalf</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">SetTheory.PGame.powHalf</a> <span class=\"fn\">1</span></span></span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Surreal/Dyadic.lean#L123-L154","name":"SetTheory.PGame.add_powHalf_succ_self_eq_powHalf","line":123,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.add_powHalf_succ_self_eq_powHalf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.add_powHalf_succ_self_eq_powHalf\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">add_powHalf_succ_self_eq_powHalf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">SetTheory.PGame.powHalf</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">SetTheory.PGame.powHalf</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span></span> <a href=\"./Init/Core.html#HasEquiv.Equiv\">≈</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">SetTheory.PGame.powHalf</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Surreal/Dyadic.lean#L119-L120","name":"SetTheory.PGame.zero_le_powHalf","line":119,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.zero_le_powHalf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.zero_le_powHalf\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">zero_le_powHalf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">SetTheory.PGame.powHalf</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Surreal/Dyadic.lean#L115-L116","name":"SetTheory.PGame.powHalf_pos","line":115,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf_pos\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">powHalf_pos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">SetTheory.PGame.powHalf</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Surreal/Dyadic.lean#L111-L112","name":"SetTheory.PGame.powHalf_succ_lt_one","line":111,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf_succ_lt_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf_succ_lt_one\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">powHalf_succ_lt_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">SetTheory.PGame.powHalf</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Surreal/Dyadic.lean#L105-L108","name":"SetTheory.PGame.powHalf_le_one","line":105,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf_le_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf_le_one\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">powHalf_le_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">SetTheory.PGame.powHalf</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Surreal/Dyadic.lean#L101-L102","name":"SetTheory.PGame.powHalf_succ_le_powHalf","line":101,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf_succ_le_powHalf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf_succ_le_powHalf\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">powHalf_succ_le_powHalf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">SetTheory.PGame.powHalf</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">SetTheory.PGame.powHalf</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Surreal/Dyadic.lean#L97-L98","name":"SetTheory.PGame.powHalf_succ_lt_powHalf","line":97,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf_succ_lt_powHalf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf_succ_lt_powHalf\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">powHalf_succ_lt_powHalf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">SetTheory.PGame.powHalf</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">SetTheory.PGame.powHalf</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Surreal/Dyadic.lean#L89-L94","name":"SetTheory.PGame.numeric_powHalf","line":89,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.numeric_powHalf","doc":"For all natural numbers `n`, the pre-games `powHalf n` are numeric. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.numeric_powHalf\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">numeric_powHalf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Basic.html#SetTheory.PGame.Numeric\">SetTheory.PGame.Numeric</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">SetTheory.PGame.powHalf</a> <span class=\"fn\">n</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Surreal/Dyadic.lean#L84-L85","name":"SetTheory.PGame.birthday_half","line":84,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.birthday_half","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.birthday_half\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">birthday_half</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/Birthday.html#SetTheory.PGame.birthday\">SetTheory.PGame.birthday</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">SetTheory.PGame.powHalf</a> <span class=\"fn\">1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">2</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Surreal/Dyadic.lean#L79-L80","name":"SetTheory.PGame.uniquePowHalfSuccRightMoves","line":79,"kind":"instance","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.uniquePowHalfSuccRightMoves","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.uniquePowHalfSuccRightMoves\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">uniquePowHalfSuccRightMoves</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.RightMoves\">SetTheory.PGame.RightMoves</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">SetTheory.PGame.powHalf</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Surreal/Dyadic.lean#L75-L76","name":"SetTheory.PGame.isEmpty_powHalf_zero_rightMoves","line":75,"kind":"instance","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.isEmpty_powHalf_zero_rightMoves","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.isEmpty_powHalf_zero_rightMoves\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">isEmpty_powHalf_zero_rightMoves</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.RightMoves\">SetTheory.PGame.RightMoves</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">SetTheory.PGame.powHalf</a> <span class=\"fn\">0</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Surreal/Dyadic.lean#L71-L72","name":"SetTheory.PGame.uniquePowHalfLeftMoves","line":71,"kind":"instance","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.uniquePowHalfLeftMoves","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.uniquePowHalfLeftMoves\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">uniquePowHalfLeftMoves</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.LeftMoves\">SetTheory.PGame.LeftMoves</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">SetTheory.PGame.powHalf</a> <span class=\"fn\">n</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Surreal/Dyadic.lean#L67-L68","name":"SetTheory.PGame.powHalf_succ_moveRight","line":67,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf_succ_moveRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf_succ_moveRight\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">powHalf_succ_moveRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.RightMoves\">SetTheory.PGame.RightMoves</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">SetTheory.PGame.powHalf</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.moveRight\">SetTheory.PGame.moveRight</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">SetTheory.PGame.powHalf</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">SetTheory.PGame.powHalf</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Surreal/Dyadic.lean#L63-L63","name":"SetTheory.PGame.powHalf_moveLeft","line":63,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf_moveLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf_moveLeft\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">powHalf_moveLeft</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.LeftMoves\">SetTheory.PGame.LeftMoves</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">SetTheory.PGame.powHalf</a> <span class=\"fn\">n</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.moveLeft\">SetTheory.PGame.moveLeft</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">SetTheory.PGame.powHalf</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Surreal/Dyadic.lean#L58-L59","name":"SetTheory.PGame.powHalf_succ_rightMoves","line":58,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf_succ_rightMoves","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf_succ_rightMoves\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">powHalf_succ_rightMoves</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.RightMoves\">SetTheory.PGame.RightMoves</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">SetTheory.PGame.powHalf</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit.{u_1 + 1}</a>     </span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Surreal/Dyadic.lean#L54-L55","name":"SetTheory.PGame.powHalf_zero_rightMoves","line":54,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf_zero_rightMoves","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf_zero_rightMoves\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">powHalf_zero_rightMoves</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.RightMoves\">SetTheory.PGame.RightMoves</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">SetTheory.PGame.powHalf</a> <span class=\"fn\">0</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#PEmpty\">PEmpty.{u_1 + 1}</a>     </span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Surreal/Dyadic.lean#L51-L51","name":"SetTheory.PGame.powHalf_leftMoves","line":51,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf_leftMoves","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf_leftMoves\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">powHalf_leftMoves</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame.LeftMoves\">SetTheory.PGame.LeftMoves</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">SetTheory.PGame.powHalf</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit.{u_1 + 1}</a>     </span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Surreal/Dyadic.lean#L47-L48","name":"SetTheory.PGame.powHalf_zero","line":47,"kind":"theorem","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf_zero\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">powHalf_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\">SetTheory.PGame.powHalf</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Surreal/Dyadic.lean#L41-L43","name":"SetTheory.PGame.powHalf","line":41,"kind":"def","docLink":"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf","doc":"For a natural number `n`, the pre-game `powHalf (n + 1)` is recursively defined as\n`{0 | powHalf n}`. These are the explicit expressions of powers of `1 / 2`. By definition, we have\n`powHalf 0 = 1` and `powHalf 1 ≈ 1 / 2` and we prove later on that\n`powHalf (n + 1) + powHalf (n + 1) ≈ powHalf n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Surreal/Dyadic.html#SetTheory.PGame.powHalf\"><span class=\"name\">SetTheory</span>.<span class=\"name\">PGame</span>.<span class=\"name\">powHalf</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Mathlib/SetTheory/Game/PGame.html#SetTheory.PGame\">SetTheory.PGame</a></span></div></div>"}]}