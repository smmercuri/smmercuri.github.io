{"name":"Mathlib.Tactic.FunProp.StateList","instances":[{"typeNames":["Mathlib.Meta.FunProp.StateList"],"name":"Mathlib.Meta.FunProp.StateList.instAppendStateList","className":"Append"},{"typeNames":["Mathlib.Meta.FunProp.StateListT"],"name":"Mathlib.Meta.FunProp.StateListT.instMonadStateListT","className":"Monad"},{"typeNames":["Mathlib.Meta.FunProp.StateListT"],"name":"Mathlib.Meta.FunProp.StateListT.instAlternativeStateListT","className":"Alternative"},{"typeNames":["Mathlib.Meta.FunProp.StateListT"],"name":"Mathlib.Meta.FunProp.StateListT.instMonadLiftStateListT","className":"MonadLift"},{"typeNames":["Mathlib.Meta.FunProp.StateListT"],"name":"Mathlib.Meta.FunProp.StateListT.instMonadFunctorStateListT","className":"MonadFunctor"},{"typeNames":["Mathlib.Meta.FunProp.StateListT"],"name":"Mathlib.Meta.FunProp.StateListT.instMonadExceptOfStateListT","className":"MonadExceptOf"},{"typeNames":["Mathlib.Meta.FunProp.StateListT"],"name":"Mathlib.Meta.FunProp.instMonadStateOfStateListT","className":"MonadStateOf"},{"typeNames":["Mathlib.Meta.FunProp.StateListT"],"name":"Mathlib.Meta.FunProp.StateListT.monadControl","className":"MonadControl"}],"imports":["Init"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Tactic/FunProp/StateList.lean#L168-L171","name":"Mathlib.Meta.FunProp.StateListT.monadControl","line":168,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateListT.monadControl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateListT.monadControl\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">StateListT</span>.<span class=\"name\">monadControl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/Basic.html#MonadControl\">MonadControl</a> <span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateListT\">Mathlib.Meta.FunProp.StateListT</a> <span class=\"fn\">σ</span> <span class=\"fn\">m</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Tactic/FunProp/StateList.lean#L161-L164","name":"Mathlib.Meta.FunProp.instMonadStateOfStateListT","line":161,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.instMonadStateOfStateListT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.instMonadStateOfStateListT\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instMonadStateOfStateListT</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadStateOf\">MonadStateOf</a> <span class=\"fn\">σ</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateListT\">Mathlib.Meta.FunProp.StateListT</a> <span class=\"fn\">σ</span> <span class=\"fn\">m</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Tactic/FunProp/StateList.lean#L152-L155","name":"Mathlib.Meta.FunProp.StateListT.instMonadExceptOfStateListT","line":152,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateListT.instMonadExceptOfStateListT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateListT.instMonadExceptOfStateListT\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">StateListT</span>.<span class=\"name\">instMonadExceptOfStateListT</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadExceptOf\">MonadExceptOf</a> <span class=\"fn\">ε</span> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadExceptOf\">MonadExceptOf</a> <span class=\"fn\">ε</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateListT\">Mathlib.Meta.FunProp.StateListT</a> <span class=\"fn\">σ</span> <span class=\"fn\">m</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Tactic/FunProp/StateList.lean#L149-L149","name":"Mathlib.Meta.FunProp.StateListT.instMonadFunctorStateListT","line":149,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateListT.instMonadFunctorStateListT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateListT.instMonadFunctorStateListT\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">StateListT</span>.<span class=\"name\">instMonadFunctorStateListT</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadFunctor\">MonadFunctor</a> <span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateListT\">Mathlib.Meta.FunProp.StateListT</a> <span class=\"fn\">σ</span> <span class=\"fn\">m</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Tactic/FunProp/StateList.lean#L146-L146","name":"Mathlib.Meta.FunProp.StateListT.instMonadLiftStateListT","line":146,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateListT.instMonadLiftStateListT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateListT.instMonadLiftStateListT\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">StateListT</span>.<span class=\"name\">instMonadLiftStateListT</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLift\">MonadLift</a> <span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateListT\">Mathlib.Meta.FunProp.StateListT</a> <span class=\"fn\">σ</span> <span class=\"fn\">m</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Tactic/FunProp/StateList.lean#L143-L144","name":"Mathlib.Meta.FunProp.StateListT.lift","line":143,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateListT.lift","doc":"Lift an action from `m α` to `StateListT σ m α`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateListT.lift\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">StateListT</span>.<span class=\"name\">lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateListT\">Mathlib.Meta.FunProp.StateListT</a> <span class=\"fn\">σ</span> <span class=\"fn\">m</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Tactic/FunProp/StateList.lean#L138-L139","name":"Mathlib.Meta.FunProp.StateListT.modifyGet","line":138,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateListT.modifyGet","doc":"Modify and get the state in `StateListT σ m`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateListT.modifyGet\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">StateListT</span>.<span class=\"name\">modifyGet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">σ</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateListT\">Mathlib.Meta.FunProp.StateListT</a> <span class=\"fn\">σ</span> <span class=\"fn\">m</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Tactic/FunProp/StateList.lean#L133-L134","name":"Mathlib.Meta.FunProp.StateListT.set","line":133,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateListT.set","doc":"Set the state in `StateListT σ m`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateListT.set\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">StateListT</span>.<span class=\"name\">set</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><a href=\"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateListT\">Mathlib.Meta.FunProp.StateListT</a> <span class=\"fn\">σ</span> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Tactic/FunProp/StateList.lean#L128-L129","name":"Mathlib.Meta.FunProp.StateListT.get","line":128,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateListT.get","doc":"Return the state from `StateListT σ m`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateListT.get\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">StateListT</span>.<span class=\"name\">get</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateListT\">Mathlib.Meta.FunProp.StateListT</a> <span class=\"fn\">σ</span> <span class=\"fn\">m</span> <span class=\"fn\">σ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Tactic/FunProp/StateList.lean#L122-L124","name":"Mathlib.Meta.FunProp.StateListT.instAlternativeStateListT","line":122,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateListT.instAlternativeStateListT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateListT.instAlternativeStateListT\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">StateListT</span>.<span class=\"name\">instAlternativeStateListT</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/Basic.html#Alternative\">Alternative</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateListT\">Mathlib.Meta.FunProp.StateListT</a> <span class=\"fn\">σ</span> <span class=\"fn\">m</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Tactic/FunProp/StateList.lean#L109-L112","name":"Mathlib.Meta.FunProp.StateListT.instMonadStateListT","line":109,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateListT.instMonadStateListT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateListT.instMonadStateListT\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">StateListT</span>.<span class=\"name\">instMonadStateListT</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateListT\">Mathlib.Meta.FunProp.StateListT</a> <span class=\"fn\">σ</span> <span class=\"fn\">m</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Tactic/FunProp/StateList.lean#L87-L87","name":"Mathlib.Meta.FunProp.StateListM","line":87,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateListM","doc":"The combined state and list monad. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateListM\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">StateListM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(σ : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Tactic/FunProp/StateList.lean#L82-L83","name":"Mathlib.Meta.FunProp.StateListT.run'","line":82,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateListT.run'","doc":"Run `x` on a given state `s`, returning the list of values. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateListT.run'\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">StateListT</span>.<span class=\"name\">run'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Functor\">Functor</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateListT\">Mathlib.Meta.FunProp.StateListT</a> <span class=\"fn\">σ</span> <span class=\"fn\">m</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\">σ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Tactic/FunProp/StateList.lean#L77-L78","name":"Mathlib.Meta.FunProp.StateListT.run","line":77,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateListT.run","doc":"Run `x` on a given state `s`, returning the list of values with corresponding states. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateListT.run\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">StateListT</span>.<span class=\"name\">run</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Functor\">Functor</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateListT\">Mathlib.Meta.FunProp.StateListT</a> <span class=\"fn\">σ</span> <span class=\"fn\">m</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\">σ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">σ</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Tactic/FunProp/StateList.lean#L70-L71","name":"Mathlib.Meta.FunProp.StateListT","line":70,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateListT","doc":"The combined state and list monad transformer. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateListT\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">StateListT</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(σ : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u → <a href=\"./foundational_types.html\">Type</a> v</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (max u v)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Tactic/FunProp/StateList.lean#L59-L59","name":"Mathlib.Meta.FunProp.StateList.instAppendStateList","line":59,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateList.instAppendStateList","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateList.instAppendStateList\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">StateList</span>.<span class=\"name\">instAppendStateList</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Append\">Append</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateList\">Mathlib.Meta.FunProp.StateList</a> <span class=\"fn\">σ</span> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Tactic/FunProp/StateList.lean#L35-L37","name":"Mathlib.Meta.FunProp.StateList.cons","line":35,"kind":"ctor","docLink":"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateList.cons","doc":"If `a : α`, `s : σ` and `l : List α`, then `.cons a s l`, is the\nlist with first element `a` with state `s` and `l` as the rest of the list. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateList.cons\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">StateList</span>.<span class=\"name\">cons</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateList\">Mathlib.Meta.FunProp.StateList</a> <span class=\"fn\">σ</span> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateList\">Mathlib.Meta.FunProp.StateList</a> <span class=\"fn\">σ</span> <span class=\"fn\">α</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Tactic/FunProp/StateList.lean#L33-L34","name":"Mathlib.Meta.FunProp.StateList.nil","line":33,"kind":"ctor","docLink":"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateList.nil","doc":".nil is the empty list. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateList.nil\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">StateList</span>.<span class=\"name\">nil</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateList\">Mathlib.Meta.FunProp.StateList</a> <span class=\"fn\">σ</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Tactic/FunProp/StateList.lean#L32-L37","name":"Mathlib.Meta.FunProp.StateList","line":32,"kind":"inductive","docLink":"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateList","doc":"`StateList` is a List with a state associated to each element.\nThis is used instead of `List (α × σ)` as it is more efficient. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/StateList.html#Mathlib.Meta.FunProp.StateList\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">StateList</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(σ : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"}]}