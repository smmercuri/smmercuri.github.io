{"name":"Mathlib.Tactic.Linter.MinImports","instances":[],"imports":["Init","ImportGraph.Imports","Mathlib.Tactic.MinImports"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Tactic/Linter/MinImports.lean#L60-L99","name":"Mathlib.Linter.MinImports.minImportsLinter","line":60,"kind":"def","docLink":"./Mathlib/Tactic/Linter/MinImports.html#Mathlib.Linter.MinImports.minImportsLinter","doc":"The `minImports` linter incrementally computes the minimal imports needed for each file to build.\nWhenever it detects that a new command requires an increase in the (transitive) imports that it\ncomputed so far, it emits a warning mentioning the bigger minimal imports.\n\nUnlike the related `#min_imports` command, the linter takes into account notation and tactic\ninformation.\nIt also works incrementally, providing information that it better suited, for instance, to split\nfiles.\n "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/MinImports.html#Mathlib.Linter.MinImports.minImportsLinter\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">MinImports</span>.<span class=\"name\">minImportsLinter</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Linter\">Lean.Linter</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Tactic/Linter/MinImports.lean#L57-L57","name":"Mathlib.Linter.MinImports.getLinterHash","line":57,"kind":"def","docLink":"./Mathlib/Tactic/Linter/MinImports.html#Mathlib.Linter.MinImports.getLinterHash","doc":"Gets the value of the `linter.minImports` option. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/MinImports.html#Mathlib.Linter.MinImports.getLinterHash\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">MinImports</span>.<span class=\"name\">getLinterHash</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Lean/Data/Options.html#Lean.Options\">Lean.Options</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Tactic/Linter/MinImports.lean#L37-L50","name":"Mathlib.Linter.linter.minImports","line":37,"kind":"opaque","docLink":"./Mathlib/Tactic/Linter/MinImports.html#Mathlib.Linter.linter.minImports","doc":"The `minImports` linter incrementally computes the minimal imports needed for each file to build.\nWhenever it detects that a new command requires an increase in the (transitive) imports that it\ncomputed so far, it emits a warning mentioning the bigger minimal imports.\n\nUnlike the related `#min_imports` command, the linter takes into account notation and tactic\ninformation.\nIt also works incrementally, providing information that it better suited, for instance, to split\nfiles.\n "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/MinImports.html#Mathlib.Linter.linter.minImports\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">linter</span>.<span class=\"name\">minImports</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Option\">Lean.Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Tactic/Linter/MinImports.lean#L34-L35","name":"Mathlib.Linter.«command#reset_min_imports»","line":34,"kind":"def","docLink":"./Mathlib/Tactic/Linter/MinImports.html#Mathlib.Linter.«command#reset_min_imports»","doc":"`#reset_min_imports` sets to empty the current list of cumulative imports. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/MinImports.html#Mathlib.Linter.«command#reset_min_imports»\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">«command#reset_min_imports»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Tactic/Linter/MinImports.lean#L31-L32","name":"Mathlib.Linter.minImportsRef","line":31,"kind":"opaque","docLink":"./Mathlib/Tactic/Linter/MinImports.html#Mathlib.Linter.minImportsRef","doc":"`minImportsRef` keeps track of cumulative imports across multiple commands. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/MinImports.html#Mathlib.Linter.minImportsRef\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">minImportsRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">Lean.NameSet</a></span></div></div>"}]}