{"name":"Mathlib.Tactic.Linter.RefineLinter","instances":[],"imports":["Init","Lean.Elab.Command","Lean.Linter.Util"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Tactic/Linter/RefineLinter.lean#L48-L56","name":"Mathlib.Linter.refine.refineLinter","line":48,"kind":"def","docLink":"./Mathlib/Tactic/Linter/RefineLinter.html#Mathlib.Linter.refine.refineLinter","doc":"The \"refine\" linter flags usages of the `refine'` tactic.\n\nThe tactics `refine` and `refine'` are similar, but they handle meta-variables slightly differently.\nThis means that they are not completely interchangeable, nor can one completely replace the other.\nHowever, `refine` is more readable and (heuristically) tends to be more efficient on average.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/RefineLinter.html#Mathlib.Linter.refine.refineLinter\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">refine</span>.<span class=\"name\">refineLinter</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.Linter\">Lean.Linter</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Tactic/Linter/RefineLinter.lean#L45-L45","name":"Mathlib.Linter.refine.getLinterHash","line":45,"kind":"def","docLink":"./Mathlib/Tactic/Linter/RefineLinter.html#Mathlib.Linter.refine.getLinterHash","doc":"The \"refine\" linter flags usages of the `refine'` tactic.\n\nThe tactics `refine` and `refine'` are similar, but they handle meta-variables slightly differently.\nThis means that they are not completely interchangeable, nor can one completely replace the other.\nHowever, `refine` is more readable and (heuristically) tends to be more efficient on average.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/RefineLinter.html#Mathlib.Linter.refine.getLinterHash\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">refine</span>.<span class=\"name\">getLinterHash</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Lean/Data/Options.html#Lean.Options\">Lean.Options</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Tactic/Linter/RefineLinter.lean#L33-L37","name":"Mathlib.Linter.refine.getRefine'","line":33,"kind":"opaque","docLink":"./Mathlib/Tactic/Linter/RefineLinter.html#Mathlib.Linter.refine.getRefine'","doc":"`getRefine' t` returns all usages of the `refine'` tactic in the input syntax `t`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/RefineLinter.html#Mathlib.Linter.refine.getRefine'\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">refine</span>.<span class=\"name\">getRefine'</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a> â†’ <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Tactic/Linter/RefineLinter.lean#L25-L29","name":"Mathlib.Linter.refine.linter.refine","line":25,"kind":"opaque","docLink":"./Mathlib/Tactic/Linter/RefineLinter.html#Mathlib.Linter.refine.linter.refine","doc":"The refine linter emits a warning on usages of `refine'`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/RefineLinter.html#Mathlib.Linter.refine.linter.refine\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">refine</span>.<span class=\"name\">linter</span>.<span class=\"name\">refine</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Options.html#Lean.Option\">Lean.Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"}]}