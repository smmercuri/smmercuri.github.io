{"name":"Mathlib.Tactic.NormNum.LegendreSymbol","instances":[],"imports":["Init","Mathlib.NumberTheory.LegendreSymbol.JacobiSymbol"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Tactic/NormNum/LegendreSymbol.lean#L412-L421","name":"Tactic.NormNum.evalLegendreSym","line":412,"kind":"def","docLink":"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Tactic.NormNum.evalLegendreSym","doc":"This is the `norm_num` plug-in that evaluates Legendre symbols. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Tactic.NormNum.evalLegendreSym\"><span class=\"name\">Tactic</span>.<span class=\"name\">NormNum</span>.<span class=\"name\">evalLegendreSym</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/NormNum/Core.html#Mathlib.Meta.NormNum.NormNumExt\">Mathlib.Meta.NormNum.NormNumExt</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Tactic/NormNum/LegendreSymbol.lean#L401-L408","name":"Tactic.NormNum.evalJacobiSymNat","line":401,"kind":"def","docLink":"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Tactic.NormNum.evalJacobiSymNat","doc":"This is the `norm_num` plug-in that evaluates Jacobi symbols on natural numbers. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Tactic.NormNum.evalJacobiSymNat\"><span class=\"name\">Tactic</span>.<span class=\"name\">NormNum</span>.<span class=\"name\">evalJacobiSymNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/NormNum/Core.html#Mathlib.Meta.NormNum.NormNumExt\">Mathlib.Meta.NormNum.NormNumExt</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Tactic/NormNum/LegendreSymbol.lean#L389-L396","name":"Tactic.NormNum.evalJacobiSym","line":389,"kind":"def","docLink":"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Tactic.NormNum.evalJacobiSym","doc":"This is the `norm_num` plug-in that evaluates Jacobi symbols. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Tactic.NormNum.evalJacobiSym\"><span class=\"name\">Tactic</span>.<span class=\"name\">NormNum</span>.<span class=\"name\">evalJacobiSym</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/NormNum/Core.html#Mathlib.Meta.NormNum.NormNumExt\">Mathlib.Meta.NormNum.NormNumExt</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Tactic/NormNum/LegendreSymbol.lean#L350-L367","name":"Mathlib.Meta.NormNum.proveJacobiSym","line":350,"kind":"def","docLink":"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.proveJacobiSym","doc":"This evaluates `r := jacobiSym a b` and produces a proof term for the equality.\nThis is done by reducing to `r := jacobiSymNat (a % b) b`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.proveJacobiSym\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">NormNum</span>.<span class=\"name\">proveJacobiSym</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ea : <span class=\"fn\">Q(<a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(eb : <span class=\"fn\">Q(<a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(er : <span class=\"fn\">Q(<a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>) × <span class=\"fn\">Q(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">«$ea»</span> <span class=\"fn\">«$eb»</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">«$er»</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Tactic/NormNum/LegendreSymbol.lean#L304-L345","name":"Mathlib.Meta.NormNum.proveJacobiSymNat","line":304,"kind":"def","docLink":"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.proveJacobiSymNat","doc":"This evaluates `r := jacobiSymNat a b` and produces a proof term for the equality\nby removing powers of `2` from `b` and then calling `proveJacobiSymOdd`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.proveJacobiSymNat\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">NormNum</span>.<span class=\"name\">proveJacobiSymNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ea : <span class=\"fn\">Q(<a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(eb : <span class=\"fn\">Q(<a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(er : <span class=\"fn\">Q(<a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>) × <span class=\"fn\">Q(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat\">Mathlib.Meta.NormNum.jacobiSymNat</a> <span class=\"fn\">«$ea»</span> <span class=\"fn\">«$eb»</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">«$er»</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Tactic/NormNum/LegendreSymbol.lean#L232-L299","name":"Mathlib.Meta.NormNum.proveJacobiSymOdd","line":232,"kind":"opaque","docLink":"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.proveJacobiSymOdd","doc":"This evaluates `r := jacobiSymNat a b` recursively using quadratic reciprocity\nand produces a proof term for the equality, assuming that `a < b` and `b` is odd. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.proveJacobiSymOdd\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">NormNum</span>.<span class=\"name\">proveJacobiSymOdd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ea : <span class=\"fn\">Q(<a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(eb : <span class=\"fn\">Q(<a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(er : <span class=\"fn\">Q(<a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span>) × <span class=\"fn\">Q(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat\">Mathlib.Meta.NormNum.jacobiSymNat</a> <span class=\"fn\">«$ea»</span> <span class=\"fn\">«$eb»</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">«$er»</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Tactic/NormNum/LegendreSymbol.lean#L207-L209","name":"Mathlib.Meta.NormNum.isInt_jacobiSymNat","line":207,"kind":"theorem","docLink":"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.isInt_jacobiSymNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.isInt_jacobiSymNat\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">NormNum</span>.<span class=\"name\">isInt_jacobiSymNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{na : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{nb : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/Result.html#Mathlib.Meta.NormNum.IsNat\">Mathlib.Meta.NormNum.IsNat</a> <span class=\"fn\">a</span> <span class=\"fn\">na</span></span> →\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/Result.html#Mathlib.Meta.NormNum.IsNat\">Mathlib.Meta.NormNum.IsNat</a> <span class=\"fn\">b</span> <span class=\"fn\">nb</span></span> →\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat\">Mathlib.Meta.NormNum.jacobiSymNat</a> <span class=\"fn\">na</span> <span class=\"fn\">nb</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/Result.html#Mathlib.Meta.NormNum.IsInt\">Mathlib.Meta.NormNum.IsInt</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat\">Mathlib.Meta.NormNum.jacobiSymNat</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">r</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Tactic/NormNum/LegendreSymbol.lean#L203-L205","name":"Mathlib.Meta.NormNum.isInt_jacobiSym","line":203,"kind":"theorem","docLink":"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.isInt_jacobiSym","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.isInt_jacobiSym\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">NormNum</span>.<span class=\"name\">isInt_jacobiSym</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{na : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{nb : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/Result.html#Mathlib.Meta.NormNum.IsInt\">Mathlib.Meta.NormNum.IsInt</a> <span class=\"fn\">a</span> <span class=\"fn\">na</span></span> →\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/Result.html#Mathlib.Meta.NormNum.IsNat\">Mathlib.Meta.NormNum.IsNat</a> <span class=\"fn\">b</span> <span class=\"fn\">nb</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">na</span> <span class=\"fn\">nb</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/Result.html#Mathlib.Meta.NormNum.IsInt\">Mathlib.Meta.NormNum.IsInt</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span> <span class=\"fn\">r</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Tactic/NormNum/LegendreSymbol.lean#L198-L200","name":"Mathlib.Meta.NormNum.jacobiSymNat.qr₃_mod","line":198,"kind":"theorem","docLink":"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat.qr₃_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat.qr₃_mod\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">NormNum</span>.<span class=\"name\">jacobiSymNat</span>.<span class=\"name\">qr₃_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ab : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">4</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">3</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">4</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">3</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">ab</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hr : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat\">Mathlib.Meta.NormNum.jacobiSymNat</a> <span class=\"fn\">ab</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat\">Mathlib.Meta.NormNum.jacobiSymNat</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">r</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Tactic/NormNum/LegendreSymbol.lean#L193-L195","name":"Mathlib.Meta.NormNum.jacobiSymNat.qr₃","line":193,"kind":"theorem","docLink":"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat.qr₃","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat.qr₃\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">NormNum</span>.<span class=\"name\">jacobiSymNat</span>.<span class=\"name\">qr₃</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">4</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">3</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">4</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">3</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hr : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat\">Mathlib.Meta.NormNum.jacobiSymNat</a> <span class=\"fn\">b</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat\">Mathlib.Meta.NormNum.jacobiSymNat</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">r</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Tactic/NormNum/LegendreSymbol.lean#L188-L190","name":"Mathlib.Meta.NormNum.jacobiSymNat.qr₁'_mod","line":188,"kind":"theorem","docLink":"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat.qr₁'_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat.qr₁'_mod\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">NormNum</span>.<span class=\"name\">jacobiSymNat</span>.<span class=\"name\">qr₁'_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ab : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">4</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">ab</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hr : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat\">Mathlib.Meta.NormNum.jacobiSymNat</a> <span class=\"fn\">ab</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat\">Mathlib.Meta.NormNum.jacobiSymNat</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Tactic/NormNum/LegendreSymbol.lean#L183-L185","name":"Mathlib.Meta.NormNum.jacobiSymNat.qr₁'","line":183,"kind":"theorem","docLink":"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat.qr₁'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat.qr₁'\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">NormNum</span>.<span class=\"name\">jacobiSymNat</span>.<span class=\"name\">qr₁'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">4</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hr : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat\">Mathlib.Meta.NormNum.jacobiSymNat</a> <span class=\"fn\">b</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat\">Mathlib.Meta.NormNum.jacobiSymNat</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Tactic/NormNum/LegendreSymbol.lean#L178-L180","name":"Mathlib.Meta.NormNum.jacobiSymNat.qr₁_mod","line":178,"kind":"theorem","docLink":"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat.qr₁_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat.qr₁_mod\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">NormNum</span>.<span class=\"name\">jacobiSymNat</span>.<span class=\"name\">qr₁_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ab : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">4</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">ab</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hr : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat\">Mathlib.Meta.NormNum.jacobiSymNat</a> <span class=\"fn\">ab</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat\">Mathlib.Meta.NormNum.jacobiSymNat</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Tactic/NormNum/LegendreSymbol.lean#L173-L175","name":"Mathlib.Meta.NormNum.jacobiSymNat.qr₁","line":173,"kind":"theorem","docLink":"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat.qr₁","doc":"Use quadratic reciproity to reduce to smaller `b`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat.qr₁\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">NormNum</span>.<span class=\"name\">jacobiSymNat</span>.<span class=\"name\">qr₁</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">4</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hr : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat\">Mathlib.Meta.NormNum.jacobiSymNat</a> <span class=\"fn\">b</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat\">Mathlib.Meta.NormNum.jacobiSymNat</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Tactic/NormNum/LegendreSymbol.lean#L165-L169","name":"Mathlib.Meta.NormNum.jacobiSymNat.even_odd₅","line":165,"kind":"theorem","docLink":"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat.even_odd₅","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat.even_odd₅\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">NormNum</span>.<span class=\"name\">jacobiSymNat</span>.<span class=\"name\">even_odd₅</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">8</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">5</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hr : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat\">Mathlib.Meta.NormNum.jacobiSymNat</a> <span class=\"fn\">c</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat\">Mathlib.Meta.NormNum.jacobiSymNat</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">r</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Tactic/NormNum/LegendreSymbol.lean#L158-L162","name":"Mathlib.Meta.NormNum.jacobiSymNat.even_odd₃","line":158,"kind":"theorem","docLink":"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat.even_odd₃","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat.even_odd₃\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">NormNum</span>.<span class=\"name\">jacobiSymNat</span>.<span class=\"name\">even_odd₃</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">8</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">3</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hr : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat\">Mathlib.Meta.NormNum.jacobiSymNat</a> <span class=\"fn\">c</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat\">Mathlib.Meta.NormNum.jacobiSymNat</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">r</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Tactic/NormNum/LegendreSymbol.lean#L151-L155","name":"Mathlib.Meta.NormNum.jacobiSymNat.even_odd₇","line":151,"kind":"theorem","docLink":"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat.even_odd₇","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat.even_odd₇\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">NormNum</span>.<span class=\"name\">jacobiSymNat</span>.<span class=\"name\">even_odd₇</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">8</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">7</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hr : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat\">Mathlib.Meta.NormNum.jacobiSymNat</a> <span class=\"fn\">c</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat\">Mathlib.Meta.NormNum.jacobiSymNat</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Tactic/NormNum/LegendreSymbol.lean#L144-L148","name":"Mathlib.Meta.NormNum.jacobiSymNat.even_odd₁","line":144,"kind":"theorem","docLink":"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat.even_odd₁","doc":"If `a` is even and `b` is odd, then we can remove a factor `2` from `a`,\nbut we may have to change the sign, depending on `b % 8`.\nWe give one version for each of the four odd residue classes mod `8`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat.even_odd₁\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">NormNum</span>.<span class=\"name\">jacobiSymNat</span>.<span class=\"name\">even_odd₁</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">8</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hr : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat\">Mathlib.Meta.NormNum.jacobiSymNat</a> <span class=\"fn\">c</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat\">Mathlib.Meta.NormNum.jacobiSymNat</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Tactic/NormNum/LegendreSymbol.lean#L135-L138","name":"Mathlib.Meta.NormNum.jacobiSymNat.double_even","line":135,"kind":"theorem","docLink":"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat.double_even","doc":"If `a` is divisible by `4` and `b` is odd, then we can remove the factor `4` from `a`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat.double_even\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">NormNum</span>.<span class=\"name\">jacobiSymNat</span>.<span class=\"name\">double_even</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">4</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">4</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hr : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat\">Mathlib.Meta.NormNum.jacobiSymNat</a> <span class=\"fn\">c</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat\">Mathlib.Meta.NormNum.jacobiSymNat</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Tactic/NormNum/LegendreSymbol.lean#L121-L131","name":"Mathlib.Meta.NormNum.jacobiSymNat.odd_even","line":121,"kind":"theorem","docLink":"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat.odd_even","doc":"When `a` is odd and `b` is even, we can replace `b` by `b / 2`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat.odd_even\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">NormNum</span>.<span class=\"name\">jacobiSymNat</span>.<span class=\"name\">odd_even</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hr : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat\">Mathlib.Meta.NormNum.jacobiSymNat</a> <span class=\"fn\">a</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat\">Mathlib.Meta.NormNum.jacobiSymNat</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Tactic/NormNum/LegendreSymbol.lean#L109-L117","name":"Mathlib.Meta.NormNum.jacobiSymNat.even_even","line":109,"kind":"theorem","docLink":"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat.even_even","doc":"The symbol vanishes when both entries are even (and `b / 2 ≠ 0`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat.even_even\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">NormNum</span>.<span class=\"name\">jacobiSymNat</span>.<span class=\"name\">even_even</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hb₀ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat.beq\">Nat.beq</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">2</span></span>)</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hb₁ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat\">Mathlib.Meta.NormNum.jacobiSymNat</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Tactic/NormNum/LegendreSymbol.lean#L103-L105","name":"Mathlib.Meta.NormNum.jacobiSymNat.mod_left","line":103,"kind":"theorem","docLink":"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat.mod_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat.mod_left\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">NormNum</span>.<span class=\"name\">jacobiSymNat</span>.<span class=\"name\">mod_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ab : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">ab</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hr : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat\">Mathlib.Meta.NormNum.jacobiSymNat</a> <span class=\"fn\">ab</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat\">Mathlib.Meta.NormNum.jacobiSymNat</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Tactic/NormNum/LegendreSymbol.lean#L98-L100","name":"Mathlib.Meta.NormNum.JacobiSym.mod_left","line":98,"kind":"theorem","docLink":"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.JacobiSym.mod_left","doc":"The value depends only on the residue class of `a` mod `b`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.JacobiSym.mod_left\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">NormNum</span>.<span class=\"name\">JacobiSym</span>.<span class=\"name\">mod_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ab' : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ab : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b' : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hb' : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\">b'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">ab</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">ab'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">ab</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hr : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat\">Mathlib.Meta.NormNum.jacobiSymNat</a> <span class=\"fn\">ab'</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Tactic/NormNum/LegendreSymbol.lean#L92-L94","name":"Mathlib.Meta.NormNum.LegendreSym.to_jacobiSym","line":92,"kind":"theorem","docLink":"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.LegendreSym.to_jacobiSym","doc":"Turn a Legendre symbol into a Jacobi symbol. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.LegendreSym.to_jacobiSym\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">NormNum</span>.<span class=\"name\">LegendreSym</span>.<span class=\"name\">to_jacobiSym</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(pp : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hr : <span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/Result.html#Mathlib.Meta.NormNum.IsInt\">Mathlib.Meta.NormNum.IsInt</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.html#jacobiSym\">jacobiSym</a> <span class=\"fn\">a</span> <span class=\"fn\">p</span></span>)</span> <span class=\"fn\">r</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/Result.html#Mathlib.Meta.NormNum.IsInt\">Mathlib.Meta.NormNum.IsInt</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/LegendreSymbol/Basic.html#legendreSym\">legendreSym</a> <span class=\"fn\">p</span> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Tactic/NormNum/LegendreSymbol.lean#L86-L87","name":"Mathlib.Meta.NormNum.jacobiSymNat.one_left","line":86,"kind":"theorem","docLink":"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat.one_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat.one_left\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">NormNum</span>.<span class=\"name\">jacobiSymNat</span>.<span class=\"name\">one_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat\">Mathlib.Meta.NormNum.jacobiSymNat</a> <span class=\"fn\">1</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Tactic/NormNum/LegendreSymbol.lean#L76-L82","name":"Mathlib.Meta.NormNum.jacobiSymNat.zero_left","line":76,"kind":"theorem","docLink":"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat.zero_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat.zero_left\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">NormNum</span>.<span class=\"name\">jacobiSymNat</span>.<span class=\"name\">zero_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat.beq\">Nat.beq</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">2</span></span>)</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat\">Mathlib.Meta.NormNum.jacobiSymNat</a> <span class=\"fn\">0</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Tactic/NormNum/LegendreSymbol.lean#L72-L73","name":"Mathlib.Meta.NormNum.jacobiSymNat.one_right","line":72,"kind":"theorem","docLink":"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat.one_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat.one_right\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">NormNum</span>.<span class=\"name\">jacobiSymNat</span>.<span class=\"name\">one_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat\">Mathlib.Meta.NormNum.jacobiSymNat</a> <span class=\"fn\">a</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Tactic/NormNum/LegendreSymbol.lean#L68-L69","name":"Mathlib.Meta.NormNum.jacobiSymNat.zero_right","line":68,"kind":"theorem","docLink":"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat.zero_right","doc":"Base cases: `b = 0`, `b = 1`, `a = 0`, `a = 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat.zero_right\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">NormNum</span>.<span class=\"name\">jacobiSymNat</span>.<span class=\"name\">zero_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat\">Mathlib.Meta.NormNum.jacobiSymNat</a> <span class=\"fn\">a</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Tactic/NormNum/LegendreSymbol.lean#L55-L56","name":"Mathlib.Meta.NormNum.jacobiSymNat","line":55,"kind":"def","docLink":"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat","doc":"The Jacobi symbol restricted to natural numbers in both arguments. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/NormNum/LegendreSymbol.html#Mathlib.Meta.NormNum.jacobiSymNat\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">NormNum</span>.<span class=\"name\">jacobiSymNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></div></div>"}]}