{"name":"Mathlib.Tactic.Relation.Rfl","instances":[],"imports":["Init","Lean.Meta.Tactic.Rfl"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Tactic/Relation/Rfl.lean#L30-L42","name":"Lean.Expr.relSidesIfRefl?","line":30,"kind":"def","docLink":"./Mathlib/Tactic/Relation/Rfl.html#Lean.Expr.relSidesIfRefl?","doc":"If `e` is the form `@R .. x y`, where `R` is a reflexive\nrelation, return `some (R, x, y)`.\nAs a special case, if `e` is `@HEq α a β b`, return ``some (`HEq, a, b)``. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Relation/Rfl.html#Lean.Expr.relSidesIfRefl?\"><span class=\"name\">Lean</span>.<span class=\"name\">Expr</span>.<span class=\"name\">relSidesIfRefl?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Tactic/Relation/Rfl.lean#L24-L25","name":"Mathlib.Tactic.rflTac","line":24,"kind":"def","docLink":"./Mathlib/Tactic/Relation/Rfl.html#Mathlib.Tactic.rflTac","doc":"This tactic applies to a goal whose target has the form `x ~ x`, where `~` is a reflexive\nrelation, that is, a relation which has a reflexive lemma tagged with the attribute [refl].\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Relation/Rfl.html#Mathlib.Tactic.rflTac\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">rflTac</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.TacticM\">Lean.Elab.Tactic.TacticM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"}]}