{"name":"Mathlib.Topology.Algebra.Nonarchimedean.AdicTopology","instances":[{"typeNames":[],"name":"WithIdeal.instTopologicalSpace","className":"TopologicalSpace"},{"typeNames":[],"name":"WithIdeal.instNonarchimedeanRing","className":"NonarchimedeanRing"},{"typeNames":[],"name":"WithIdeal.instUniformSpace","className":"UniformSpace"},{"typeNames":[],"name":"WithIdeal.instUniformAddGroup","className":"UniformAddGroup"}],"imports":["Init","Mathlib.RingTheory.Ideal.Maps","Mathlib.Topology.Algebra.Nonarchimedean.Bases","Mathlib.Topology.Algebra.UniformRing"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.lean#L232-L233","name":"WithIdeal.topologicalSpaceModule","line":232,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#WithIdeal.topologicalSpaceModule","doc":"The adic topology on an `R` module coming from the ideal `WithIdeal.I`.\nThis cannot be an instance because `R` cannot be inferred from `M`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#WithIdeal.topologicalSpaceModule\"><span class=\"name\">WithIdeal</span>.<span class=\"name\">topologicalSpaceModule</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#WithIdeal\">WithIdeal</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(M : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.lean#L227-L228","name":"WithIdeal.instUniformAddGroup","line":227,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#WithIdeal.instUniformAddGroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#WithIdeal.instUniformAddGroup\"><span class=\"name\">WithIdeal</span>.<span class=\"name\">instUniformAddGroup</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#WithIdeal\">WithIdeal</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/UniformGroup.html#UniformAddGroup\">UniformAddGroup</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.lean#L224-L225","name":"WithIdeal.instUniformSpace","line":224,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#WithIdeal.instUniformSpace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#WithIdeal.instUniformSpace\"><span class=\"name\">WithIdeal</span>.<span class=\"name\">instUniformSpace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#WithIdeal\">WithIdeal</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.lean#L221-L222","name":"WithIdeal.instNonarchimedeanRing","line":221,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#WithIdeal.instNonarchimedeanRing","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#WithIdeal.instNonarchimedeanRing\"><span class=\"name\">WithIdeal</span>.<span class=\"name\">instNonarchimedeanRing</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#WithIdeal\">WithIdeal</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Nonarchimedean/Basic.html#NonarchimedeanRing\">NonarchimedeanRing</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.lean#L218-L219","name":"WithIdeal.instTopologicalSpace","line":218,"kind":"instance","docLink":"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#WithIdeal.instTopologicalSpace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#WithIdeal.instTopologicalSpace\"><span class=\"name\">WithIdeal</span>.<span class=\"name\">instTopologicalSpace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#WithIdeal\">WithIdeal</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.lean#L211-L211","name":"WithIdeal.i","line":211,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#WithIdeal.i","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#WithIdeal.i\"><span class=\"name\">WithIdeal</span>.<span class=\"name\">i</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#WithIdeal\">WithIdeal</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.lean#L210-L210","name":"WithIdeal.mk","line":210,"kind":"ctor","docLink":"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#WithIdeal.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#WithIdeal.mk\"><span class=\"name\">WithIdeal</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#WithIdeal\">WithIdeal</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.lean#L210-L211","name":"WithIdeal","line":210,"kind":"class","docLink":"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#WithIdeal","doc":"The ring `R` is equipped with a preferred ideal. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#WithIdeal\"><span class=\"name\">WithIdeal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_2</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.lean#L193-L205","name":"is_bot_adic_iff","line":193,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#is_bot_adic_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#is_bot_adic_iff\"><span class=\"name\">is_bot_adic_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Ring/Basic.html#TopologicalRing\">TopologicalRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#IsAdic\">IsAdic</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Order.html#DiscreteTopology\">DiscreteTopology</a> <span class=\"fn\">A</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.lean#L176-L191","name":"is_ideal_adic_pow","line":176,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#is_ideal_adic_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#is_ideal_adic_pow\"><span class=\"name\">is_ideal_adic_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Ring/Basic.html#TopologicalRing\">TopologicalRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#IsAdic\">IsAdic</a> <span class=\"fn\">J</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#IsAdic\">IsAdic</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.lean#L146-L172","name":"isAdic_iff","line":146,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#isAdic_iff","doc":"A topological ring is `J`-adic if and only if it admits the powers of `J` as a basis of\nopen neighborhoods of zero. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#isAdic_iff\"><span class=\"name\">isAdic_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[top : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Ring/Basic.html#TopologicalRing\">TopologicalRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#IsAdic\">IsAdic</a> <span class=\"fn\">J</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsOpen\">IsOpen</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ <span class=\"fn\">s</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span></span>, <span class=\"fn\">∃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">J</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">s</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.lean#L141-L142","name":"IsAdic","line":141,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#IsAdic","doc":"Given a topology on a ring `R` and an ideal `J`, `IsAdic J` means the topology is the\n`J`-adic one. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#IsAdic\"><span class=\"name\">IsAdic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[H : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(J : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.lean#L128-L133","name":"Ideal.openAddSubgroup","line":128,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#Ideal.openAddSubgroup","doc":"The elements of the basis of neighborhoods of zero for the `I`-adic topology\non an `R`-module `M`, seen as open additive subgroups of `M`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#Ideal.openAddSubgroup\"><span class=\"name\">Ideal</span>.<span class=\"name\">openAddSubgroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/OpenSubgroup.html#OpenAddSubgroup\">OpenAddSubgroup</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.lean#L122-L124","name":"Ideal.adicModuleTopology","line":122,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#Ideal.adicModuleTopology","doc":"The topology on an `R`-module `M` associated to an ideal `M`. Submodules $I^n M$,\nwritten `I^n • ⊤` form a basis of neighborhoods of zero. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#Ideal.adicModuleTopology\"><span class=\"name\">Ideal</span>.<span class=\"name\">adicModuleTopology</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(M : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.lean#L108-L118","name":"Ideal.adic_module_basis","line":108,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#Ideal.adic_module_basis","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#Ideal.adic_module_basis\"><span class=\"name\">Ideal</span>.<span class=\"name\">adic_module_basis</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(M : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span>.ringFilterBasis</span>.SubmodulesBasis</span> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.lean#L99-L104","name":"Ideal.hasBasis_nhds_adic","line":99,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#Ideal.hasBasis_nhds_adic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#Ideal.hasBasis_nhds_adic\"><span class=\"name\">Ideal</span>.<span class=\"name\">hasBasis_nhds_adic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">x</span></span>)</span>.HasBasis</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">_n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <a href=\"./Init/Prelude.html#True\">True</a></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">y</span> : <span class=\"fn\">R</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span></span>)</span> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.lean#L86-L97","name":"Ideal.hasBasis_nhds_zero_adic","line":86,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#Ideal.hasBasis_nhds_zero_adic","doc":"For the `I`-adic topology, the neighborhoods of zero has basis given by the powers of `I`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#Ideal.hasBasis_nhds_zero_adic\"><span class=\"name\">Ideal</span>.<span class=\"name\">hasBasis_nhds_zero_adic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span></span>)</span>.HasBasis</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">_n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <a href=\"./Init/Prelude.html#True\">True</a></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.lean#L82-L83","name":"Ideal.nonarchimedean","line":82,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#Ideal.nonarchimedean","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#Ideal.nonarchimedean\"><span class=\"name\">Ideal</span>.<span class=\"name\">nonarchimedean</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Nonarchimedean/Basic.html#NonarchimedeanRing\">NonarchimedeanRing</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.lean#L79-L80","name":"Ideal.adicTopology","line":79,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#Ideal.adicTopology","doc":"The adic topology associated to an ideal `I`. This topology admits powers of `I` as a basis of\nneighborhoods of zero. It is compatible with the ring structure and is non-archimedean. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#Ideal.adicTopology\"><span class=\"name\">Ideal</span>.<span class=\"name\">adicTopology</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.lean#L74-L75","name":"Ideal.ringFilterBasis","line":74,"kind":"def","docLink":"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#Ideal.ringFilterBasis","doc":"The adic ring filter basis associated to an ideal `I` is made of powers of `I`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#Ideal.ringFilterBasis\"><span class=\"name\">Ideal</span>.<span class=\"name\">ringFilterBasis</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/FilterBasis.html#RingFilterBasis\">RingFilterBasis</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.lean#L52-L71","name":"Ideal.adic_basis","line":52,"kind":"theorem","docLink":"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#Ideal.adic_basis","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Algebra/Nonarchimedean/AdicTopology.html#Ideal.adic_basis\"><span class=\"name\">Ideal</span>.<span class=\"name\">adic_basis</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Nonarchimedean/Bases.html#SubmodulesRingBasis\">SubmodulesRingBasis</a> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></span></span></div></div>"}]}