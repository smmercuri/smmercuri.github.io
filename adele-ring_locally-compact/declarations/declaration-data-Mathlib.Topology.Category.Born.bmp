{"name":"Mathlib.Topology.Category.Born","instances":[{"typeNames":["Born","_builtin_typeu"],"name":"Born.instCoeSortType","className":"CoeSort"},{"typeNames":["CategoryTheory.Bundled.α"],"name":"Born.instBornologyα","className":"Bornology"},{"typeNames":["Born"],"name":"Born.instInhabited","className":"Inhabited"},{"typeNames":["LocallyBoundedMap"],"name":"Born.instBundledHomBornologyLocallyBoundedMap","className":"CategoryTheory.BundledHom"},{"typeNames":["Born"],"name":"Born.instLargeCategory","className":"CategoryTheory.Category"},{"typeNames":["Born"],"name":"Born.instConcreteCategory","className":"CategoryTheory.ConcreteCategory"}],"imports":["Init","Mathlib.CategoryTheory.ConcreteCategory.BundledHom","Mathlib.Topology.Bornology.Hom"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/Born.lean#L47-L48","name":"Born.instConcreteCategory","line":47,"kind":"instance","docLink":"./Mathlib/Topology/Category/Born.html#Born.instConcreteCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Born.html#Born.instConcreteCategory\"><span class=\"name\">Born</span>.<span class=\"name\">instConcreteCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <a href=\"./Mathlib/Topology/Category/Born.html#Born\">Born</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/Born.lean#L44-L45","name":"Born.instLargeCategory","line":44,"kind":"instance","docLink":"./Mathlib/Topology/Category/Born.html#Born.instLargeCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Born.html#Born.instLargeCategory\"><span class=\"name\">Born</span>.<span class=\"name\">instLargeCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.LargeCategory\">CategoryTheory.LargeCategory</a> <a href=\"./Mathlib/Topology/Category/Born.html#Born\">Born</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/Born.lean#L39-L42","name":"Born.instBundledHomBornologyLocallyBoundedMap","line":39,"kind":"instance","docLink":"./Mathlib/Topology/Category/Born.html#Born.instBundledHomBornologyLocallyBoundedMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Born.html#Born.instBundledHomBornologyLocallyBoundedMap\"><span class=\"name\">Born</span>.<span class=\"name\">instBundledHomBornologyLocallyBoundedMap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/BundledHom.html#CategoryTheory.BundledHom\">CategoryTheory.BundledHom</a> <a href=\"./Mathlib/Topology/Bornology/Hom.html#LocallyBoundedMap\">LocallyBoundedMap</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/Born.lean#L36-L37","name":"Born.instInhabited","line":36,"kind":"instance","docLink":"./Mathlib/Topology/Category/Born.html#Born.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Born.html#Born.instInhabited\"><span class=\"name\">Born</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Topology/Category/Born.html#Born\">Born</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/Born.lean#L33-L34","name":"Born.of","line":33,"kind":"def","docLink":"./Mathlib/Topology/Category/Born.html#Born.of","doc":"Construct a bundled `Born` from a `Bornology`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Born.html#Born.of\"><span class=\"name\">Born</span>.<span class=\"name\">of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Bornology/Basic.html#Bornology\">Bornology</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Category/Born.html#Born\">Born</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/Born.lean#L29-L30","name":"Born.instBornologyα","line":29,"kind":"instance","docLink":"./Mathlib/Topology/Category/Born.html#Born.instBornologyα","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Born.html#Born.instBornologyα\"><span class=\"name\">Born</span>.<span class=\"name\">instBornologyα</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Topology/Category/Born.html#Born\">Born</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Bornology/Basic.html#Bornology\">Bornology</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/Born.lean#L26-L27","name":"Born.instCoeSortType","line":26,"kind":"instance","docLink":"./Mathlib/Topology/Category/Born.html#Born.instCoeSortType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Born.html#Born.instCoeSortType\"><span class=\"name\">Born</span>.<span class=\"name\">instCoeSortType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort\">CoeSort</a> <a href=\"./Mathlib/Topology/Category/Born.html#Born\">Born</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u_1)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/Born.lean#L21-L22","name":"Born","line":21,"kind":"def","docLink":"./Mathlib/Topology/Category/Born.html#Born","doc":"The category of bornologies. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Born.html#Born\"><span class=\"name\">Born</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u_1 + 1)</div></div>"}]}