{"name":"Mathlib.Topology.Category.CompHaus.EffectiveEpi","instances":[{"typeNames":["CompHaus"],"name":"CompHaus.instPreregular","className":"CategoryTheory.Preregular"},{"typeNames":["CompHaus"],"name":"CompHaus.instPrecoherent","className":"CategoryTheory.Precoherent"}],"imports":["Init","Mathlib.CategoryTheory.Sites.Coherent.Comparison","Mathlib.Topology.Category.CompHaus.Limits"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/CompHaus/EffectiveEpi.lean#L144-L149","name":"CompHaus.effectiveEpiFamily_of_jointly_surjective","line":144,"kind":"theorem","docLink":"./Mathlib/Topology/Category/CompHaus/EffectiveEpi.html#CompHaus.effectiveEpiFamily_of_jointly_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompHaus/EffectiveEpi.html#CompHaus.effectiveEpiFamily_of_jointly_surjective\"><span class=\"name\">CompHaus</span>.<span class=\"name\">effectiveEpiFamily_of_jointly_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(π : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(surj : <span class=\"fn\">∀ (<span class=\"fn\">b</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">B</span>.toTop</span></span>), <span class=\"fn\">∃ (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">a</span></span>)</span>.toTop</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">π</span> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EffectiveEpi/Basic.html#CategoryTheory.EffectiveEpiFamily\">CategoryTheory.EffectiveEpiFamily</a> <span class=\"fn\">X</span> <span class=\"fn\">π</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/CompHaus/EffectiveEpi.lean#L102-L142","name":"CompHaus.effectiveEpiFamily_tfae","line":102,"kind":"theorem","docLink":"./Mathlib/Topology/Category/CompHaus/EffectiveEpi.html#CompHaus.effectiveEpiFamily_tfae","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompHaus/EffectiveEpi.html#CompHaus.effectiveEpiFamily_tfae\"><span class=\"name\">CompHaus</span>.<span class=\"name\">effectiveEpiFamily_tfae</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(π : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EffectiveEpi/Basic.html#CategoryTheory.EffectiveEpiFamily\">CategoryTheory.EffectiveEpiFamily</a> <span class=\"fn\">X</span> <span class=\"fn\">π</span></span>, <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">CategoryTheory.Epi</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Products.html#CategoryTheory.Limits.Sigma.desc\">CategoryTheory.Limits.Sigma.desc</a> <span class=\"fn\">π</span></span>)</span></span>,\n    <span class=\"fn\">∀ (<span class=\"fn\">b</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">B</span>.toTop</span></span>), <span class=\"fn\">∃ (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <span class=\"fn\">a</span></span>)</span>.toTop</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">π</span> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span></span></span>]</span>.TFAE</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/CompHaus/EffectiveEpi.lean#L98-L98","name":"CompHaus.instPrecoherent","line":98,"kind":"instance","docLink":"./Mathlib/Topology/Category/CompHaus/EffectiveEpi.html#CompHaus.instPrecoherent","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompHaus/EffectiveEpi.html#CompHaus.instPrecoherent\"><span class=\"name\">CompHaus</span>.<span class=\"name\">instPrecoherent</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.Precoherent\">CategoryTheory.Precoherent</a> <a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/CompHaus/EffectiveEpi.lean#L87-L95","name":"CompHaus.instPreregular","line":87,"kind":"instance","docLink":"./Mathlib/Topology/Category/CompHaus/EffectiveEpi.html#CompHaus.instPreregular","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompHaus/EffectiveEpi.html#CompHaus.instPreregular\"><span class=\"name\">CompHaus</span>.<span class=\"name\">instPreregular</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Coherent/Basic.html#CategoryTheory.Preregular\">CategoryTheory.Preregular</a> <a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/CompHaus/EffectiveEpi.lean#L72-L85","name":"CompHaus.effectiveEpi_tfae","line":72,"kind":"theorem","docLink":"./Mathlib/Topology/Category/CompHaus/EffectiveEpi.html#CompHaus.effectiveEpi_tfae","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompHaus/EffectiveEpi.html#CompHaus.effectiveEpi_tfae\"><span class=\"name\">CompHaus</span>.<span class=\"name\">effectiveEpi_tfae</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(π : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EffectiveEpi/Basic.html#CategoryTheory.EffectiveEpi\">CategoryTheory.EffectiveEpi</a> <span class=\"fn\">π</span></span>, <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">CategoryTheory.Epi</a> <span class=\"fn\">π</span></span>, <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">π</span></span></span>]</span>.TFAE</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/CompHaus/EffectiveEpi.lean#L53-L69","name":"CompHaus.struct","line":53,"kind":"def","docLink":"./Mathlib/Topology/Category/CompHaus/EffectiveEpi.html#CompHaus.struct","doc":"Implementation: If `π` is a surjective morphism in `CompHaus`, then it is an effective epi.\nThe theorem `CompHaus.effectiveEpi_tfae` should be used instead.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompHaus/EffectiveEpi.html#CompHaus.struct\"><span class=\"name\">CompHaus</span>.<span class=\"name\">struct</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(π : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hπ : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">π</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EffectiveEpi/Basic.html#CategoryTheory.EffectiveEpiStruct\">CategoryTheory.EffectiveEpiStruct</a> <span class=\"fn\">π</span></span></div></div>"}]}