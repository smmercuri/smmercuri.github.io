{"name":"Mathlib.Topology.Category.CompactlyGenerated","instances":[{"typeNames":[],"name":"instCompactlyGeneratedSpaceOfDiscreteTopology","className":"CompactlyGeneratedSpace"},{"typeNames":["CompactlyGenerated"],"name":"CompactlyGenerated.instInhabited","className":"Inhabited"},{"typeNames":["CompactlyGenerated","_builtin_typeu"],"name":"CompactlyGenerated.instCoeSortType","className":"CoeSort"},{"typeNames":["CompactlyGenerated"],"name":"CompactlyGenerated.instCategory","className":"CategoryTheory.Category"},{"typeNames":["CompactlyGenerated"],"name":"CompactlyGenerated.instConcreteCategory","className":"CategoryTheory.ConcreteCategory"},{"typeNames":["CompactlyGenerated.compactlyGeneratedToTop"],"name":"CompactlyGenerated.instFullTopCatCompactlyGeneratedToTop","className":"CategoryTheory.Functor.Full"},{"typeNames":["CompactlyGenerated.compactlyGeneratedToTop"],"name":"CompactlyGenerated.instFaithfulTopCatCompactlyGeneratedToTop","className":"CategoryTheory.Functor.Faithful"}],"imports":["Init","Mathlib.Topology.Category.CompHaus.Basic","Mathlib.CategoryTheory.Elementwise"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/CompactlyGenerated.lean#L160-L168","name":"CompactlyGenerated.isoEquivHomeo","line":160,"kind":"def","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.isoEquivHomeo","doc":"The equivalence between isomorphisms in `CompactlyGenerated` and homeomorphisms\nof topological spaces. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.isoEquivHomeo\"><span class=\"name\">CompactlyGenerated</span>.<span class=\"name\">isoEquivHomeo</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">Y</span></span>)</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.toTop</span></span> <a href=\"./Mathlib/Topology/Homeomorph.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">Y</span>.toTop</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/CompactlyGenerated.lean#L159-L159","name":"CompactlyGenerated.isoEquivHomeo_apply","line":159,"kind":"theorem","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.isoEquivHomeo_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.isoEquivHomeo_apply\"><span class=\"name\">CompactlyGenerated</span>.<span class=\"name\">isoEquivHomeo_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">CompactlyGenerated.isoEquivHomeo</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.homeoOfIso\">CompactlyGenerated.homeoOfIso</a> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/CompactlyGenerated.lean#L159-L159","name":"CompactlyGenerated.isoEquivHomeo_symm_apply","line":159,"kind":"theorem","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.isoEquivHomeo_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.isoEquivHomeo_symm_apply\"><span class=\"name\">CompactlyGenerated</span>.<span class=\"name\">isoEquivHomeo_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.toTop</span></span> <a href=\"./Mathlib/Topology/Homeomorph.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">Y</span>.toTop</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">CompactlyGenerated.isoEquivHomeo</span>.symm</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.isoOfHomeo\">CompactlyGenerated.isoOfHomeo</a> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/CompactlyGenerated.lean#L149-L155","name":"CompactlyGenerated.homeoOfIso","line":149,"kind":"def","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.homeoOfIso","doc":"Construct a homeomorphism from an isomorphism. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.homeoOfIso\"><span class=\"name\">CompactlyGenerated</span>.<span class=\"name\">homeoOfIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.toTop</span></span> <a href=\"./Mathlib/Topology/Homeomorph.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">Y</span>.toTop</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/CompactlyGenerated.lean#L148-L148","name":"CompactlyGenerated.homeoOfIso_symm_apply","line":148,"kind":"theorem","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.homeoOfIso_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.homeoOfIso_symm_apply\"><span class=\"name\">CompactlyGenerated</span>.<span class=\"name\">homeoOfIso_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a></span>)</span>.obj</span> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.homeoOfIso\">CompactlyGenerated.homeoOfIso</a> <span class=\"fn\">f</span></span>)</span>.symm</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.inv</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/CompactlyGenerated.lean#L148-L148","name":"CompactlyGenerated.homeoOfIso_apply","line":148,"kind":"theorem","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.homeoOfIso_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.homeoOfIso_apply\"><span class=\"name\">CompactlyGenerated</span>.<span class=\"name\">homeoOfIso_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a></span>)</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.homeoOfIso\">CompactlyGenerated.homeoOfIso</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.hom</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/CompactlyGenerated.lean#L137-L145","name":"CompactlyGenerated.isoOfHomeo","line":137,"kind":"def","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.isoOfHomeo","doc":"Construct an isomorphism from a homeomorphism. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.isoOfHomeo\"><span class=\"name\">CompactlyGenerated</span>.<span class=\"name\">isoOfHomeo</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.toTop</span></span> <a href=\"./Mathlib/Topology/Homeomorph.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">Y</span>.toTop</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">Y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/CompactlyGenerated.lean#L136-L136","name":"CompactlyGenerated.isoOfHomeo_inv","line":136,"kind":"theorem","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.isoOfHomeo_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.isoOfHomeo_inv\"><span class=\"name\">CompactlyGenerated</span>.<span class=\"name\">isoOfHomeo_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.toTop</span></span> <a href=\"./Mathlib/Topology/Homeomorph.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">Y</span>.toTop</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.isoOfHomeo\">CompactlyGenerated.isoOfHomeo</a> <span class=\"fn\">f</span></span>)</span>.inv</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">⇑<span class=\"fn\"><span class=\"fn\">f</span>.symm</span></span>, <span class=\"fn\">continuous_toFun</span> := <span class=\"fn\">⋯</span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/CompactlyGenerated.lean#L136-L136","name":"CompactlyGenerated.isoOfHomeo_hom","line":136,"kind":"theorem","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.isoOfHomeo_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.isoOfHomeo_hom\"><span class=\"name\">CompactlyGenerated</span>.<span class=\"name\">isoOfHomeo_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.toTop</span></span> <a href=\"./Mathlib/Topology/Homeomorph.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">Y</span>.toTop</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.isoOfHomeo\">CompactlyGenerated.isoOfHomeo</a> <span class=\"fn\">f</span></span>)</span>.hom</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\">⇑<span class=\"fn\">f</span></span>, <span class=\"fn\">continuous_toFun</span> := <span class=\"fn\">⋯</span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/CompactlyGenerated.lean#L133-L133","name":"CompactlyGenerated.instFaithfulTopCatCompactlyGeneratedToTop","line":133,"kind":"instance","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.instFaithfulTopCatCompactlyGeneratedToTop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.instFaithfulTopCatCompactlyGeneratedToTop\"><span class=\"name\">CompactlyGenerated</span>.<span class=\"name\">instFaithfulTopCatCompactlyGeneratedToTop</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.compactlyGeneratedToTop\">CompactlyGenerated.compactlyGeneratedToTop</a>.Faithful</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/CompactlyGenerated.lean#L131-L131","name":"CompactlyGenerated.instFullTopCatCompactlyGeneratedToTop","line":131,"kind":"instance","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.instFullTopCatCompactlyGeneratedToTop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.instFullTopCatCompactlyGeneratedToTop\"><span class=\"name\">CompactlyGenerated</span>.<span class=\"name\">instFullTopCatCompactlyGeneratedToTop</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.compactlyGeneratedToTop\">CompactlyGenerated.compactlyGeneratedToTop</a>.Full</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/CompactlyGenerated.lean#L128-L129","name":"CompactlyGenerated.fullyFaithfulCompactlyGeneratedToTop","line":128,"kind":"def","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.fullyFaithfulCompactlyGeneratedToTop","doc":"`compactlyGeneratedToTop` is fully faithful. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.fullyFaithfulCompactlyGeneratedToTop\"><span class=\"name\">CompactlyGenerated</span>.<span class=\"name\">fullyFaithfulCompactlyGeneratedToTop</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.compactlyGeneratedToTop\">CompactlyGenerated.compactlyGeneratedToTop</a>.FullyFaithful</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/CompactlyGenerated.lean#L124-L125","name":"CompactlyGenerated.compactlyGeneratedToTop","line":124,"kind":"def","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.compactlyGeneratedToTop","doc":"The fully faithful embedding of `CompactlyGenerated` in `TopCat`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.compactlyGeneratedToTop\"><span class=\"name\">CompactlyGenerated</span>.<span class=\"name\">compactlyGeneratedToTop</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a> <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/CompactlyGenerated.lean#L123-L123","name":"CompactlyGenerated.compactlyGeneratedToTop_obj","line":123,"kind":"theorem","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.compactlyGeneratedToTop_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.compactlyGeneratedToTop_obj\"><span class=\"name\">CompactlyGenerated</span>.<span class=\"name\">compactlyGeneratedToTop_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.compactlyGeneratedToTop\">CompactlyGenerated.compactlyGeneratedToTop</a>.obj</span> <span class=\"fn\">self</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">self</span>.toTop</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/CompactlyGenerated.lean#L123-L123","name":"CompactlyGenerated.compactlyGeneratedToTop_map","line":123,"kind":"theorem","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.compactlyGeneratedToTop_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.compactlyGeneratedToTop_map\"><span class=\"name\">CompactlyGenerated</span>.<span class=\"name\">compactlyGeneratedToTop_map</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FullSubcategory.html#CategoryTheory.InducedCategory\">CategoryTheory.InducedCategory</a> <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a> <a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.toTop\">CompactlyGenerated.toTop</a></span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.compactlyGeneratedToTop\">CompactlyGenerated.compactlyGeneratedToTop</a>.map</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/CompactlyGenerated.lean#L118-L120","name":"CompactlyGenerated.of","line":118,"kind":"def","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.of","doc":"Constructor for objects of the category `CompactlyGenerated`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.of\"><span class=\"name\">CompactlyGenerated</span>.<span class=\"name\">of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGeneratedSpace\">CompactlyGeneratedSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/CompactlyGenerated.lean#L112-L113","name":"CompactlyGenerated.instConcreteCategory","line":112,"kind":"instance","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.instConcreteCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.instConcreteCategory\"><span class=\"name\">CompactlyGenerated</span>.<span class=\"name\">instConcreteCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/CompactlyGenerated.lean#L109-L110","name":"CompactlyGenerated.instCategory","line":109,"kind":"instance","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.instCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.instCategory\"><span class=\"name\">CompactlyGenerated</span>.<span class=\"name\">instCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{w, w + 1}</a>        <a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/CompactlyGenerated.lean#L104-L105","name":"CompactlyGenerated.instCoeSortType","line":104,"kind":"instance","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.instCoeSortType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.instCoeSortType\"><span class=\"name\">CompactlyGenerated</span>.<span class=\"name\">instCoeSortType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort\">CoeSort</a> <a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u_1)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/CompactlyGenerated.lean#L101-L102","name":"CompactlyGenerated.instInhabited","line":101,"kind":"instance","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.instInhabited\"><span class=\"name\">CompactlyGenerated</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/CompactlyGenerated.lean#L97-L97","name":"CompactlyGenerated.is_compactly_generated","line":97,"kind":"theorem","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.is_compactly_generated","doc":"The underlying topological space is compactly generated. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.is_compactly_generated\"><span class=\"name\">CompactlyGenerated</span>.<span class=\"name\">is_compactly_generated</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGeneratedSpace\">CompactlyGeneratedSpace</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">self</span>.toTop</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/CompactlyGenerated.lean#L95-L95","name":"CompactlyGenerated.toTop","line":95,"kind":"def","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.toTop","doc":"The underlying topological space of an object of `CompactlyGenerated`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.toTop\"><span class=\"name\">CompactlyGenerated</span>.<span class=\"name\">toTop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/CompactlyGenerated.lean#L93-L93","name":"CompactlyGenerated.mk","line":93,"kind":"ctor","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated.mk\"><span class=\"name\">CompactlyGenerated</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(toTop : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[is_compactly_generated : <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGeneratedSpace\">CompactlyGeneratedSpace</a> <span class=\"fn\">↑<span class=\"fn\">toTop</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\">CompactlyGenerated</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/CompactlyGenerated.lean#L93-L97","name":"CompactlyGenerated","line":93,"kind":"structure","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated","doc":"The type of `u`-compactly generated `w`-small topological spaces. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGenerated\"><span class=\"name\">CompactlyGenerated</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (w + 1)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/CompactlyGenerated.lean#L77-L90","name":"compactlyGeneratedSpace_of_continuous_maps","line":77,"kind":"theorem","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#compactlyGeneratedSpace_of_continuous_maps","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#compactlyGeneratedSpace_of_continuous_maps\"><span class=\"name\">compactlyGeneratedSpace_of_continuous_maps</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[t : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ {<span class=\"fn\">Y</span> : <a href=\"./foundational_types.html\">Type</a> w} [<span class=\"fn\">tY</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>] (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">Y</span></span>),\n  <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">S</span> : <a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a>) (<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">S</span>.toTop</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">⇑<span class=\"fn\">g</span></span></span>)</span></span></span>)</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">f</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGeneratedSpace\">CompactlyGeneratedSpace</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/CompactlyGenerated.lean#L71-L75","name":"continuous_from_compactlyGeneratedSpace","line":71,"kind":"theorem","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#continuous_from_compactlyGeneratedSpace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#continuous_from_compactlyGeneratedSpace\"><span class=\"name\">continuous_from_compactlyGeneratedSpace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGeneratedSpace\">CompactlyGeneratedSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">S</span> : <a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a>) (<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">S</span>.toTop</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">⇑<span class=\"fn\">g</span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/CompactlyGenerated.lean#L65-L69","name":"instCompactlyGeneratedSpaceOfDiscreteTopology","line":65,"kind":"instance","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#instCompactlyGeneratedSpaceOfDiscreteTopology","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#instCompactlyGeneratedSpaceOfDiscreteTopology\"><span class=\"name\">instCompactlyGeneratedSpaceOfDiscreteTopology</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[t : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Order.html#DiscreteTopology\">DiscreteTopology</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGeneratedSpace\">CompactlyGeneratedSpace</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/CompactlyGenerated.lean#L57-L63","name":"eq_compactlyGenerated","line":57,"kind":"theorem","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#eq_compactlyGenerated","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#eq_compactlyGenerated\"><span class=\"name\">eq_compactlyGenerated</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[t : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGeneratedSpace\">CompactlyGeneratedSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#TopologicalSpace.compactlyGenerated\">TopologicalSpace.compactlyGenerated</a> <span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/CompactlyGenerated.lean#L55-L55","name":"CompactlyGeneratedSpace.le_compactlyGenerated","line":55,"kind":"theorem","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGeneratedSpace.le_compactlyGenerated","doc":"The topology of `X` is finer than the compactly generated topology. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGeneratedSpace.le_compactlyGenerated\"><span class=\"name\">CompactlyGeneratedSpace</span>.<span class=\"name\">le_compactlyGenerated</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[t : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGeneratedSpace\">CompactlyGeneratedSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#TopologicalSpace.compactlyGenerated\">TopologicalSpace.compactlyGenerated</a> <span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/CompactlyGenerated.lean#L53-L53","name":"CompactlyGeneratedSpace.mk","line":53,"kind":"ctor","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGeneratedSpace.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGeneratedSpace.mk\"><span class=\"name\">CompactlyGeneratedSpace</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[t : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(le_compactlyGenerated : <span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#TopologicalSpace.compactlyGenerated\">TopologicalSpace.compactlyGenerated</a> <span class=\"fn\">X</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGeneratedSpace\">CompactlyGeneratedSpace</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/CompactlyGenerated.lean#L53-L55","name":"CompactlyGeneratedSpace","line":53,"kind":"class","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGeneratedSpace","doc":"A topological space `X` is compactly generated if its topology is finer than (and thus equal to)\nthe compactly generated topology, i.e. it is coinduced by the continuous maps from compact\nHausdorff spaces to `X`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#CompactlyGeneratedSpace\"><span class=\"name\">CompactlyGeneratedSpace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[t : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/CompactlyGenerated.lean#L41-L46","name":"continuous_from_compactlyGenerated","line":41,"kind":"theorem","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#continuous_from_compactlyGenerated","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#continuous_from_compactlyGenerated\"><span class=\"name\">continuous_from_compactlyGenerated</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[t : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">S</span> : <a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a>) (<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">S</span>.toTop</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">⇑<span class=\"fn\">g</span></span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/CompactlyGenerated.lean#L37-L39","name":"TopologicalSpace.compactlyGenerated","line":37,"kind":"def","docLink":"./Mathlib/Topology/Category/CompactlyGenerated.html#TopologicalSpace.compactlyGenerated","doc":"The compactly generated topology on a topological space `X`. This is the finest topology\nwhich makes all maps from compact Hausdorff spaces to `X`, which are continuous for the original\ntopology, continuous.\n\nNote: this definition should be used with an explicit universe parameter `u` for the size of the\ncompact Hausdorff spaces mapping to `X`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/CompactlyGenerated.html#TopologicalSpace.compactlyGenerated\"><span class=\"name\">TopologicalSpace</span>.<span class=\"name\">compactlyGenerated</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> w)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span></div></div>"}]}