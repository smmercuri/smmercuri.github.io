{"name":"Mathlib.Topology.Category.LightProfinite.Basic","instances":[{"typeNames":["LightProfinite"],"name":"LightProfinite.instInhabited","className":"Inhabited"},{"typeNames":["LightProfinite"],"name":"LightProfinite.category","className":"CategoryTheory.Category"},{"typeNames":["LightProfinite"],"name":"LightProfinite.concreteCategory","className":"CategoryTheory.ConcreteCategory"},{"typeNames":["LightProfinite","TopCat"],"name":"LightProfinite.hasForget₂","className":"CategoryTheory.HasForget₂"},{"typeNames":["LightProfinite","_builtin_typeu"],"name":"LightProfinite.instCoeSortType","className":"CoeSort"},{"typeNames":["CategoryTheory.Bundled.α"],"name":"LightProfinite.instTotallyDisconnectedSpaceαTopologicalSpaceToTopTrueToCompHaus","className":"TotallyDisconnectedSpace"},{"typeNames":["CategoryTheory.Bundled.α"],"name":"LightProfinite.instSecondCountableTopologyαTopologicalSpaceToTopTrueToCompHaus","className":"SecondCountableTopology"},{"typeNames":["Prefunctor.obj"],"name":"LightProfinite.instTopologicalSpaceObjForget","className":"TopologicalSpace"},{"typeNames":["Prefunctor.obj"],"name":"LightProfinite.instTotallyDisconnectedSpaceObjForget","className":"TotallyDisconnectedSpace"},{"typeNames":["Prefunctor.obj"],"name":"LightProfinite.instCompactSpaceObjForget","className":"CompactSpace"},{"typeNames":["Prefunctor.obj"],"name":"LightProfinite.instT2SpaceObjForget","className":"T2Space"},{"typeNames":["Prefunctor.obj"],"name":"LightProfinite.instSecondCountableTopologyObjForget","className":"SecondCountableTopology"},{"typeNames":["lightToProfinite"],"name":"instFaithfulLightProfiniteProfiniteLightToProfinite","className":"CategoryTheory.Functor.Faithful"},{"typeNames":["lightToProfinite"],"name":"instFullLightProfiniteProfiniteLightToProfinite","className":"CategoryTheory.Functor.Full"},{"typeNames":["lightProfiniteToCompHaus"],"name":"instFullLightProfiniteCompHausLightProfiniteToCompHaus","className":"CategoryTheory.Functor.Full"},{"typeNames":["lightProfiniteToCompHaus"],"name":"instFaithfulLightProfiniteCompHausLightProfiniteToCompHaus","className":"CategoryTheory.Functor.Faithful"},{"typeNames":["CategoryTheory.Bundled.α"],"name":"instTotallyDisconnectedSpaceαTopologicalSpaceToTopTrueObjLightProfiniteCompHausLightProfiniteToCompHaus","className":"TotallyDisconnectedSpace"},{"typeNames":["CategoryTheory.Bundled.α"],"name":"instSecondCountableTopologyαTopologicalSpaceToTopTrueObjLightProfiniteCompHausLightProfiniteToCompHaus","className":"SecondCountableTopology"},{"typeNames":["LightProfinite.toTopCat"],"name":"instFullLightProfiniteTopCatToTopCat","className":"CategoryTheory.Functor.Full"},{"typeNames":["LightProfinite.toTopCat"],"name":"instFaithfulLightProfiniteTopCatToTopCat","className":"CategoryTheory.Functor.Faithful"},{"typeNames":["FintypeCat.toLightProfinite"],"name":"instFaithfulFintypeCatLightProfiniteToLightProfinite","className":"CategoryTheory.Functor.Faithful"},{"typeNames":["FintypeCat.toLightProfinite"],"name":"instFullFintypeCatLightProfiniteToLightProfinite","className":"CategoryTheory.Functor.Full"},{"typeNames":["CategoryTheory.Bundled.α"],"name":"LightProfinite.instTotallyDisconnectedSpaceαTopologicalSpaceToTopTruePtCompHausLimitConeCompLightProfiniteToCompHaus","className":"TotallyDisconnectedSpace"},{"typeNames":["lightToProfinite"],"name":"LightProfinite.createsCountableLimits","className":"CategoryTheory.CreatesLimitsOfShape"},{"typeNames":["LightProfinite"],"name":"LightProfinite.instHasCountableLimits","className":"CategoryTheory.Limits.HasCountableLimits"},{"typeNames":["Opposite","CategoryTheory.forget"],"name":"LightProfinite.instPreservesLimitsOfShapeOppositeNatForget","className":"CategoryTheory.Limits.PreservesLimitsOfShape"},{"typeNames":["CategoryTheory.forget"],"name":"LightProfinite.forget_reflectsIsomorphisms","className":"CategoryTheory.Functor.ReflectsIsomorphisms"},{"typeNames":[],"name":"LightProfinite.instEpiCompHaus","className":"CategoryTheory.Epi"},{"typeNames":[],"name":"LightProfinite.instEpiOfCompHaus","className":"CategoryTheory.Epi"},{"typeNames":["LightDiagram"],"name":"LightDiagram.instCategory","className":"CategoryTheory.Category"},{"typeNames":["LightDiagram"],"name":"LightDiagram.concreteCategory","className":"CategoryTheory.ConcreteCategory"},{"typeNames":["lightDiagramToProfinite"],"name":"instFaithfulLightDiagramProfiniteLightDiagramToProfinite","className":"CategoryTheory.Functor.Faithful"},{"typeNames":["lightDiagramToProfinite"],"name":"instFullLightDiagramProfiniteLightDiagramToProfinite","className":"CategoryTheory.Functor.Full"},{"typeNames":["Prefunctor.obj"],"name":"instTopologicalSpaceObjLightDiagramForget","className":"TopologicalSpace"},{"typeNames":["Prefunctor.obj"],"name":"instTotallyDisconnectedSpaceObjLightDiagramForget","className":"TotallyDisconnectedSpace"},{"typeNames":["Prefunctor.obj"],"name":"instCompactSpaceObjLightDiagramForget","className":"CompactSpace"},{"typeNames":["Prefunctor.obj"],"name":"instT2SpaceObjLightDiagramForget","className":"T2Space"},{"typeNames":["TopologicalSpace.Clopens"],"name":"LightProfinite.instCountableClopensαTopologicalSpaceToTopTrueToCompHaus","className":"Countable"},{"typeNames":["DiscreteQuotient"],"name":"LightProfinite.instCountableDiscreteQuotient","className":"Countable"},{"typeNames":["CategoryTheory.Bundled.α"],"name":"instSecondCountableTopologyαTopologicalSpaceToTopTotallyDisconnectedSpacePtOppositeNatProfiniteCone","className":"SecondCountableTopology"},{"typeNames":["lightProfiniteToLightDiagram"],"name":"instIsEquivalenceLightProfiniteLightDiagramLightProfiniteToLightDiagram","className":"CategoryTheory.Functor.IsEquivalence"},{"typeNames":["lightDiagramToLightProfinite"],"name":"instIsEquivalenceLightDiagramLightProfiniteLightDiagramToLightProfinite","className":"CategoryTheory.Functor.IsEquivalence"},{"typeNames":["LightDiagram'"],"name":"instCategoryLightDiagram'","className":"CategoryTheory.Category"},{"typeNames":["LightDiagram'.toLightFunctor"],"name":"instFaithfulLightDiagram'LightDiagramToLightFunctor","className":"CategoryTheory.Functor.Faithful"},{"typeNames":["LightDiagram'.toLightFunctor"],"name":"instFullLightDiagram'LightDiagramToLightFunctor","className":"CategoryTheory.Functor.Full"},{"typeNames":["LightDiagram'.toLightFunctor"],"name":"instEssSurjLightDiagram'LightDiagramToLightFunctor","className":"CategoryTheory.Functor.EssSurj"},{"typeNames":["LightDiagram'.toLightFunctor"],"name":"instIsEquivalenceLightDiagram'LightDiagramToLightFunctor","className":"CategoryTheory.Functor.IsEquivalence"},{"typeNames":["LightDiagram"],"name":"instEssentiallySmallLightDiagram","className":"CategoryTheory.EssentiallySmall"},{"typeNames":["LightProfinite"],"name":"instEssentiallySmallLightProfinite","className":"CategoryTheory.EssentiallySmall"}],"imports":["Init","Mathlib.CategoryTheory.Limits.Shapes.Countable","Mathlib.Topology.Category.Profinite.AsLimit","Mathlib.Topology.Category.Profinite.CofilteredLimit","Mathlib.Topology.ClopenBox"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L503-L505","name":"instEssentiallySmallLightProfinite","line":503,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#instEssentiallySmallLightProfinite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#instEssentiallySmallLightProfinite\"><span class=\"name\">instEssentiallySmallLightProfinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.EssentiallySmall\">CategoryTheory.EssentiallySmall.{u, u, u + 1}</a>           <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L500-L501","name":"instEssentiallySmallLightDiagram","line":500,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#instEssentiallySmallLightDiagram","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#instEssentiallySmallLightDiagram\"><span class=\"name\">instEssentiallySmallLightDiagram</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EssentiallySmall.html#CategoryTheory.EssentiallySmall\">CategoryTheory.EssentiallySmall.{u, u, u + 1}</a>           <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\">LightDiagram</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L497-L498","name":"LightDiagram.equivSmall","line":497,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.equivSmall","doc":"The equivalence beween `LightDiagram` and a small category. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.equivSmall\"><span class=\"name\">LightDiagram</span>.<span class=\"name\">equivSmall</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\">LightDiagram</a> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram'\">LightDiagram'</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L494-L494","name":"instIsEquivalenceLightDiagram'LightDiagramToLightFunctor","line":494,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#instIsEquivalenceLightDiagram'LightDiagramToLightFunctor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#instIsEquivalenceLightDiagram'LightDiagramToLightFunctor\"><span class=\"name\">instIsEquivalenceLightDiagram'LightDiagramToLightFunctor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram'.toLightFunctor\">LightDiagram'.toLightFunctor</a>.IsEquivalence</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L487-L492","name":"instEssSurjLightDiagram'LightDiagramToLightFunctor","line":487,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#instEssSurjLightDiagram'LightDiagramToLightFunctor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#instEssSurjLightDiagram'LightDiagramToLightFunctor\"><span class=\"name\">instEssSurjLightDiagram'LightDiagramToLightFunctor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram'.toLightFunctor\">LightDiagram'.toLightFunctor</a>.EssSurj</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L484-L485","name":"instFullLightDiagram'LightDiagramToLightFunctor","line":484,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#instFullLightDiagram'LightDiagramToLightFunctor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#instFullLightDiagram'LightDiagramToLightFunctor\"><span class=\"name\">instFullLightDiagram'LightDiagramToLightFunctor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram'.toLightFunctor\">LightDiagram'.toLightFunctor</a>.Full</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L482-L482","name":"instFaithfulLightDiagram'LightDiagramToLightFunctor","line":482,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#instFaithfulLightDiagram'LightDiagramToLightFunctor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#instFaithfulLightDiagram'LightDiagramToLightFunctor\"><span class=\"name\">instFaithfulLightDiagram'LightDiagramToLightFunctor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram'.toLightFunctor\">LightDiagram'.toLightFunctor</a>.Faithful</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L478-L480","name":"LightDiagram'.toLightFunctor","line":478,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram'.toLightFunctor","doc":"The functor part of the equivalence of categories `LightDiagram' ≌ LightDiagram`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram'.toLightFunctor\"><span class=\"name\">LightDiagram'</span>.<span class=\"name\">toLightFunctor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram'\">LightDiagram'</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\">LightDiagram</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L475-L475","name":"instCategoryLightDiagram'","line":475,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#instCategoryLightDiagram'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#instCategoryLightDiagram'\"><span class=\"name\">instCategoryLightDiagram'</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_1, u_1}</a>      <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram'\">LightDiagram'</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L472-L473","name":"LightDiagram'.toProfinite","line":472,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram'.toProfinite","doc":"A `LightDiagram'` yields a `Profinite`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram'.toProfinite\"><span class=\"name\">LightDiagram'</span>.<span class=\"name\">toProfinite</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(S : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram'\">LightDiagram'</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L469-L469","name":"LightDiagram'.diagram","line":469,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram'.diagram","doc":"The diagram takes values in a small category equivalent to `FintypeCat`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram'.diagram\"><span class=\"name\">LightDiagram'</span>.<span class=\"name\">diagram</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram'\">LightDiagram'</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton\">FintypeCat.Skeleton</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L467-L467","name":"LightDiagram'.mk","line":467,"kind":"ctor","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram'.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram'.mk\"><span class=\"name\">LightDiagram'</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(diagram : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat.Skeleton\">FintypeCat.Skeleton</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram'\">LightDiagram'</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L467-L469","name":"LightDiagram'","line":467,"kind":"structure","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram'","doc":"This is an auxiliary definition used to show that `LightDiagram` is essentially small.\n\nNote that below we put a category instance on this structure which is completely different from the\ncategory instance on `ℕᵒᵖ ⥤ FintypeCat.Skeleton.{u}`. Neither the morphisms nor the objects are the\nsame.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram'\"><span class=\"name\">LightDiagram'</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L453-L454","name":"instIsEquivalenceLightDiagramLightProfiniteLightDiagramToLightProfinite","line":453,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#instIsEquivalenceLightDiagramLightProfiniteLightDiagramToLightProfinite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#instIsEquivalenceLightDiagramLightProfiniteLightDiagramToLightProfinite\"><span class=\"name\">instIsEquivalenceLightDiagramLightProfiniteLightDiagramToLightProfinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightDiagramToLightProfinite\">lightDiagramToLightProfinite</a>.IsEquivalence</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L450-L451","name":"instIsEquivalenceLightProfiniteLightDiagramLightProfiniteToLightDiagram","line":450,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#instIsEquivalenceLightProfiniteLightDiagramLightProfiniteToLightDiagram","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#instIsEquivalenceLightProfiniteLightDiagramLightProfiniteToLightDiagram\"><span class=\"name\">instIsEquivalenceLightProfiniteLightDiagramLightProfiniteToLightDiagram</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightProfiniteToLightDiagram\">lightProfiniteToLightDiagram</a>.IsEquivalence</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L435-L448","name":"LightProfinite.equivDiagram","line":435,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.equivDiagram","doc":"The equivalence of categories `LightProfinite ≌ LightDiagram` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.equivDiagram\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">equivDiagram</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\">LightDiagram</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L430-L432","name":"lightDiagramToLightProfinite","line":430,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightDiagramToLightProfinite","doc":"The inverse part of the equivalence `LightProfinite ≌ LightDiagram` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightDiagramToLightProfinite\"><span class=\"name\">lightDiagramToLightProfinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\">LightDiagram</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L429-L429","name":"lightDiagramToLightProfinite_map","line":429,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightDiagramToLightProfinite_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightDiagramToLightProfinite_map\"><span class=\"name\">lightDiagramToLightProfinite_map</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\">LightDiagram</a>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightDiagramToLightProfinite\">lightDiagramToLightProfinite</a>.map</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L429-L429","name":"lightDiagramToLightProfinite_obj","line":429,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightDiagramToLightProfinite_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightDiagramToLightProfinite_obj\"><span class=\"name\">lightDiagramToLightProfinite_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\">LightDiagram</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightDiagramToLightProfinite\">lightDiagramToLightProfinite</a>.obj</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.of\">LightProfinite.of</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.cone</span>.pt</span>.toTop</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L410-L426","name":"instSecondCountableTopologyαTopologicalSpaceToTopTotallyDisconnectedSpacePtOppositeNatProfiniteCone","line":410,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#instSecondCountableTopologyαTopologicalSpaceToTopTotallyDisconnectedSpacePtOppositeNatProfiniteCone","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#instSecondCountableTopologyαTopologicalSpaceToTopTotallyDisconnectedSpacePtOppositeNatProfiniteCone\"><span class=\"name\">instSecondCountableTopologyαTopologicalSpaceToTopTotallyDisconnectedSpacePtOppositeNatProfiniteCone</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(S : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\">LightDiagram</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Bases.html#SecondCountableTopology\">SecondCountableTopology</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.cone</span>.pt</span>.toTop</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L405-L407","name":"lightProfiniteToLightDiagram","line":405,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightProfiniteToLightDiagram","doc":"The functor part of the equivalence `LightProfinite ≌ LightDiagram` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightProfiniteToLightDiagram\"><span class=\"name\">lightProfiniteToLightDiagram</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\">LightDiagram</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L404-L404","name":"lightProfiniteToLightDiagram_obj","line":404,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightProfiniteToLightDiagram_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightProfiniteToLightDiagram_obj\"><span class=\"name\">lightProfiniteToLightDiagram_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightProfiniteToLightDiagram\">lightProfiniteToLightDiagram</a>.obj</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">X</span>.toLightDiagram</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L404-L404","name":"lightProfiniteToLightDiagram_map","line":404,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightProfiniteToLightDiagram_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightProfiniteToLightDiagram_map\"><span class=\"name\">lightProfiniteToLightDiagram_map</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightProfiniteToLightDiagram\">lightProfiniteToLightDiagram</a>.map</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L395-L399","name":"LightProfinite.toLightDiagram","line":395,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.toLightDiagram","doc":"A profinite space which is light gives rise to a light profinite space. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.toLightDiagram\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">toLightDiagram</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(S : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\">LightDiagram</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L390-L392","name":"LightProfinite.instCountableDiscreteQuotient","line":390,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instCountableDiscreteQuotient","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instCountableDiscreteQuotient\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">instCountableDiscreteQuotient</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(S : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Countable/Defs.html#Countable\">Countable</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/DiscreteQuotient.html#DiscreteQuotient\">DiscreteQuotient</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightToProfinite\">lightToProfinite</a>.obj</span> <span class=\"fn\">S</span></span>)</span>.toTop</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L386-L388","name":"LightProfinite.instCountableClopensαTopologicalSpaceToTopTrueToCompHaus","line":386,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instCountableClopensαTopologicalSpaceToTopTrueToCompHaus","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instCountableClopensαTopologicalSpaceToTopTrueToCompHaus\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">instCountableClopensαTopologicalSpaceToTopTrueToCompHaus</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(S : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Countable/Defs.html#Countable\">Countable</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Closeds.html#TopologicalSpace.Clopens\">TopologicalSpace.Clopens</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">S</span>.toCompHaus</span>.toTop</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L381-L382","name":"instT2SpaceObjLightDiagramForget","line":381,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#instT2SpaceObjLightDiagramForget","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#instT2SpaceObjLightDiagramForget\"><span class=\"name\">instT2SpaceObjLightDiagramForget</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\">LightDiagram</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Separation.html#T2Space\">T2Space</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\">LightDiagram</a></span>)</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L378-L379","name":"instCompactSpaceObjLightDiagramForget","line":378,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#instCompactSpaceObjLightDiagramForget","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#instCompactSpaceObjLightDiagramForget\"><span class=\"name\">instCompactSpaceObjLightDiagramForget</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\">LightDiagram</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\">LightDiagram</a></span>)</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L375-L376","name":"instTotallyDisconnectedSpaceObjLightDiagramForget","line":375,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#instTotallyDisconnectedSpaceObjLightDiagramForget","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#instTotallyDisconnectedSpaceObjLightDiagramForget\"><span class=\"name\">instTotallyDisconnectedSpaceObjLightDiagramForget</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\">LightDiagram</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\">LightDiagram</a></span>)</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L372-L373","name":"instTopologicalSpaceObjLightDiagramForget","line":372,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#instTopologicalSpaceObjLightDiagramForget","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#instTopologicalSpaceObjLightDiagramForget\"><span class=\"name\">instTopologicalSpaceObjLightDiagramForget</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\">LightDiagram</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\">LightDiagram</a></span>)</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L370-L370","name":"instFullLightDiagramProfiniteLightDiagramToProfinite","line":370,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#instFullLightDiagramProfiniteLightDiagramToProfinite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#instFullLightDiagramProfiniteLightDiagramToProfinite\"><span class=\"name\">instFullLightDiagramProfiniteLightDiagramToProfinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightDiagramToProfinite\">lightDiagramToProfinite</a>.Full</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L368-L368","name":"instFaithfulLightDiagramProfiniteLightDiagramToProfinite","line":368,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#instFaithfulLightDiagramProfiniteLightDiagramToProfinite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#instFaithfulLightDiagramProfiniteLightDiagramToProfinite\"><span class=\"name\">instFaithfulLightDiagramProfiniteLightDiagramToProfinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightDiagramToProfinite\">lightDiagramToProfinite</a>.Faithful</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L366-L366","name":"lightDiagramToProfinite","line":366,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightDiagramToProfinite","doc":"The fully faithful embedding `LightDiagram ⥤ Profinite` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightDiagramToProfinite\"><span class=\"name\">lightDiagramToProfinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\">LightDiagram</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L365-L365","name":"lightDiagramToProfinite_obj","line":365,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightDiagramToProfinite_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightDiagramToProfinite_obj\"><span class=\"name\">lightDiagramToProfinite_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(S : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\">LightDiagram</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightDiagramToProfinite\">lightDiagramToProfinite</a>.obj</span> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">S</span>.toProfinite</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L365-L365","name":"lightDiagramToProfinite_map","line":365,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightDiagramToProfinite_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightDiagramToProfinite_map\"><span class=\"name\">lightDiagramToProfinite_map</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FullSubcategory.html#CategoryTheory.InducedCategory\">CategoryTheory.InducedCategory</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.toProfinite\">LightDiagram.toProfinite</a></span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightDiagramToProfinite\">lightDiagramToProfinite</a>.map</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L360-L360","name":"LightDiagram.concreteCategory","line":360,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.concreteCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.concreteCategory\"><span class=\"name\">LightDiagram</span>.<span class=\"name\">concreteCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\">LightDiagram</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L358-L358","name":"LightDiagram.instCategory","line":358,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.instCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.instCategory\"><span class=\"name\">LightDiagram</span>.<span class=\"name\">instCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_1, u_1 + 1}</a>          <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\">LightDiagram</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L357-L357","name":"LightDiagram.instCategory_id_apply","line":357,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.instCategory_id_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.instCategory_id_apply\"><span class=\"name\">LightDiagram</span>.<span class=\"name\">instCategory_id_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FullSubcategory.html#CategoryTheory.InducedCategory\">CategoryTheory.InducedCategory</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.toProfinite\">LightDiagram.toProfinite</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.toProfinite\">LightDiagram.toProfinite</a> <span class=\"fn\">X</span></span>)</span>.toTop</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L357-L357","name":"LightDiagram.instCategory_comp_apply","line":357,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.instCategory_comp_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.instCategory_comp_apply\"><span class=\"name\">LightDiagram</span>.<span class=\"name\">instCategory_comp_apply</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span><span class=\"fn\">Y </span><span class=\"fn\">Z</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FullSubcategory.html#CategoryTheory.InducedCategory\">CategoryTheory.InducedCategory</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.toProfinite\">LightDiagram.toProfinite</a></span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)\n  (<span class=\"fn\">a</span> : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.toProfinite\">LightDiagram.toProfinite</a> <span class=\"fn\">X</span></span>)</span>.toTop</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L355-L355","name":"LightDiagram.toProfinite","line":355,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.toProfinite","doc":"The underlying `Profinite` of a `LightDiagram`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.toProfinite\"><span class=\"name\">LightDiagram</span>.<span class=\"name\">toProfinite</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(S : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\">LightDiagram</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L350-L350","name":"LightDiagram.isLimit","line":350,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.isLimit","doc":"The limit cone is limiting. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.isLimit\"><span class=\"name\">LightDiagram</span>.<span class=\"name\">isLimit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\">LightDiagram</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">CategoryTheory.Limits.IsLimit</a> <span class=\"fn\"><span class=\"fn\">self</span>.cone</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L348-L348","name":"LightDiagram.cone","line":348,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.cone","doc":"The limit cone. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.cone\"><span class=\"name\">LightDiagram</span>.<span class=\"name\">cone</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\">LightDiagram</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone\">CategoryTheory.Limits.Cone</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.diagram</span>.comp</span> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#FintypeCat.toProfinite\">FintypeCat.toProfinite</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L346-L346","name":"LightDiagram.diagram","line":346,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.diagram","doc":"The indexing diagram. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.diagram\"><span class=\"name\">LightDiagram</span>.<span class=\"name\">diagram</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\">LightDiagram</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L344-L344","name":"LightDiagram.mk","line":344,"kind":"ctor","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram.mk\"><span class=\"name\">LightDiagram</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(diagram : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(cone : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone\">CategoryTheory.Limits.Cone</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">diagram</span>.comp</span> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#FintypeCat.toProfinite\">FintypeCat.toProfinite</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(isLimit : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">CategoryTheory.Limits.IsLimit</a> <span class=\"fn\">cone</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\">LightDiagram</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L344-L350","name":"LightDiagram","line":344,"kind":"structure","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram","doc":"A structure containing the data of sequential limit in `Profinite` of finite sets. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightDiagram\"><span class=\"name\">LightDiagram</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u + 1)</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L326-L339","name":"LightProfinite.mono_iff_injective","line":326,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.mono_iff_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.mono_iff_injective\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">mono_iff_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Mono\">CategoryTheory.Mono</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L322-L324","name":"LightProfinite.instEpiOfCompHaus","line":322,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instEpiOfCompHaus","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instEpiOfCompHaus\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">instEpiOfCompHaus</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">CategoryTheory.Epi</a> <span class=\"fn\">f</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">CategoryTheory.Epi</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L318-L320","name":"LightProfinite.instEpiCompHaus","line":318,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instEpiCompHaus","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instEpiCompHaus\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">instEpiCompHaus</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">CategoryTheory.Epi</a> <span class=\"fn\">f</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">CategoryTheory.Epi</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L280-L316","name":"LightProfinite.epi_iff_surjective","line":280,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.epi_iff_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.epi_iff_surjective\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">epi_iff_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">CategoryTheory.Epi</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L274-L278","name":"LightProfinite.isoEquivHomeo","line":274,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.isoEquivHomeo","doc":"The equivalence between isomorphisms in `LightProfinite` and homeomorphisms\nof topological spaces. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.isoEquivHomeo\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">isoEquivHomeo</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">Y</span></span>)</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.toCompHaus</span>.toTop</span></span> <a href=\"./Mathlib/Topology/Homeomorph.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.toCompHaus</span>.toTop</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L272-L272","name":"LightProfinite.isoEquivHomeo_symm_apply_hom_apply","line":272,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.isoEquivHomeo_symm_apply_hom_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.isoEquivHomeo_symm_apply_hom_apply\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">isoEquivHomeo_symm_apply_hom_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.toCompHaus</span>.toTop</span></span> <a href=\"./Mathlib/Topology/Homeomorph.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.toCompHaus</span>.toTop</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.compHausLikeToTop\">CompHausLike.compHausLikeToTop</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>) =&gt; <a href=\"./Init/Prelude.html#True\">True</a></span></span>)</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightProfiniteToCompHaus\">lightProfiniteToCompHaus</a>.obj</span> <span class=\"fn\">X</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">LightProfinite.isoEquivHomeo</span>.symm</span> <span class=\"fn\">f</span></span>)</span>.hom</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L272-L272","name":"LightProfinite.isoEquivHomeo_symm_apply_inv_apply","line":272,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.isoEquivHomeo_symm_apply_inv_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.isoEquivHomeo_symm_apply_inv_apply\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">isoEquivHomeo_symm_apply_inv_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.toCompHaus</span>.toTop</span></span> <a href=\"./Mathlib/Topology/Homeomorph.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.toCompHaus</span>.toTop</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.compHausLikeToTop\">CompHausLike.compHausLikeToTop</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>) =&gt; <a href=\"./Init/Prelude.html#True\">True</a></span></span>)</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightProfiniteToCompHaus\">lightProfiniteToCompHaus</a>.obj</span> <span class=\"fn\">Y</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">LightProfinite.isoEquivHomeo</span>.symm</span> <span class=\"fn\">f</span></span>)</span>.inv</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.symm</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L272-L272","name":"LightProfinite.isoEquivHomeo_apply_symm_apply","line":272,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.isoEquivHomeo_apply_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.isoEquivHomeo_apply_symm_apply\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">isoEquivHomeo_apply_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.toCompHaus</span>.toTop</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">LightProfinite.isoEquivHomeo</span> <span class=\"fn\">f</span></span>)</span>.symm</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.inv</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L272-L272","name":"LightProfinite.isoEquivHomeo_apply_apply","line":272,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.isoEquivHomeo_apply_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.isoEquivHomeo_apply_apply\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">isoEquivHomeo_apply_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.toCompHaus</span>.toTop</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">LightProfinite.isoEquivHomeo</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.hom</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L268-L268","name":"LightProfinite.homeoOfIso","line":268,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.homeoOfIso","doc":"Construct a homeomorphism from an isomorphism. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.homeoOfIso\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">homeoOfIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.toCompHaus</span>.toTop</span></span> <a href=\"./Mathlib/Topology/Homeomorph.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.toCompHaus</span>.toTop</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L267-L267","name":"LightProfinite.homeoOfIso_apply","line":267,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.homeoOfIso_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.homeoOfIso_apply\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">homeoOfIso_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.toCompHaus</span>.toTop</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.homeoOfIso\">LightProfinite.homeoOfIso</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.hom</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L267-L267","name":"LightProfinite.homeoOfIso_symm_apply","line":267,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.homeoOfIso_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.homeoOfIso_symm_apply\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">homeoOfIso_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.toCompHaus</span>.toTop</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.homeoOfIso\">LightProfinite.homeoOfIso</a> <span class=\"fn\">f</span></span>)</span>.symm</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.inv</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L263-L264","name":"LightProfinite.isoOfHomeo","line":263,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.isoOfHomeo","doc":"Construct an isomorphism from a homeomorphism. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.isoOfHomeo\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">isoOfHomeo</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.toCompHaus</span>.toTop</span></span> <a href=\"./Mathlib/Topology/Homeomorph.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.toCompHaus</span>.toTop</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">Y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L261-L261","name":"LightProfinite.isoOfHomeo_inv","line":261,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.isoOfHomeo_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.isoOfHomeo_inv\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">isoOfHomeo_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.toCompHaus</span>.toTop</span></span> <a href=\"./Mathlib/Topology/Homeomorph.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.toCompHaus</span>.toTop</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.isoOfHomeo\">LightProfinite.isoOfHomeo</a> <span class=\"fn\">f</span></span>)</span>.inv</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightProfiniteToCompHausFullyFaithful\">lightProfiniteToCompHausFullyFaithful</a>.preimage</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.isoOfHomeo\">CompHausLike.isoOfHomeo</a> <span class=\"fn\">f</span></span>)</span>.inv</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L261-L261","name":"LightProfinite.isoOfHomeo_hom","line":261,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.isoOfHomeo_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.isoOfHomeo_hom\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">isoOfHomeo_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.toCompHaus</span>.toTop</span></span> <a href=\"./Mathlib/Topology/Homeomorph.html#Homeomorph\">≃ₜ</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span>.toCompHaus</span>.toTop</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.isoOfHomeo\">LightProfinite.isoOfHomeo</a> <span class=\"fn\">f</span></span>)</span>.hom</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightProfiniteToCompHausFullyFaithful\">lightProfiniteToCompHausFullyFaithful</a>.preimage</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.isoOfHomeo\">CompHausLike.isoOfHomeo</a> <span class=\"fn\">f</span></span>)</span>.hom</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L255-L258","name":"LightProfinite.forget_reflectsIsomorphisms","line":255,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.forget_reflectsIsomorphisms","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.forget_reflectsIsomorphisms\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">forget_reflectsIsomorphisms</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a></span>)</span>.ReflectsIsomorphisms</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L251-L253","name":"LightProfinite.isoOfBijective","line":251,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.isoOfBijective","doc":"Any continuous bijection of light profinite spaces induces an isomorphism. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.isoOfBijective\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">isoOfBijective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(bij : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Bijective\">Function.Bijective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\">Y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L246-L248","name":"LightProfinite.isIso_of_bijective","line":246,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.isIso_of_bijective","doc":"Any continuous bijection of light profinite spaces induces an isomorphism. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.isIso_of_bijective\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">isIso_of_bijective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(bij : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Bijective\">Function.Bijective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.IsIso\">CategoryTheory.IsIso</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L242-L243","name":"LightProfinite.isClosedMap","line":242,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.isClosedMap","doc":"Any morphism of light profinite spaces is a closed map. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.isClosedMap\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">isClosedMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosedMap\">IsClosedMap</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L235-L237","name":"LightProfinite.instPreservesLimitsOfShapeOppositeNatForget","line":235,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instPreservesLimitsOfShapeOppositeNatForget","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instPreservesLimitsOfShapeOppositeNatForget\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">instPreservesLimitsOfShapeOppositeNatForget</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesLimitsOfShape\">CategoryTheory.Limits.PreservesLimitsOfShape</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L232-L233","name":"LightProfinite.instHasCountableLimits","line":232,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instHasCountableLimits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instHasCountableLimits\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">instHasCountableLimits</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Shapes/Countable.html#CategoryTheory.Limits.HasCountableLimits\">CategoryTheory.Limits.HasCountableLimits</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L224-L230","name":"LightProfinite.createsCountableLimits","line":224,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.createsCountableLimits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.createsCountableLimits\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">createsCountableLimits</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Countable.html#CategoryTheory.CountableCategory\">CategoryTheory.CountableCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Creates.html#CategoryTheory.CreatesLimitsOfShape\">CategoryTheory.CreatesLimitsOfShape</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightToProfinite\">lightToProfinite</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L216-L222","name":"LightProfinite.limitConeIsLimit","line":216,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.limitConeIsLimit","doc":"The limit cone `LightProfinite.limitCone F` is indeed a limit cone. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.limitConeIsLimit\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">limitConeIsLimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Countable.html#CategoryTheory.CountableCategory\">CategoryTheory.CountableCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">CategoryTheory.Limits.IsLimit</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.limitCone\">LightProfinite.limitCone</a> <span class=\"fn\">F</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L200-L213","name":"LightProfinite.limitCone","line":200,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.limitCone","doc":"An explicit limit cone for a functor `F : J ⥤ LightProfinite`, for a countable category `J`\ndefined in terms of `CompHaus.limitCone`, which is defined in terms of `TopCat.limitCone`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.limitCone\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">limitCone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Countable.html#CategoryTheory.CountableCategory\">CategoryTheory.CountableCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone\">CategoryTheory.Limits.Cone</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L192-L196","name":"LightProfinite.instTotallyDisconnectedSpaceαTopologicalSpaceToTopTruePtCompHausLimitConeCompLightProfiniteToCompHaus","line":192,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instTotallyDisconnectedSpaceαTopologicalSpaceToTopTruePtCompHausLimitConeCompLightProfiniteToCompHaus","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instTotallyDisconnectedSpaceαTopologicalSpaceToTopTruePtCompHausLimitConeCompLightProfiniteToCompHaus\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">instTotallyDisconnectedSpaceαTopologicalSpaceToTopTruePtCompHausLimitConeCompLightProfiniteToCompHaus</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus.limitCone\">CompHaus.limitCone</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.comp</span> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightProfiniteToCompHaus\">lightProfiniteToCompHaus</a></span>)</span></span>)</span>.pt</span>.toTop</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L185-L186","name":"instFullFintypeCatLightProfiniteToLightProfinite","line":185,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#instFullFintypeCatLightProfiniteToLightProfinite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#instFullFintypeCatLightProfiniteToLightProfinite\"><span class=\"name\">instFullFintypeCatLightProfiniteToLightProfinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#FintypeCat.toLightProfinite\">FintypeCat.toLightProfinite</a>.Full</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L182-L183","name":"instFaithfulFintypeCatLightProfiniteToLightProfinite","line":182,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#instFaithfulFintypeCatLightProfiniteToLightProfinite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#instFaithfulFintypeCatLightProfiniteToLightProfinite\"><span class=\"name\">instFaithfulFintypeCatLightProfiniteToLightProfinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#FintypeCat.toLightProfinite\">FintypeCat.toLightProfinite</a>.Faithful</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L177-L180","name":"FintypeCat.toLightProfiniteFullyFaithful","line":177,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#FintypeCat.toLightProfiniteFullyFaithful","doc":"`FintypeCat.toLightProfinite` is fully faithful. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#FintypeCat.toLightProfiniteFullyFaithful\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">toLightProfiniteFullyFaithful</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#FintypeCat.toLightProfinite\">FintypeCat.toLightProfinite</a>.FullyFaithful</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L172-L174","name":"FintypeCat.toLightProfinite","line":172,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#FintypeCat.toLightProfinite","doc":"The natural functor from `Fintype` to `LightProfinite`, endowing a finite type with the\ndiscrete topology. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#FintypeCat.toLightProfinite\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">toLightProfinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L171-L171","name":"FintypeCat.toLightProfinite_obj_toCompHaus_toTop_α","line":171,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#FintypeCat.toLightProfinite_obj_toCompHaus_toTop_α","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#FintypeCat.toLightProfinite_obj_toCompHaus_toTop_α\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">toLightProfinite_obj_toCompHaus_toTop_α</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#FintypeCat.toLightProfinite\">FintypeCat.toLightProfinite</a>.obj</span> <span class=\"fn\">A</span></span>)</span>.toCompHaus</span>.toTop</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">A</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L171-L171","name":"FintypeCat.toLightProfinite_obj_toCompHaus_toTop_str_IsOpen","line":171,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#FintypeCat.toLightProfinite_obj_toCompHaus_toTop_str_IsOpen","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#FintypeCat.toLightProfinite_obj_toCompHaus_toTop_str_IsOpen\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">toLightProfinite_obj_toCompHaus_toTop_str_IsOpen</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(u : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">↑<span class=\"fn\">A</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace.IsOpen\">TopologicalSpace.IsOpen</a> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L171-L171","name":"FintypeCat.toLightProfinite_map_apply","line":171,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#FintypeCat.toLightProfinite_map_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#FintypeCat.toLightProfinite_map_apply\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">toLightProfinite_map_apply</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">a</span> : <span class=\"fn\">↑<span class=\"fn\">X</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#FintypeCat.toLightProfinite\">FintypeCat.toLightProfinite</a>.map</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L160-L162","name":"LightProfinite.toCompHaus_comp_toTop","line":160,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.toCompHaus_comp_toTop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.toCompHaus_comp_toTop\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">toCompHaus_comp_toTop</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightProfiniteToCompHaus\">lightProfiniteToCompHaus</a>.comp</span> <a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#compHausToTop\">compHausToTop</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.toTopCat\">LightProfinite.toTopCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L157-L157","name":"instFaithfulLightProfiniteTopCatToTopCat","line":157,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#instFaithfulLightProfiniteTopCatToTopCat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#instFaithfulLightProfiniteTopCatToTopCat\"><span class=\"name\">instFaithfulLightProfiniteTopCatToTopCat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.toTopCat\">LightProfinite.toTopCat</a>.Faithful</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L155-L155","name":"instFullLightProfiniteTopCatToTopCat","line":155,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#instFullLightProfiniteTopCatToTopCat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#instFullLightProfiniteTopCatToTopCat\"><span class=\"name\">instFullLightProfiniteTopCatToTopCat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.toTopCat\">LightProfinite.toTopCat</a>.Full</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L152-L153","name":"LightProfinite.toTopCatFullyFaithful","line":152,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.toTopCatFullyFaithful","doc":"`LightProfinite.toTopCat` is fully faithful. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.toTopCatFullyFaithful\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">toTopCatFullyFaithful</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.toTopCat\">LightProfinite.toTopCat</a>.FullyFaithful</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L146-L147","name":"LightProfinite.toTopCat","line":146,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.toTopCat","doc":"The fully faithful embedding of `LightProfinite` in `TopCat`.\nThis is definitionally the same as the obvious composite. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.toTopCat\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">toTopCat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a> <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L145-L145","name":"LightProfinite.toTopCat_obj","line":145,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.toTopCat_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.toTopCat_obj\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">toTopCat_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FullSubcategory.html#CategoryTheory.InducedCategory\">CategoryTheory.InducedCategory</a> <a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.toCompHaus\">LightProfinite.toCompHaus</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.toTopCat\">LightProfinite.toTopCat</a>.obj</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.toCompHaus</span>.toTop</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L145-L145","name":"LightProfinite.toTopCat_map","line":145,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.toTopCat_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.toTopCat_map\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">toTopCat_map</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀\n  {<span class=\"fn\">X </span><span class=\"fn\">Y</span> :\n    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FullSubcategory.html#CategoryTheory.InducedCategory\">CategoryTheory.InducedCategory</a> <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a> <span class=\"fn\">fun (<span class=\"fn\">X</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FullSubcategory.html#CategoryTheory.InducedCategory\">CategoryTheory.InducedCategory</a> <a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.toCompHaus\">LightProfinite.toCompHaus</a></span>) =&gt;\n      <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.toCompHaus</span>.toTop</span></span></span>}\n  (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.toTopCat\">LightProfinite.toTopCat</a>.map</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L140-L141","name":"instSecondCountableTopologyαTopologicalSpaceToTopTrueObjLightProfiniteCompHausLightProfiniteToCompHaus","line":140,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#instSecondCountableTopologyαTopologicalSpaceToTopTrueObjLightProfiniteCompHausLightProfiniteToCompHaus","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#instSecondCountableTopologyαTopologicalSpaceToTopTrueObjLightProfiniteCompHausLightProfiniteToCompHaus\"><span class=\"name\">instSecondCountableTopologyαTopologicalSpaceToTopTrueObjLightProfiniteCompHausLightProfiniteToCompHaus</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Bases.html#SecondCountableTopology\">SecondCountableTopology</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightProfiniteToCompHaus\">lightProfiniteToCompHaus</a>.obj</span> <span class=\"fn\">X</span></span>)</span>.toTop</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L137-L138","name":"instTotallyDisconnectedSpaceαTopologicalSpaceToTopTrueObjLightProfiniteCompHausLightProfiniteToCompHaus","line":137,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#instTotallyDisconnectedSpaceαTopologicalSpaceToTopTrueObjLightProfiniteCompHausLightProfiniteToCompHaus","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#instTotallyDisconnectedSpaceαTopologicalSpaceToTopTrueObjLightProfiniteCompHausLightProfiniteToCompHaus\"><span class=\"name\">instTotallyDisconnectedSpaceαTopologicalSpaceToTopTrueObjLightProfiniteCompHausLightProfiniteToCompHaus</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightProfiniteToCompHaus\">lightProfiniteToCompHaus</a>.obj</span> <span class=\"fn\">X</span></span>)</span>.toTop</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L135-L135","name":"instFaithfulLightProfiniteCompHausLightProfiniteToCompHaus","line":135,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#instFaithfulLightProfiniteCompHausLightProfiniteToCompHaus","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#instFaithfulLightProfiniteCompHausLightProfiniteToCompHaus\"><span class=\"name\">instFaithfulLightProfiniteCompHausLightProfiniteToCompHaus</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightProfiniteToCompHaus\">lightProfiniteToCompHaus</a>.Faithful</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L133-L133","name":"instFullLightProfiniteCompHausLightProfiniteToCompHaus","line":133,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#instFullLightProfiniteCompHausLightProfiniteToCompHaus","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#instFullLightProfiniteCompHausLightProfiniteToCompHaus\"><span class=\"name\">instFullLightProfiniteCompHausLightProfiniteToCompHaus</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightProfiniteToCompHaus\">lightProfiniteToCompHaus</a>.Full</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L130-L131","name":"lightProfiniteToCompHausFullyFaithful","line":130,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightProfiniteToCompHausFullyFaithful","doc":"`lightProfiniteToCompHaus` is fully faithful. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightProfiniteToCompHausFullyFaithful\"><span class=\"name\">lightProfiniteToCompHausFullyFaithful</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightProfiniteToCompHaus\">lightProfiniteToCompHaus</a>.FullyFaithful</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L126-L127","name":"lightProfiniteToCompHaus","line":126,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightProfiniteToCompHaus","doc":"The fully faithful embedding of `LightProfinite` in `CompHaus`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightProfiniteToCompHaus\"><span class=\"name\">lightProfiniteToCompHaus</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a> <a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L125-L125","name":"lightProfiniteToCompHaus_map","line":125,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightProfiniteToCompHaus_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightProfiniteToCompHaus_map\"><span class=\"name\">lightProfiniteToCompHaus_map</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FullSubcategory.html#CategoryTheory.InducedCategory\">CategoryTheory.InducedCategory</a> <a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.toCompHaus\">LightProfinite.toCompHaus</a></span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightProfiniteToCompHaus\">lightProfiniteToCompHaus</a>.map</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L125-L125","name":"lightProfiniteToCompHaus_obj","line":125,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightProfiniteToCompHaus_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightProfiniteToCompHaus_obj\"><span class=\"name\">lightProfiniteToCompHaus_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightProfiniteToCompHaus\">lightProfiniteToCompHaus</a>.obj</span> <span class=\"fn\">self</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">self</span>.toCompHaus</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L122-L122","name":"instFullLightProfiniteProfiniteLightToProfinite","line":122,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#instFullLightProfiniteProfiniteLightToProfinite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#instFullLightProfiniteProfiniteLightToProfinite\"><span class=\"name\">instFullLightProfiniteProfiniteLightToProfinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightToProfinite\">lightToProfinite</a>.Full</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L120-L120","name":"instFaithfulLightProfiniteProfiniteLightToProfinite","line":120,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#instFaithfulLightProfiniteProfiniteLightToProfinite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#instFaithfulLightProfiniteProfiniteLightToProfinite\"><span class=\"name\">instFaithfulLightProfiniteProfiniteLightToProfinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightToProfinite\">lightToProfinite</a>.Faithful</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L118-L118","name":"lightToProfiniteFullyFaithful","line":118,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightToProfiniteFullyFaithful","doc":"`lightToProfinite` is fully faithful. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightToProfiniteFullyFaithful\"><span class=\"name\">lightToProfiniteFullyFaithful</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightToProfinite\">lightToProfinite</a>.FullyFaithful</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L113-L115","name":"lightToProfinite","line":113,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightToProfinite","doc":"The fully faithful embedding of `LightProfinite` in `Profinite`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightToProfinite\"><span class=\"name\">lightToProfinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L112-L112","name":"lightToProfinite_map","line":112,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightToProfinite_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightToProfinite_map\"><span class=\"name\">lightToProfinite_map</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightToProfinite\">lightToProfinite</a>.map</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L112-L112","name":"lightToProfinite_obj","line":112,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightToProfinite_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightToProfinite_obj\"><span class=\"name\">lightToProfinite_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#lightToProfinite\">lightToProfinite</a>.obj</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite.of\">Profinite.of</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.toCompHaus</span>.toTop</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L105-L107","name":"LightProfinite.coe_comp","line":105,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.coe_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.coe_comp\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">coe_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Z</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a></span>)</span>.map</span> <span class=\"fn\">f</span></span>)</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a></span>)</span>.map</span> <span class=\"fn\">g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L101-L102","name":"LightProfinite.coe_id","line":101,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.coe_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.coe_id\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">coe_id</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a></span>)</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">id</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L97-L98","name":"LightProfinite.instSecondCountableTopologyObjForget","line":97,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instSecondCountableTopologyObjForget","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instSecondCountableTopologyObjForget\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">instSecondCountableTopologyObjForget</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Bases.html#SecondCountableTopology\">SecondCountableTopology</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a></span>)</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L94-L95","name":"LightProfinite.instT2SpaceObjForget","line":94,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instT2SpaceObjForget","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instT2SpaceObjForget\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">instT2SpaceObjForget</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Separation.html#T2Space\">T2Space</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a></span>)</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L91-L92","name":"LightProfinite.instCompactSpaceObjForget","line":91,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instCompactSpaceObjForget","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instCompactSpaceObjForget\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">instCompactSpaceObjForget</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a></span>)</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L88-L89","name":"LightProfinite.instTotallyDisconnectedSpaceObjForget","line":88,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instTotallyDisconnectedSpaceObjForget","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instTotallyDisconnectedSpaceObjForget\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">instTotallyDisconnectedSpaceObjForget</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a></span>)</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L85-L86","name":"LightProfinite.instTopologicalSpaceObjForget","line":85,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instTopologicalSpaceObjForget","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instTopologicalSpaceObjForget\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">instTopologicalSpaceObjForget</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a></span>)</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L74-L75","name":"LightProfinite.instSecondCountableTopologyαTopologicalSpaceToTopTrueToCompHaus","line":74,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instSecondCountableTopologyαTopologicalSpaceToTopTrueToCompHaus","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instSecondCountableTopologyαTopologicalSpaceToTopTrueToCompHaus\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">instSecondCountableTopologyαTopologicalSpaceToTopTrueToCompHaus</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Bases.html#SecondCountableTopology\">SecondCountableTopology</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.toCompHaus</span>.toTop</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L71-L72","name":"LightProfinite.instTotallyDisconnectedSpaceαTopologicalSpaceToTopTrueToCompHaus","line":71,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instTotallyDisconnectedSpaceαTopologicalSpaceToTopTrueToCompHaus","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instTotallyDisconnectedSpaceαTopologicalSpaceToTopTrueToCompHaus\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">instTotallyDisconnectedSpaceαTopologicalSpaceToTopTrueToCompHaus</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.toCompHaus</span>.toTop</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L68-L69","name":"LightProfinite.instCoeSortType","line":68,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instCoeSortType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instCoeSortType\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">instCoeSortType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeSort\">CoeSort</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> u_1)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L65-L66","name":"LightProfinite.hasForget₂","line":65,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.hasForget₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.hasForget₂\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">hasForget₂</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.HasForget₂\">CategoryTheory.HasForget₂</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a> <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L62-L63","name":"LightProfinite.concreteCategory","line":62,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.concreteCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.concreteCategory\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">concreteCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.ConcreteCategory\">CategoryTheory.ConcreteCategory</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L59-L60","name":"LightProfinite.category","line":59,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.category","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.category\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">category</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{u_1, u_1 + 1}</a>          <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L56-L57","name":"LightProfinite.instInhabited","line":56,"kind":"instance","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.instInhabited\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L52-L54","name":"LightProfinite.of","line":52,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.of","doc":"Construct a term of `LightProfinite` from a type endowed with the structure of a compact,\nHausdorff, totally disconnected and second countable topological space.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.of\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation.html#T2Space\">T2Space</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Bases.html#SecondCountableTopology\">SecondCountableTopology</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L44-L44","name":"LightProfinite.secondCountable","line":44,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.secondCountable","doc":"A light profinite space is second countable "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.secondCountable\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">secondCountable</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Bases.html#SecondCountableTopology\">SecondCountableTopology</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.toCompHaus</span>.toTop</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L42-L42","name":"LightProfinite.isTotallyDisconnected","line":42,"kind":"theorem","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.isTotallyDisconnected","doc":"A light profinite space is totally disconnected "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.isTotallyDisconnected\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">isTotallyDisconnected</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.toCompHaus</span>.toTop</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L40-L40","name":"LightProfinite.toCompHaus","line":40,"kind":"def","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.toCompHaus","doc":"The underlying compact Hausdorff space of a light profinite space. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.toCompHaus\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">toCompHaus</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L38-L38","name":"LightProfinite.mk","line":38,"kind":"ctor","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite.mk\"><span class=\"name\">LightProfinite</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(toCompHaus : <a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[isTotallyDisconnected : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">toCompHaus</span>.toTop</span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[secondCountable : <span class=\"fn\"><a href=\"./Mathlib/Topology/Bases.html#SecondCountableTopology\">SecondCountableTopology</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">toCompHaus</span>.toTop</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\">LightProfinite</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/LightProfinite/Basic.lean#L38-L44","name":"LightProfinite","line":38,"kind":"structure","docLink":"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite","doc":"`LightProfinite` is the category of second countable profinite spaces. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/LightProfinite/Basic.html#LightProfinite\"><span class=\"name\">LightProfinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u + 1)</div></div>"}]}