{"name":"Mathlib.Topology.Category.Profinite.Basic","instances":[{"typeNames":[],"name":"Profinite.instHasPropTotallyDisconnectedSpaceαTopologicalSpace","className":"CompHausLike.HasProp"},{"typeNames":["Profinite"],"name":"Profinite.instInhabited","className":"Inhabited"},{"typeNames":["CategoryTheory.Bundled.α"],"name":"Profinite.instTotallyDisconnectedSpaceαTopologicalSpaceToTop","className":"TotallyDisconnectedSpace"},{"typeNames":["Prefunctor.obj"],"name":"Profinite.instTotallyDisconnectedSpaceObjForget","className":"TotallyDisconnectedSpace"},{"typeNames":["CategoryTheory.Bundled.α"],"name":"instTotallyDisconnectedSpaceαTopologicalSpaceToTopTrueObjProfiniteCompHausProfiniteToCompHaus","className":"TotallyDisconnectedSpace"},{"typeNames":["FintypeCat.toProfinite"],"name":"instFaithfulFintypeCatProfiniteToProfinite","className":"CategoryTheory.Functor.Faithful"},{"typeNames":["FintypeCat.toProfinite"],"name":"instFullFintypeCatProfiniteToProfinite","className":"CategoryTheory.Functor.Full"},{"typeNames":["profiniteToCompHaus"],"name":"Profinite.toCompHaus.reflective","className":"CategoryTheory.Reflective"},{"typeNames":["profiniteToCompHaus"],"name":"Profinite.toCompHaus.createsLimits","className":"CategoryTheory.CreatesLimitsOfSize"},{"typeNames":["Profinite.toTopCat"],"name":"Profinite.toTopCat.reflective","className":"CategoryTheory.Reflective"},{"typeNames":["Profinite.toTopCat"],"name":"Profinite.toTopCat.createsLimits","className":"CategoryTheory.CreatesLimitsOfSize"},{"typeNames":["Profinite"],"name":"Profinite.hasLimits","className":"CategoryTheory.Limits.HasLimitsOfSize"},{"typeNames":["Profinite"],"name":"Profinite.hasColimits","className":"CategoryTheory.Limits.HasColimitsOfSize"},{"typeNames":["CategoryTheory.forget"],"name":"Profinite.forgetPreservesLimits","className":"CategoryTheory.Limits.PreservesLimitsOfSize"}],"imports":["Init","Mathlib.CategoryTheory.FintypeCat","Mathlib.Topology.Category.CompHaus.Basic","Mathlib.Topology.LocallyConstant.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/Profinite/Basic.lean#L213-L248","name":"Profinite.epi_iff_surjective","line":213,"kind":"theorem","docLink":"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite.epi_iff_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite.epi_iff_surjective\"><span class=\"name\">Profinite</span>.<span class=\"name\">epi_iff_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Epi\">CategoryTheory.Epi</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/Profinite/Basic.lean#L210-L211","name":"Profinite.forgetPreservesLimits","line":210,"kind":"instance","docLink":"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite.forgetPreservesLimits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite.forgetPreservesLimits\"><span class=\"name\">Profinite</span>.<span class=\"name\">forgetPreservesLimits</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Preserves/Basic.html#CategoryTheory.Limits.PreservesLimits\">CategoryTheory.Limits.PreservesLimits</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/Profinite/Basic.lean#L207-L208","name":"Profinite.hasColimits","line":207,"kind":"instance","docLink":"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite.hasColimits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite.hasColimits\"><span class=\"name\">Profinite</span>.<span class=\"name\">hasColimits</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasColimits\">CategoryTheory.Limits.HasColimits</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/Profinite/Basic.lean#L204-L205","name":"Profinite.hasLimits","line":204,"kind":"instance","docLink":"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite.hasLimits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite.hasLimits\"><span class=\"name\">Profinite</span>.<span class=\"name\">hasLimits</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/HasLimits.html#CategoryTheory.Limits.HasLimits\">CategoryTheory.Limits.HasLimits</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/Profinite/Basic.lean#L201-L202","name":"Profinite.toTopCat.createsLimits","line":201,"kind":"instance","docLink":"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite.toTopCat.createsLimits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite.toTopCat.createsLimits\"><span class=\"name\">Profinite</span>.<span class=\"name\">toTopCat</span>.<span class=\"name\">createsLimits</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Creates.html#CategoryTheory.CreatesLimits\">CategoryTheory.CreatesLimits</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite.toTopCat\">Profinite.toTopCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/Profinite/Basic.lean#L198-L199","name":"Profinite.toTopCat.reflective","line":198,"kind":"instance","docLink":"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite.toTopCat.reflective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite.toTopCat.reflective\"><span class=\"name\">Profinite</span>.<span class=\"name\">toTopCat</span>.<span class=\"name\">reflective</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Reflective.html#CategoryTheory.Reflective\">CategoryTheory.Reflective</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite.toTopCat\">Profinite.toTopCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/Profinite/Basic.lean#L195-L196","name":"Profinite.toCompHaus.createsLimits","line":195,"kind":"instance","docLink":"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite.toCompHaus.createsLimits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite.toCompHaus.createsLimits\"><span class=\"name\">Profinite</span>.<span class=\"name\">toCompHaus</span>.<span class=\"name\">createsLimits</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Creates.html#CategoryTheory.CreatesLimits\">CategoryTheory.CreatesLimits</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#profiniteToCompHaus\">profiniteToCompHaus</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/Profinite/Basic.lean#L192-L193","name":"Profinite.toCompHaus.reflective","line":192,"kind":"instance","docLink":"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite.toCompHaus.reflective","doc":"The category of profinite sets is reflective in the category of compact Hausdorff spaces "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite.toCompHaus.reflective\"><span class=\"name\">Profinite</span>.<span class=\"name\">toCompHaus</span>.<span class=\"name\">reflective</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Adjunction/Reflective.html#CategoryTheory.Reflective\">CategoryTheory.Reflective</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#profiniteToCompHaus\">profiniteToCompHaus</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/Profinite/Basic.lean#L188-L189","name":"Profinite.toProfiniteAdjToCompHaus","line":188,"kind":"def","docLink":"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite.toProfiniteAdjToCompHaus","doc":"The adjunction between CompHaus.to_Profinite and Profinite.to_CompHaus "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite.toProfiniteAdjToCompHaus\"><span class=\"name\">Profinite</span>.<span class=\"name\">toProfiniteAdjToCompHaus</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#CompHaus.toProfinite\">CompHaus.toProfinite</a> <a href=\"./Mathlib/CategoryTheory/Adjunction/Basic.html#CategoryTheory.Adjunction\">⊣</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#profiniteToCompHaus\">profiniteToCompHaus</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/Profinite/Basic.lean#L180-L185","name":"Profinite.limitConeIsLimit","line":180,"kind":"def","docLink":"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite.limitConeIsLimit","doc":"The limit cone `Profinite.limitCone F` is indeed a limit cone. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite.limitConeIsLimit\"><span class=\"name\">Profinite</span>.<span class=\"name\">limitConeIsLimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">CategoryTheory.Limits.IsLimit</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite.limitCone\">Profinite.limitCone</a> <span class=\"fn\">F</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/Profinite/Basic.lean#L165-L177","name":"Profinite.limitCone","line":165,"kind":"def","docLink":"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite.limitCone","doc":"An explicit limit cone for a functor `F : J ⥤ Profinite`, defined in terms of\n`CompHaus.limitCone`, which is defined in terms of `TopCat.limitCone`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite.limitCone\"><span class=\"name\">Profinite</span>.<span class=\"name\">limitCone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{J : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.SmallCategory\">CategoryTheory.SmallCategory</a> <span class=\"fn\">J</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">J</span> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone\">CategoryTheory.Limits.Cone</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/Profinite/Basic.lean#L155-L155","name":"instFullFintypeCatProfiniteToProfinite","line":155,"kind":"instance","docLink":"./Mathlib/Topology/Category/Profinite/Basic.html#instFullFintypeCatProfiniteToProfinite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Profinite/Basic.html#instFullFintypeCatProfiniteToProfinite\"><span class=\"name\">instFullFintypeCatProfiniteToProfinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#FintypeCat.toProfinite\">FintypeCat.toProfinite</a>.Full</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/Profinite/Basic.lean#L153-L153","name":"instFaithfulFintypeCatProfiniteToProfinite","line":153,"kind":"instance","docLink":"./Mathlib/Topology/Category/Profinite/Basic.html#instFaithfulFintypeCatProfiniteToProfinite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Profinite/Basic.html#instFaithfulFintypeCatProfiniteToProfinite\"><span class=\"name\">instFaithfulFintypeCatProfiniteToProfinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#FintypeCat.toProfinite\">FintypeCat.toProfinite</a>.Faithful</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/Profinite/Basic.lean#L148-L151","name":"FintypeCat.toProfiniteFullyFaithful","line":148,"kind":"def","docLink":"./Mathlib/Topology/Category/Profinite/Basic.html#FintypeCat.toProfiniteFullyFaithful","doc":"`FintypeCat.toLightProfinite` is fully faithful. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Profinite/Basic.html#FintypeCat.toProfiniteFullyFaithful\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">toProfiniteFullyFaithful</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#FintypeCat.toProfinite\">FintypeCat.toProfinite</a>.FullyFaithful</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/Profinite/Basic.lean#L141-L143","name":"FintypeCat.toProfinite","line":141,"kind":"def","docLink":"./Mathlib/Topology/Category/Profinite/Basic.html#FintypeCat.toProfinite","doc":"The natural functor from `Fintype` to `Profinite`, endowing a finite type with the\ndiscrete topology. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Profinite/Basic.html#FintypeCat.toProfinite\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">toProfinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/Profinite/Basic.lean#L140-L140","name":"FintypeCat.toProfinite_map_apply","line":140,"kind":"theorem","docLink":"./Mathlib/Topology/Category/Profinite/Basic.html#FintypeCat.toProfinite_map_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Profinite/Basic.html#FintypeCat.toProfinite_map_apply\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">toProfinite_map_apply</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>) (<span class=\"fn\">a</span> : <span class=\"fn\">↑<span class=\"fn\">X</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#FintypeCat.toProfinite\">FintypeCat.toProfinite</a>.map</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/Profinite/Basic.lean#L140-L140","name":"FintypeCat.toProfinite_obj","line":140,"kind":"theorem","docLink":"./Mathlib/Topology/Category/Profinite/Basic.html#FintypeCat.toProfinite_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Profinite/Basic.html#FintypeCat.toProfinite_obj\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">toProfinite_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#FintypeCat.toProfinite\">FintypeCat.toProfinite</a>.obj</span> <span class=\"fn\">A</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite.of\">Profinite.of</a> <span class=\"fn\">↑<span class=\"fn\">A</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/Profinite/Basic.lean#L133-L134","name":"FintypeCat.discreteTopology","line":133,"kind":"theorem","docLink":"./Mathlib/Topology/Category/Profinite/Basic.html#FintypeCat.discreteTopology","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Profinite/Basic.html#FintypeCat.discreteTopology\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">discreteTopology</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Order.html#DiscreteTopology\">DiscreteTopology</a> <span class=\"fn\">↑<span class=\"fn\">A</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/Profinite/Basic.lean#L127-L127","name":"FintypeCat.botTopology","line":127,"kind":"def","docLink":"./Mathlib/Topology/Category/Profinite/Basic.html#FintypeCat.botTopology","doc":"Finite types are given the discrete topology. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Profinite/Basic.html#FintypeCat.botTopology\"><span class=\"name\">FintypeCat</span>.<span class=\"name\">botTopology</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./Mathlib/CategoryTheory/FintypeCat.html#FintypeCat\">FintypeCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">↑<span class=\"fn\">A</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/Profinite/Basic.lean#L122-L124","name":"CompHaus.toProfinite_obj'","line":122,"kind":"theorem","docLink":"./Mathlib/Topology/Category/Profinite/Basic.html#CompHaus.toProfinite_obj'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Profinite/Basic.html#CompHaus.toProfinite_obj'\"><span class=\"name\">CompHaus</span>.<span class=\"name\">toProfinite_obj'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#CompHaus.toProfinite\">CompHaus.toProfinite</a>.obj</span> <span class=\"fn\">X</span></span>)</span>.toTop</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/Clopen.html#ConnectedComponents\">ConnectedComponents</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.toTop</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/Profinite/Basic.lean#L119-L120","name":"CompHaus.toProfinite","line":119,"kind":"def","docLink":"./Mathlib/Topology/Category/Profinite/Basic.html#CompHaus.toProfinite","doc":"The connected_components functor from compact Hausdorff spaces to profinite spaces,\nleft adjoint to the inclusion functor.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Profinite/Basic.html#CompHaus.toProfinite\"><span class=\"name\">CompHaus</span>.<span class=\"name\">toProfinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/Profinite/Basic.lean#L107-L114","name":"Profinite.toCompHausEquivalence","line":107,"kind":"def","docLink":"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite.toCompHausEquivalence","doc":"(Implementation) The bijection of homsets to establish the reflective adjunction of Profinite\nspaces in compact Hausdorff spaces.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite.toCompHausEquivalence\"><span class=\"name\">Profinite</span>.<span class=\"name\">toCompHausEquivalence</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Y : <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.toProfiniteObj</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y</span></span>)</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#profiniteToCompHaus\">profiniteToCompHaus</a>.obj</span> <span class=\"fn\">Y</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/Profinite/Basic.lean#L98-L102","name":"CompHaus.toProfiniteObj","line":98,"kind":"def","docLink":"./Mathlib/Topology/Category/Profinite/Basic.html#CompHaus.toProfiniteObj","doc":"(Implementation) The object part of the connected_components functor from compact Hausdorff spaces\nto Profinite spaces, given by quotienting a space by its connected components.\nSee: https://stacks.math.columbia.edu/tag/0900\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Profinite/Basic.html#CompHaus.toProfiniteObj\"><span class=\"name\">CompHaus</span>.<span class=\"name\">toProfiniteObj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/Profinite/Basic.lean#L84-L85","name":"Profinite.toTopCat","line":84,"kind":"def","docLink":"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite.toTopCat","doc":"The fully faithful embedding of `Profinite` in `TopCat`.\nThis is definitionally the same as the obvious composite. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite.toTopCat\"><span class=\"name\">Profinite</span>.<span class=\"name\">toTopCat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a> <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/Profinite/Basic.lean#L79-L80","name":"instTotallyDisconnectedSpaceαTopologicalSpaceToTopTrueObjProfiniteCompHausProfiniteToCompHaus","line":79,"kind":"instance","docLink":"./Mathlib/Topology/Category/Profinite/Basic.html#instTotallyDisconnectedSpaceαTopologicalSpaceToTopTrueObjProfiniteCompHausProfiniteToCompHaus","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Profinite/Basic.html#instTotallyDisconnectedSpaceαTopologicalSpaceToTopTrueObjProfiniteCompHausProfiniteToCompHaus\"><span class=\"name\">instTotallyDisconnectedSpaceαTopologicalSpaceToTopTrueObjProfiniteCompHausProfiniteToCompHaus</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#profiniteToCompHaus\">profiniteToCompHaus</a>.obj</span> <span class=\"fn\">X</span></span>)</span>.toTop</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/Profinite/Basic.lean#L73-L74","name":"profiniteToCompHaus","line":73,"kind":"def","docLink":"./Mathlib/Topology/Category/Profinite/Basic.html#profiniteToCompHaus","doc":"The fully faithful embedding of `Profinite` in `CompHaus`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Profinite/Basic.html#profiniteToCompHaus\"><span class=\"name\">profiniteToCompHaus</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a> <a href=\"./Mathlib/Topology/Category/CompHaus/Basic.html#CompHaus\">CompHaus</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/Profinite/Basic.lean#L66-L68","name":"Profinite.instTotallyDisconnectedSpaceObjForget","line":66,"kind":"instance","docLink":"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite.instTotallyDisconnectedSpaceObjForget","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite.instTotallyDisconnectedSpaceObjForget\"><span class=\"name\">Profinite</span>.<span class=\"name\">instTotallyDisconnectedSpaceObjForget</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/ConcreteCategory/Basic.html#CategoryTheory.forget\">CategoryTheory.forget</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a></span>)</span>.obj</span> <span class=\"fn\">X</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/Profinite/Basic.lean#L63-L64","name":"Profinite.instTotallyDisconnectedSpaceαTopologicalSpaceToTop","line":63,"kind":"instance","docLink":"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite.instTotallyDisconnectedSpaceαTopologicalSpaceToTop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite.instTotallyDisconnectedSpaceαTopologicalSpaceToTop\"><span class=\"name\">Profinite</span>.<span class=\"name\">instTotallyDisconnectedSpaceαTopologicalSpaceToTop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">X</span>.toTop</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/Profinite/Basic.lean#L60-L61","name":"Profinite.instInhabited","line":60,"kind":"instance","docLink":"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite.instInhabited\"><span class=\"name\">Profinite</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/Profinite/Basic.lean#L56-L58","name":"Profinite.of","line":56,"kind":"def","docLink":"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite.of","doc":"Construct a term of `Profinite` from a type endowed with the structure of a\ncompact, Hausdorff and totally disconnected topological space.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite.of\"><span class=\"name\">Profinite</span>.<span class=\"name\">of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation.html#T2Space\">T2Space</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\">Profinite</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/Profinite/Basic.lean#L49-L51","name":"Profinite.instHasPropTotallyDisconnectedSpaceαTopologicalSpace","line":49,"kind":"instance","docLink":"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite.instHasPropTotallyDisconnectedSpaceαTopologicalSpace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite.instHasPropTotallyDisconnectedSpaceαTopologicalSpace\"><span class=\"name\">Profinite</span>.<span class=\"name\">instHasPropTotallyDisconnectedSpaceαTopologicalSpace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Category/CompHausLike/Basic.html#CompHausLike.HasProp\">CompHausLike.HasProp</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">Y</span> : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/TotallyDisconnected.html#TotallyDisconnectedSpace\">TotallyDisconnectedSpace</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span></span></span>)</span> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Category/Profinite/Basic.lean#L45-L45","name":"Profinite","line":45,"kind":"def","docLink":"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite","doc":"The type of profinite topological spaces. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Category/Profinite/Basic.html#Profinite\"><span class=\"name\">Profinite</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u_1 + 1)</div></div>"}]}