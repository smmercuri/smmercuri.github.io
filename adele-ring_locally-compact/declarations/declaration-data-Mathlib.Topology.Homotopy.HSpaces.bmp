{"name":"Mathlib.Topology.Homotopy.HSpaces","instances":[{"typeNames":["Prod"],"name":"HSpace.prod","className":"HSpace"},{"typeNames":[],"name":"TopologicalAddGroup.hSpace","className":"HSpace"},{"typeNames":[],"name":"TopologicalGroup.hSpace","className":"HSpace"},{"typeNames":["Path"],"name":"Path.instHSpace","className":"HSpace"}],"imports":["Init","Mathlib.Topology.CompactOpen","Mathlib.Topology.Connected.PathConnected","Mathlib.Topology.Homotopy.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Homotopy/HSpaces.lean#L251-L264","name":"Path.instHSpace","line":251,"kind":"instance","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#Path.instHSpace","doc":"The loop space at x carries a structure of an H-space. Note that the field `eHmul`\n(resp. `hmulE`) neither implies nor is implied by `Path.Homotopy.reflTrans`\n(resp. `Path.Homotopy.transRefl`).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#Path.instHSpace\"><span class=\"name\">Path</span>.<span class=\"name\">instHSpace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace\">HSpace</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x</span> <span class=\"fn\">x</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Homotopy/HSpaces.lean#L244-L245","name":"Path.delayReflLeft_one","line":244,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#Path.delayReflLeft_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#Path.delayReflLeft_one\"><span class=\"name\">Path</span>.<span class=\"name\">delayReflLeft_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(γ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#Path.delayReflLeft\">Path.delayReflLeft</a> <span class=\"fn\">1</span> <span class=\"fn\">γ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">γ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Homotopy/HSpaces.lean#L241-L242","name":"Path.delayReflLeft_zero","line":241,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#Path.delayReflLeft_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#Path.delayReflLeft_zero\"><span class=\"name\">Path</span>.<span class=\"name\">delayReflLeft_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(γ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#Path.delayReflLeft\">Path.delayReflLeft</a> <span class=\"fn\">0</span> <span class=\"fn\">γ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path.refl\">Path.refl</a> <span class=\"fn\">x</span></span>)</span>.trans</span> <span class=\"fn\">γ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Homotopy/HSpaces.lean#L236-L239","name":"Path.continuous_delayReflLeft","line":236,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#Path.continuous_delayReflLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#Path.continuous_delayReflLeft\"><span class=\"name\">Path</span>.<span class=\"name\">continuous_delayReflLeft</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">fun (<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#Path.delayReflLeft\">Path.delayReflLeft</a> <span class=\"fn\"><span class=\"fn\">p</span>.1</span> <span class=\"fn\"><span class=\"fn\">p</span>.2</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Homotopy/HSpaces.lean#L233-L234","name":"Path.delayReflLeft","line":233,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#Path.delayReflLeft","doc":"This is the function on p. 475 of [serre1951], defining a homotopy from a path `γ` to the\nproduct path `e ∧ γ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#Path.delayReflLeft\"><span class=\"name\">Path</span>.<span class=\"name\">delayReflLeft</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(θ : <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(γ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Homotopy/HSpaces.lean#L227-L229","name":"Path.delayReflRight_one","line":227,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#Path.delayReflRight_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#Path.delayReflRight_one\"><span class=\"name\">Path</span>.<span class=\"name\">delayReflRight_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(γ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#Path.delayReflRight\">Path.delayReflRight</a> <span class=\"fn\">1</span> <span class=\"fn\">γ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">γ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Homotopy/HSpaces.lean#L218-L225","name":"Path.delayReflRight_zero","line":218,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#Path.delayReflRight_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#Path.delayReflRight_zero\"><span class=\"name\">Path</span>.<span class=\"name\">delayReflRight_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(γ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#Path.delayReflRight\">Path.delayReflRight</a> <span class=\"fn\">0</span> <span class=\"fn\">γ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">γ</span>.trans</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path.refl\">Path.refl</a> <span class=\"fn\">y</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Homotopy/HSpaces.lean#L213-L216","name":"Path.continuous_delayReflRight","line":213,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#Path.continuous_delayReflRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#Path.continuous_delayReflRight\"><span class=\"name\">Path</span>.<span class=\"name\">continuous_delayReflRight</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">fun (<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#Path.delayReflRight\">Path.delayReflRight</a> <span class=\"fn\"><span class=\"fn\">p</span>.1</span> <span class=\"fn\"><span class=\"fn\">p</span>.2</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Homotopy/HSpaces.lean#L203-L211","name":"Path.delayReflRight","line":203,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#Path.delayReflRight","doc":"This is the function analogous to the one on p. 475 of [serre1951], defining a homotopy from\nthe product path `γ ∧ e` to `γ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#Path.delayReflRight\"><span class=\"name\">Path</span>.<span class=\"name\">delayReflRight</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(θ : <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(γ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Homotopy/HSpaces.lean#L190-L191","name":"unitInterval.qRight_one_right","line":190,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#unitInterval.qRight_one_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#unitInterval.qRight_one_right\"><span class=\"name\">unitInterval</span>.<span class=\"name\">qRight_one_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#unitInterval.qRight\">unitInterval.qRight</a> <span class=\"fn\">(<span class=\"fn\">t</span>, <span class=\"fn\">1</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">t</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Homotopy/HSpaces.lean#L179-L188","name":"unitInterval.qRight_zero_right","line":179,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#unitInterval.qRight_zero_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#unitInterval.qRight_zero_right\"><span class=\"name\">unitInterval</span>.<span class=\"name\">qRight_zero_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#unitInterval.qRight\">unitInterval.qRight</a> <span class=\"fn\">(<span class=\"fn\">t</span>, <span class=\"fn\">0</span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">if <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">1</span> / <span class=\"fn\">2</span></span></span> then <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">t</span></span></span> else <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Homotopy/HSpaces.lean#L171-L177","name":"unitInterval.qRight_one_left","line":171,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#unitInterval.qRight_one_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#unitInterval.qRight_one_left\"><span class=\"name\">unitInterval</span>.<span class=\"name\">qRight_one_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(θ : <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#unitInterval.qRight\">unitInterval.qRight</a> <span class=\"fn\">(<span class=\"fn\">1</span>, <span class=\"fn\">θ</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Homotopy/HSpaces.lean#L168-L169","name":"unitInterval.qRight_zero_left","line":168,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#unitInterval.qRight_zero_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#unitInterval.qRight_zero_left\"><span class=\"name\">unitInterval</span>.<span class=\"name\">qRight_zero_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(θ : <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#unitInterval.qRight\">unitInterval.qRight</a> <span class=\"fn\">(<span class=\"fn\">0</span>, <span class=\"fn\">θ</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Homotopy/HSpaces.lean#L164-L166","name":"unitInterval.continuous_qRight","line":164,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#unitInterval.continuous_qRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#unitInterval.continuous_qRight\"><span class=\"name\">unitInterval</span>.<span class=\"name\">continuous_qRight</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#unitInterval.qRight\">unitInterval.qRight</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Homotopy/HSpaces.lean#L161-L162","name":"unitInterval.qRight","line":161,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#unitInterval.qRight","doc":"`qRight` is analogous to the function `Q` defined on p. 475 of [serre1951] that helps proving\ncontinuity of `delayReflRight`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#unitInterval.qRight\"><span class=\"name\">unitInterval</span>.<span class=\"name\">qRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Homotopy/HSpaces.lean#L143-L145","name":"TopologicalGroup.one_eq_hSpace_e","line":143,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#TopologicalGroup.one_eq_hSpace_e","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#TopologicalGroup.one_eq_hSpace_e\"><span class=\"name\">TopologicalGroup</span>.<span class=\"name\">one_eq_hSpace_e</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HSpace.e</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Homotopy/HSpaces.lean#L139-L141","name":"TopologicalGroup.hSpace","line":139,"kind":"instance","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#TopologicalGroup.hSpace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#TopologicalGroup.hSpace\"><span class=\"name\">TopologicalGroup</span>.<span class=\"name\">hSpace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalGroup\">TopologicalGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace\">HSpace</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Homotopy/HSpaces.lean#L138-L138","name":"TopologicalAddGroup.hSpace","line":138,"kind":"instance","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#TopologicalAddGroup.hSpace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#TopologicalAddGroup.hSpace\"><span class=\"name\">TopologicalAddGroup</span>.<span class=\"name\">hSpace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddGroup\">AddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#TopologicalAddGroup\">TopologicalAddGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace\">HSpace</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Homotopy/HSpaces.lean#L131-L136","name":"TopologicalGroup.toHSpace","line":131,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#TopologicalGroup.toHSpace","doc":"The definition `toHSpace` is not an instance because its additive version would\nlead to a diamond since a topological field would inherit two `HSpace` structures, one from the\n`MulOneClass` and one from the `AddZeroClass`. In the case of a group, we make\n`TopologicalGroup.hSpace` an instance.\""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#TopologicalGroup.toHSpace\"><span class=\"name\">TopologicalGroup</span>.<span class=\"name\">toHSpace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(M : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#MulOneClass\">MulOneClass</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Monoid.html#ContinuousMul\">ContinuousMul</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace\">HSpace</a> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Homotopy/HSpaces.lean#L126-L130","name":"TopologicalAddGroup.toHSpace","line":126,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#TopologicalAddGroup.toHSpace","doc":"The definition `toHSpace` is not an instance because it comes together with a\nmultiplicative version which would lead to a diamond since a topological field would inherit\ntwo `HSpace` structures, one from the `MulOneClass` and one from the `AddZeroClass`.\nIn the case of an additive group, we make `TopologicalAddGroup.hSpace` an instance."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#TopologicalAddGroup.toHSpace\"><span class=\"name\">TopologicalAddGroup</span>.<span class=\"name\">toHSpace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(M : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Monoid.html#ContinuousAdd\">ContinuousAdd</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace\">HSpace</a> <span class=\"fn\">M</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Homotopy/HSpaces.lean#L126-L130","name":"TopologicalAddGroup.toHSpace.proof_1","line":126,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#TopologicalAddGroup.toHSpace.proof_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#TopologicalAddGroup.toHSpace.proof_1\"><span class=\"name\">TopologicalAddGroup</span>.<span class=\"name\">toHSpace</span>.<span class=\"name\">proof_1</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(M : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Monoid.html#ContinuousAdd\">ContinuousAdd</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">fun (<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">M</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">p</span>.2</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Homotopy/HSpaces.lean#L126-L130","name":"TopologicalAddGroup.toHSpace.proof_4","line":126,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#TopologicalAddGroup.toHSpace.proof_4","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#TopologicalAddGroup.toHSpace.proof_4\"><span class=\"name\">TopologicalAddGroup</span>.<span class=\"name\">toHSpace</span>.<span class=\"name\">proof_4</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(M : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Monoid.html#ContinuousAdd\">ContinuousAdd</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.uncurry\">Function.uncurry</a> <span class=\"fn\">Add.add</span></span>, <span class=\"fn\">continuous_toFun</span> := <span class=\"fn\">⋯</span> }</span>.comp</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.const\">ContinuousMap.const</a> <span class=\"fn\">M</span> <span class=\"fn\">0</span></span>)</span>.prodMk</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.id\">ContinuousMap.id</a> <span class=\"fn\">M</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.id\">ContinuousMap.id</a> <span class=\"fn\">M</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Homotopy/HSpaces.lean#L126-L130","name":"TopologicalAddGroup.toHSpace.proof_5","line":126,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#TopologicalAddGroup.toHSpace.proof_5","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#TopologicalAddGroup.toHSpace.proof_5\"><span class=\"name\">TopologicalAddGroup</span>.<span class=\"name\">toHSpace</span>.<span class=\"name\">proof_5</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(M : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Monoid.html#ContinuousAdd\">ContinuousAdd</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.uncurry\">Function.uncurry</a> <span class=\"fn\">Add.add</span></span>, <span class=\"fn\">continuous_toFun</span> := <span class=\"fn\">⋯</span> }</span>.comp</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.id\">ContinuousMap.id</a> <span class=\"fn\">M</span></span>)</span>.prodMk</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.const\">ContinuousMap.const</a> <span class=\"fn\">M</span> <span class=\"fn\">0</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.uncurry\">Function.uncurry</a> <span class=\"fn\">Add.add</span></span>, <span class=\"fn\">continuous_toFun</span> := <span class=\"fn\">⋯</span> }</span>.comp</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.id\">ContinuousMap.id</a> <span class=\"fn\">M</span></span>)</span>.prodMk</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.const\">ContinuousMap.const</a> <span class=\"fn\">M</span> <span class=\"fn\">0</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Homotopy/HSpaces.lean#L126-L130","name":"TopologicalAddGroup.toHSpace.proof_2","line":126,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#TopologicalAddGroup.toHSpace.proof_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#TopologicalAddGroup.toHSpace.proof_2\"><span class=\"name\">TopologicalAddGroup</span>.<span class=\"name\">toHSpace</span>.<span class=\"name\">proof_2</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(M : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Homotopy/HSpaces.lean#L126-L130","name":"TopologicalAddGroup.toHSpace.proof_3","line":126,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#TopologicalAddGroup.toHSpace.proof_3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#TopologicalAddGroup.toHSpace.proof_3\"><span class=\"name\">TopologicalAddGroup</span>.<span class=\"name\">toHSpace</span>.<span class=\"name\">proof_3</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(M : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Monoid.html#ContinuousAdd\">ContinuousAdd</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.uncurry\">Function.uncurry</a> <span class=\"fn\">Add.add</span></span>, <span class=\"fn\">continuous_toFun</span> := <span class=\"fn\">⋯</span> }</span>.comp</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.const\">ContinuousMap.const</a> <span class=\"fn\">M</span> <span class=\"fn\">0</span></span>)</span>.prodMk</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.id\">ContinuousMap.id</a> <span class=\"fn\">M</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.uncurry\">Function.uncurry</a> <span class=\"fn\">Add.add</span></span>, <span class=\"fn\">continuous_toFun</span> := <span class=\"fn\">⋯</span> }</span>.comp</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.const\">ContinuousMap.const</a> <span class=\"fn\">M</span> <span class=\"fn\">0</span></span>)</span>.prodMk</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.id\">ContinuousMap.id</a> <span class=\"fn\">M</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Homotopy/HSpaces.lean#L126-L130","name":"TopologicalAddGroup.toHSpace.proof_6","line":126,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#TopologicalAddGroup.toHSpace.proof_6","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#TopologicalAddGroup.toHSpace.proof_6\"><span class=\"name\">TopologicalAddGroup</span>.<span class=\"name\">toHSpace</span>.<span class=\"name\">proof_6</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(M : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddZeroClass\">AddZeroClass</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Monoid.html#ContinuousAdd\">ContinuousAdd</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">toFun</span> := <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.uncurry\">Function.uncurry</a> <span class=\"fn\">Add.add</span></span>, <span class=\"fn\">continuous_toFun</span> := <span class=\"fn\">⋯</span> }</span>.comp</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.id\">ContinuousMap.id</a> <span class=\"fn\">M</span></span>)</span>.prodMk</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.const\">ContinuousMap.const</a> <span class=\"fn\">M</span> <span class=\"fn\">0</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.id\">ContinuousMap.id</a> <span class=\"fn\">M</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Homotopy/HSpaces.lean#L76-L117","name":"HSpace.prod","line":76,"kind":"instance","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace.prod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace.prod\"><span class=\"name\">HSpace</span>.<span class=\"name\">prod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Y : <a href=\"./foundational_types.html\">Type</a> v)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace\">HSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace\">HSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace\">HSpace</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Y</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Homotopy/HSpaces.lean#L70-L71","name":"HSpaces.«term_⋀_»","line":70,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#HSpaces.«term_⋀_»","doc":"The binary operation `hmul` on an `H`-space "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpaces.«term_⋀_»\"><span class=\"name\">HSpaces</span>.<span class=\"name\">«term_⋀_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Homotopy/HSpaces.lean#L67-L67","name":"HSpace.hmulE","line":67,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace.hmulE","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace.hmulE\"><span class=\"name\">HSpace</span>.<span class=\"name\">hmulE</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace\">HSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">HSpace.hmul</span>.comp</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.id\">ContinuousMap.id</a> <span class=\"fn\">X</span></span>)</span>.prodMk</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.const\">ContinuousMap.const</a> <span class=\"fn\">X</span> <span class=\"fn\">HSpace.e</span></span>)</span></span>)</span></span>)</span>.HomotopyRel</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.id\">ContinuousMap.id</a> <span class=\"fn\">X</span></span>)</span>\n  <span class=\"fn\">{<span class=\"fn\">HSpace.e</span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Homotopy/HSpaces.lean#L65-L65","name":"HSpace.eHmul","line":65,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace.eHmul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace.eHmul\"><span class=\"name\">HSpace</span>.<span class=\"name\">eHmul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace\">HSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">HSpace.hmul</span>.comp</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.const\">ContinuousMap.const</a> <span class=\"fn\">X</span> <span class=\"fn\">HSpace.e</span></span>)</span>.prodMk</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.id\">ContinuousMap.id</a> <span class=\"fn\">X</span></span>)</span></span>)</span></span>)</span>.HomotopyRel</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.id\">ContinuousMap.id</a> <span class=\"fn\">X</span></span>)</span>\n  <span class=\"fn\">{<span class=\"fn\">HSpace.e</span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Homotopy/HSpaces.lean#L64-L64","name":"HSpace.hmul_e_e","line":64,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace.hmul_e_e","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace.hmul_e_e\"><span class=\"name\">HSpace</span>.<span class=\"name\">hmul_e_e</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace\">HSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">HSpace.hmul</span> <span class=\"fn\">(<span class=\"fn\">HSpace.e</span>, <span class=\"fn\">HSpace.e</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">HSpace.e</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Homotopy/HSpaces.lean#L63-L63","name":"HSpace.e","line":63,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace.e","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace.e\"><span class=\"name\">HSpace</span>.<span class=\"name\">e</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace\">HSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">X</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Homotopy/HSpaces.lean#L62-L62","name":"HSpace.hmul","line":62,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace.hmul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace.hmul\"><span class=\"name\">HSpace</span>.<span class=\"name\">hmul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace\">HSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">X</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Homotopy/HSpaces.lean#L61-L61","name":"HSpace.mk","line":61,"kind":"ctor","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace.mk\"><span class=\"name\">HSpace</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hmul : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">X</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hmul_e_e : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hmul</span> <span class=\"fn\">(<span class=\"fn\">e</span>, <span class=\"fn\">e</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">e</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(eHmul : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hmul</span>.comp</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.const\">ContinuousMap.const</a> <span class=\"fn\">X</span> <span class=\"fn\">e</span></span>)</span>.prodMk</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.id\">ContinuousMap.id</a> <span class=\"fn\">X</span></span>)</span></span>)</span></span>)</span>.HomotopyRel</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.id\">ContinuousMap.id</a> <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">{<span class=\"fn\">e</span>}</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hmulE : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">hmul</span>.comp</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.id\">ContinuousMap.id</a> <span class=\"fn\">X</span></span>)</span>.prodMk</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.const\">ContinuousMap.const</a> <span class=\"fn\">X</span> <span class=\"fn\">e</span></span>)</span></span>)</span></span>)</span>.HomotopyRel</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.id\">ContinuousMap.id</a> <span class=\"fn\">X</span></span>)</span> <span class=\"fn\">{<span class=\"fn\">e</span>}</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace\">HSpace</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Homotopy/HSpaces.lean#L61-L68","name":"HSpace","line":61,"kind":"class","docLink":"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace","doc":"A topological space `X` is an H-space if it behaves like a (potentially non-associative)\ntopological group, but where the axioms for a group only hold up to homotopy.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/HSpaces.html#HSpace\"><span class=\"name\">HSpace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"}]}