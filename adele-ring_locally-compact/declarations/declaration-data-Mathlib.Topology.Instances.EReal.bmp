{"name":"Mathlib.Topology.Instances.EReal","instances":[{"typeNames":["EReal"],"name":"EReal.instTopologicalSpaceEReal","className":"TopologicalSpace"},{"typeNames":["EReal"],"name":"EReal.instOrderTopologyERealInstTopologicalSpaceERealToPreorderInstERealPartialOrder","className":"OrderTopology"},{"typeNames":["EReal"],"name":"EReal.instT5SpaceERealInstTopologicalSpaceEReal","className":"T5Space"},{"typeNames":["EReal"],"name":"EReal.instT2SpaceERealInstTopologicalSpaceEReal","className":"T2Space"},{"typeNames":["EReal"],"name":"EReal.instSecondCountableTopologyERealInstTopologicalSpaceEReal","className":"SecondCountableTopology"},{"typeNames":["EReal"],"name":"EReal.instContinuousNegERealInstTopologicalSpaceERealInstNegEReal","className":"ContinuousNeg"}],"imports":["Init","Mathlib.Data.Rat.Encodable","Mathlib.Data.Real.EReal","Mathlib.Topology.Instances.ENNReal","Mathlib.Topology.Order.MonotoneContinuity"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Instances/EReal.lean#L252-L253","name":"EReal.continuous_neg","line":252,"kind":"theorem","docLink":"./Mathlib/Topology/Instances/EReal.html#EReal.continuous_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Instances/EReal.html#EReal.continuous_neg\"><span class=\"name\">EReal</span>.<span class=\"name\">continuous_neg</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/EReal.html#EReal\">EReal</a>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Instances/EReal.lean#L247-L248","name":"EReal.negHomeo","line":247,"kind":"def","docLink":"./Mathlib/Topology/Instances/EReal.html#EReal.negHomeo","doc":"Negation on `EReal` as a homeomorphism "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Instances/EReal.html#EReal.negHomeo\"><span class=\"name\">EReal</span>.<span class=\"name\">negHomeo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/EReal.html#EReal\">EReal</a> <a href=\"./Mathlib/Topology/Homeomorph.html#Homeomorph\">≃ₜ</a> <a href=\"./Mathlib/Data/Real/EReal.html#EReal\">EReal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Instances/EReal.lean#L243-L243","name":"EReal.instContinuousNegERealInstTopologicalSpaceERealInstNegEReal","line":243,"kind":"instance","docLink":"./Mathlib/Topology/Instances/EReal.html#EReal.instContinuousNegERealInstTopologicalSpaceERealInstNegEReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Instances/EReal.html#EReal.instContinuousNegERealInstTopologicalSpaceERealInstNegEReal\"><span class=\"name\">EReal</span>.<span class=\"name\">instContinuousNegERealInstTopologicalSpaceERealInstNegEReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Group/Basic.html#ContinuousNeg\">ContinuousNeg</a> <a href=\"./Mathlib/Data/Real/EReal.html#EReal\">EReal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Instances/EReal.lean#L226-L238","name":"EReal.continuousAt_add","line":226,"kind":"theorem","docLink":"./Mathlib/Topology/Instances/EReal.html#EReal.continuousAt_add","doc":"The addition on `EReal` is continuous except where it doesn't make sense (i.e., at `(⊥, ⊤)`\nand at `(⊤, ⊥)`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Instances/EReal.html#EReal.continuousAt_add\"><span class=\"name\">EReal</span>.<span class=\"name\">continuousAt_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/EReal.html#EReal\">EReal</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/EReal.html#EReal\">EReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.1</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.2</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h' : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.1</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.2</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousAt\">ContinuousAt</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/EReal.html#EReal\">EReal</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/EReal.html#EReal\">EReal</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">p</span>.2</span></span></span>)</span> <span class=\"fn\">p</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Instances/EReal.lean#L217-L221","name":"EReal.continuousAt_add_bot_bot","line":217,"kind":"theorem","docLink":"./Mathlib/Topology/Instances/EReal.html#EReal.continuousAt_add_bot_bot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Instances/EReal.html#EReal.continuousAt_add_bot_bot\"><span class=\"name\">EReal</span>.<span class=\"name\">continuousAt_add_bot_bot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousAt\">ContinuousAt</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/EReal.html#EReal\">EReal</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/EReal.html#EReal\">EReal</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">p</span>.2</span></span></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a>, <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Instances/EReal.lean#L211-L214","name":"EReal.continuousAt_add_coe_bot","line":211,"kind":"theorem","docLink":"./Mathlib/Topology/Instances/EReal.html#EReal.continuousAt_add_coe_bot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Instances/EReal.html#EReal.continuousAt_add_coe_bot\"><span class=\"name\">EReal</span>.<span class=\"name\">continuousAt_add_coe_bot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousAt\">ContinuousAt</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/EReal.html#EReal\">EReal</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/EReal.html#EReal\">EReal</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">p</span>.2</span></span></span>)</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">a</span></span>, <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Instances/EReal.lean#L203-L208","name":"EReal.continuousAt_add_bot_coe","line":203,"kind":"theorem","docLink":"./Mathlib/Topology/Instances/EReal.html#EReal.continuousAt_add_bot_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Instances/EReal.html#EReal.continuousAt_add_bot_coe\"><span class=\"name\">EReal</span>.<span class=\"name\">continuousAt_add_bot_coe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousAt\">ContinuousAt</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/EReal.html#EReal\">EReal</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/EReal.html#EReal\">EReal</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">p</span>.2</span></span></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a>, <span class=\"fn\">↑<span class=\"fn\">a</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Instances/EReal.lean#L196-L200","name":"EReal.continuousAt_add_top_top","line":196,"kind":"theorem","docLink":"./Mathlib/Topology/Instances/EReal.html#EReal.continuousAt_add_top_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Instances/EReal.html#EReal.continuousAt_add_top_top\"><span class=\"name\">EReal</span>.<span class=\"name\">continuousAt_add_top_top</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousAt\">ContinuousAt</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/EReal.html#EReal\">EReal</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/EReal.html#EReal\">EReal</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">p</span>.2</span></span></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>, <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Instances/EReal.lean#L190-L193","name":"EReal.continuousAt_add_coe_top","line":190,"kind":"theorem","docLink":"./Mathlib/Topology/Instances/EReal.html#EReal.continuousAt_add_coe_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Instances/EReal.html#EReal.continuousAt_add_coe_top\"><span class=\"name\">EReal</span>.<span class=\"name\">continuousAt_add_coe_top</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousAt\">ContinuousAt</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/EReal.html#EReal\">EReal</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/EReal.html#EReal\">EReal</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">p</span>.2</span></span></span>)</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">a</span></span>, <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Instances/EReal.lean#L182-L187","name":"EReal.continuousAt_add_top_coe","line":182,"kind":"theorem","docLink":"./Mathlib/Topology/Instances/EReal.html#EReal.continuousAt_add_top_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Instances/EReal.html#EReal.continuousAt_add_top_coe\"><span class=\"name\">EReal</span>.<span class=\"name\">continuousAt_add_top_coe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousAt\">ContinuousAt</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/EReal.html#EReal\">EReal</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/EReal.html#EReal\">EReal</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">p</span>.2</span></span></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>, <span class=\"fn\">↑<span class=\"fn\">a</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Instances/EReal.lean#L176-L179","name":"EReal.continuousAt_add_coe_coe","line":176,"kind":"theorem","docLink":"./Mathlib/Topology/Instances/EReal.html#EReal.continuousAt_add_coe_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Instances/EReal.html#EReal.continuousAt_add_coe_coe\"><span class=\"name\">EReal</span>.<span class=\"name\">continuousAt_add_coe_coe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousAt\">ContinuousAt</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/EReal.html#EReal\">EReal</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/EReal.html#EReal\">EReal</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">p</span>.2</span></span></span>)</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">a</span></span>, <span class=\"fn\">↑<span class=\"fn\">b</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Instances/EReal.lean#L169-L171","name":"EReal.tendsto_nhds_bot_iff_real","line":169,"kind":"theorem","docLink":"./Mathlib/Topology/Instances/EReal.html#EReal.tendsto_nhds_bot_iff_real","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Instances/EReal.html#EReal.tendsto_nhds_bot_iff_real\"><span class=\"name\">EReal</span>.<span class=\"name\">tendsto_nhds_bot_iff_real</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Real/EReal.html#EReal\">EReal</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">m</span> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\">∀ᶠ (a : <span class=\"fn\">α</span>) in <span class=\"fn\">f</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Instances/EReal.lean#L165-L166","name":"EReal.mem_nhds_bot_iff","line":165,"kind":"theorem","docLink":"./Mathlib/Topology/Instances/EReal.html#EReal.mem_nhds_bot_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Instances/EReal.html#EReal.mem_nhds_bot_iff\"><span class=\"name\">EReal</span>.<span class=\"name\">mem_nhds_bot_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <a href=\"./Mathlib/Data/Real/EReal.html#EReal\">EReal</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (y : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">s</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Instances/EReal.lean#L161-L162","name":"EReal.nhds_bot'","line":161,"kind":"theorem","docLink":"./Mathlib/Topology/Instances/EReal.html#EReal.nhds_bot'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Instances/EReal.html#EReal.nhds_bot'\"><span class=\"name\">EReal</span>.<span class=\"name\">nhds_bot'</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨅ (a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.principal\">Filter.principal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Instances/EReal.lean#L156-L159","name":"EReal.nhds_bot_basis","line":156,"kind":"theorem","docLink":"./Mathlib/Topology/Instances/EReal.html#EReal.nhds_bot_basis","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Instances/EReal.html#EReal.nhds_bot_basis\"><span class=\"name\">EReal</span>.<span class=\"name\">nhds_bot_basis</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Bases.html#Filter.HasBasis\">Filter.HasBasis</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span>)</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <a href=\"./Init/Prelude.html#True\">True</a></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Instances/EReal.lean#L152-L153","name":"EReal.nhds_bot","line":152,"kind":"theorem","docLink":"./Mathlib/Topology/Instances/EReal.html#EReal.nhds_bot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Instances/EReal.html#EReal.nhds_bot\"><span class=\"name\">EReal</span>.<span class=\"name\">nhds_bot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨅ (a : <a href=\"./Mathlib/Data/Real/EReal.html#EReal\">EReal</a>), <span class=\"fn\">⨅ (_ : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span>), <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.principal\">Filter.principal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">a</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Instances/EReal.lean#L147-L149","name":"EReal.tendsto_nhds_top_iff_real","line":147,"kind":"theorem","docLink":"./Mathlib/Topology/Instances/EReal.html#EReal.tendsto_nhds_top_iff_real","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Instances/EReal.html#EReal.tendsto_nhds_top_iff_real\"><span class=\"name\">EReal</span>.<span class=\"name\">tendsto_nhds_top_iff_real</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Real/EReal.html#EReal\">EReal</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">m</span> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\">∀ᶠ (a : <span class=\"fn\">α</span>) in <span class=\"fn\">f</span>, <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">a</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Instances/EReal.lean#L143-L144","name":"EReal.mem_nhds_top_iff","line":143,"kind":"theorem","docLink":"./Mathlib/Topology/Instances/EReal.html#EReal.mem_nhds_top_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Instances/EReal.html#EReal.mem_nhds_top_iff\"><span class=\"name\">EReal</span>.<span class=\"name\">mem_nhds_top_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <a href=\"./Mathlib/Data/Real/EReal.html#EReal\">EReal</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (y : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">s</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Instances/EReal.lean#L140-L140","name":"EReal.nhds_top'","line":140,"kind":"theorem","docLink":"./Mathlib/Topology/Instances/EReal.html#EReal.nhds_top'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Instances/EReal.html#EReal.nhds_top'\"><span class=\"name\">EReal</span>.<span class=\"name\">nhds_top'</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨅ (a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.principal\">Filter.principal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Instances/EReal.lean#L135-L138","name":"EReal.nhds_top_basis","line":135,"kind":"theorem","docLink":"./Mathlib/Topology/Instances/EReal.html#EReal.nhds_top_basis","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Instances/EReal.html#EReal.nhds_top_basis\"><span class=\"name\">EReal</span>.<span class=\"name\">nhds_top_basis</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Bases.html#Filter.HasBasis\">Filter.HasBasis</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <a href=\"./Init/Prelude.html#True\">True</a></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Instances/EReal.lean#L131-L132","name":"EReal.nhds_top","line":131,"kind":"theorem","docLink":"./Mathlib/Topology/Instances/EReal.html#EReal.nhds_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Instances/EReal.html#EReal.nhds_top\"><span class=\"name\">EReal</span>.<span class=\"name\">nhds_top</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨅ (a : <a href=\"./Mathlib/Data/Real/EReal.html#EReal\">EReal</a>), <span class=\"fn\">⨅ (_ : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>), <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.principal\">Filter.principal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">a</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Instances/EReal.lean#L124-L126","name":"EReal.continuous_coe_ennreal_iff","line":124,"kind":"theorem","docLink":"./Mathlib/Topology/Instances/EReal.html#EReal.continuous_coe_ennreal_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Instances/EReal.html#EReal.continuous_coe_ennreal_iff\"><span class=\"name\">EReal</span>.<span class=\"name\">continuous_coe_ennreal_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span>)</span></span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Instances/EReal.lean#L120-L121","name":"continuous_coe_ennreal_ereal","line":120,"kind":"theorem","docLink":"./Mathlib/Topology/Instances/EReal.html#continuous_coe_ennreal_ereal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Instances/EReal.html#continuous_coe_ennreal_ereal\"><span class=\"name\">continuous_coe_ennreal_ereal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <a href=\"./Mathlib/Data/Real/EReal.html#ENNReal.toEReal\">ENNReal.toEReal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Instances/EReal.lean#L115-L117","name":"EReal.tendsto_coe_ennreal","line":115,"kind":"theorem","docLink":"./Mathlib/Topology/Instances/EReal.html#EReal.tendsto_coe_ennreal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Instances/EReal.html#EReal.tendsto_coe_ennreal\"><span class=\"name\">EReal</span>.<span class=\"name\">tendsto_coe_ennreal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal\">ENNReal</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">a</span></span>)</span></span></span>)</span> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">m</span> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">a</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Instances/EReal.lean#L111-L112","name":"EReal.closedEmbedding_coe_ennreal","line":111,"kind":"theorem","docLink":"./Mathlib/Topology/Instances/EReal.html#EReal.closedEmbedding_coe_ennreal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Instances/EReal.html#EReal.closedEmbedding_coe_ennreal\"><span class=\"name\">EReal</span>.<span class=\"name\">closedEmbedding_coe_ennreal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#ClosedEmbedding\">ClosedEmbedding</a> <a href=\"./Mathlib/Data/Real/EReal.html#ENNReal.toEReal\">ENNReal.toEReal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Instances/EReal.lean#L106-L108","name":"EReal.embedding_coe_ennreal","line":106,"kind":"theorem","docLink":"./Mathlib/Topology/Instances/EReal.html#EReal.embedding_coe_ennreal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Instances/EReal.html#EReal.embedding_coe_ennreal\"><span class=\"name\">EReal</span>.<span class=\"name\">embedding_coe_ennreal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Embedding\">Embedding</a> <a href=\"./Mathlib/Data/Real/EReal.html#ENNReal.toEReal\">ENNReal.toEReal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Instances/EReal.lean#L98-L101","name":"EReal.neBotTopHomeomorphReal","line":98,"kind":"def","docLink":"./Mathlib/Topology/Instances/EReal.html#EReal.neBotTopHomeomorphReal","doc":"The set of finite `EReal` numbers is homeomorphic to `ℝ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Instances/EReal.html#EReal.neBotTopHomeomorphReal\"><span class=\"name\">EReal</span>.<span class=\"name\">neBotTopHomeomorphReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">{<a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a>, <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>}</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a></span></span> <a href=\"./Mathlib/Topology/Homeomorph.html#Homeomorph\">≃ₜ</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Instances/EReal.lean#L93-L94","name":"EReal.continuousOn_toReal","line":93,"kind":"theorem","docLink":"./Mathlib/Topology/Instances/EReal.html#EReal.continuousOn_toReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Instances/EReal.html#EReal.continuousOn_toReal\"><span class=\"name\">EReal</span>.<span class=\"name\">continuousOn_toReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <a href=\"./Mathlib/Data/Real/EReal.html#EReal.toReal\">EReal.toReal</a> <span class=\"fn\"><span class=\"fn\">{<a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a>, <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a>}</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Instances/EReal.lean#L86-L90","name":"EReal.tendsto_toReal","line":86,"kind":"theorem","docLink":"./Mathlib/Topology/Instances/EReal.html#EReal.tendsto_toReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Instances/EReal.html#EReal.tendsto_toReal\"><span class=\"name\">EReal</span>.<span class=\"name\">tendsto_toReal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/EReal.html#EReal\">EReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h'a : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <a href=\"./Mathlib/Data/Real/EReal.html#EReal.toReal\">EReal.toReal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Real/EReal.html#EReal.toReal\">EReal.toReal</a> <span class=\"fn\">a</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Instances/EReal.lean#L81-L83","name":"EReal.nhds_coe_coe","line":81,"kind":"theorem","docLink":"./Mathlib/Topology/Instances/EReal.html#EReal.nhds_coe_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Instances/EReal.html#EReal.nhds_coe_coe\"><span class=\"name\">EReal</span>.<span class=\"name\">nhds_coe_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">r</span></span>, <span class=\"fn\">↑<span class=\"fn\">p</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.map\">Filter.map</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>) =&gt; <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">p</span>.1</span></span>, <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">p</span>.2</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<span class=\"fn\">r</span>, <span class=\"fn\">p</span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Instances/EReal.lean#L77-L78","name":"EReal.nhds_coe","line":77,"kind":"theorem","docLink":"./Mathlib/Topology/Instances/EReal.html#EReal.nhds_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Instances/EReal.html#EReal.nhds_coe\"><span class=\"name\">EReal</span>.<span class=\"name\">nhds_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.map\">Filter.map</a> <a href=\"./Mathlib/Data/Real/EReal.html#Real.toEReal\">Real.toEReal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">r</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Instances/EReal.lean#L73-L74","name":"EReal.continuous_coe_iff","line":73,"kind":"theorem","docLink":"./Mathlib/Topology/Instances/EReal.html#EReal.continuous_coe_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Instances/EReal.html#EReal.continuous_coe_iff\"><span class=\"name\">EReal</span>.<span class=\"name\">continuous_coe_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span>)</span></span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Instances/EReal.lean#L69-L70","name":"continuous_coe_real_ereal","line":69,"kind":"theorem","docLink":"./Mathlib/Topology/Instances/EReal.html#continuous_coe_real_ereal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Instances/EReal.html#continuous_coe_real_ereal\"><span class=\"name\">continuous_coe_real_ereal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <a href=\"./Mathlib/Data/Real/EReal.html#Real.toEReal\">Real.toEReal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Instances/EReal.lean#L64-L66","name":"EReal.tendsto_coe","line":64,"kind":"theorem","docLink":"./Mathlib/Topology/Instances/EReal.html#EReal.tendsto_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Instances/EReal.html#EReal.tendsto_coe\"><span class=\"name\">EReal</span>.<span class=\"name\">tendsto_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">a</span></span>)</span></span></span>)</span> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">m</span> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">a</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Instances/EReal.lean#L59-L60","name":"EReal.openEmbedding_coe","line":59,"kind":"theorem","docLink":"./Mathlib/Topology/Instances/EReal.html#EReal.openEmbedding_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Instances/EReal.html#EReal.openEmbedding_coe\"><span class=\"name\">EReal</span>.<span class=\"name\">openEmbedding_coe</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#OpenEmbedding\">OpenEmbedding</a> <a href=\"./Mathlib/Data/Real/EReal.html#Real.toEReal\">Real.toEReal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Instances/EReal.lean#L55-L56","name":"EReal.embedding_coe","line":55,"kind":"theorem","docLink":"./Mathlib/Topology/Instances/EReal.html#EReal.embedding_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Instances/EReal.html#EReal.embedding_coe\"><span class=\"name\">EReal</span>.<span class=\"name\">embedding_coe</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Embedding\">Embedding</a> <a href=\"./Mathlib/Data/Real/EReal.html#Real.toEReal\">Real.toEReal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Instances/EReal.lean#L49-L51","name":"EReal.instSecondCountableTopologyERealInstTopologicalSpaceEReal","line":49,"kind":"instance","docLink":"./Mathlib/Topology/Instances/EReal.html#EReal.instSecondCountableTopologyERealInstTopologicalSpaceEReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Instances/EReal.html#EReal.instSecondCountableTopologyERealInstTopologicalSpaceEReal\"><span class=\"name\">EReal</span>.<span class=\"name\">instSecondCountableTopologyERealInstTopologicalSpaceEReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Bases.html#SecondCountableTopology\">SecondCountableTopology</a> <a href=\"./Mathlib/Data/Real/EReal.html#EReal\">EReal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Instances/EReal.lean#L46-L47","name":"EReal.denseRange_ratCast","line":46,"kind":"theorem","docLink":"./Mathlib/Topology/Instances/EReal.html#EReal.denseRange_ratCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Instances/EReal.html#EReal.denseRange_ratCast\"><span class=\"name\">EReal</span>.<span class=\"name\">denseRange_ratCast</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#DenseRange\">DenseRange</a> <span class=\"fn\">fun (<span class=\"fn\">r</span> : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">r</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Instances/EReal.lean#L44-L44","name":"EReal.instT2SpaceERealInstTopologicalSpaceEReal","line":44,"kind":"instance","docLink":"./Mathlib/Topology/Instances/EReal.html#EReal.instT2SpaceERealInstTopologicalSpaceEReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Instances/EReal.html#EReal.instT2SpaceERealInstTopologicalSpaceEReal\"><span class=\"name\">EReal</span>.<span class=\"name\">instT2SpaceERealInstTopologicalSpaceEReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Separation.html#T2Space\">T2Space</a> <a href=\"./Mathlib/Data/Real/EReal.html#EReal\">EReal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Instances/EReal.lean#L43-L43","name":"EReal.instT5SpaceERealInstTopologicalSpaceEReal","line":43,"kind":"instance","docLink":"./Mathlib/Topology/Instances/EReal.html#EReal.instT5SpaceERealInstTopologicalSpaceEReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Instances/EReal.html#EReal.instT5SpaceERealInstTopologicalSpaceEReal\"><span class=\"name\">EReal</span>.<span class=\"name\">instT5SpaceERealInstTopologicalSpaceEReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Separation.html#T5Space\">T5Space</a> <a href=\"./Mathlib/Data/Real/EReal.html#EReal\">EReal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Instances/EReal.lean#L42-L42","name":"EReal.instOrderTopologyERealInstTopologicalSpaceERealToPreorderInstERealPartialOrder","line":42,"kind":"instance","docLink":"./Mathlib/Topology/Instances/EReal.html#EReal.instOrderTopologyERealInstTopologicalSpaceERealToPreorderInstERealPartialOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Instances/EReal.html#EReal.instOrderTopologyERealInstTopologicalSpaceERealToPreorderInstERealPartialOrder\"><span class=\"name\">EReal</span>.<span class=\"name\">instOrderTopologyERealInstTopologicalSpaceERealToPreorderInstERealPartialOrder</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Order/Basic.html#OrderTopology\">OrderTopology</a> <a href=\"./Mathlib/Data/Real/EReal.html#EReal\">EReal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Instances/EReal.lean#L41-L41","name":"EReal.instTopologicalSpaceEReal","line":41,"kind":"instance","docLink":"./Mathlib/Topology/Instances/EReal.html#EReal.instTopologicalSpaceEReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Instances/EReal.html#EReal.instTopologicalSpaceEReal\"><span class=\"name\">EReal</span>.<span class=\"name\">instTopologicalSpaceEReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <a href=\"./Mathlib/Data/Real/EReal.html#EReal\">EReal</a></span></div></div>"}]}