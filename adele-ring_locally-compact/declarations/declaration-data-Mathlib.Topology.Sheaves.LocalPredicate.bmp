{"name":"Mathlib.Topology.Sheaves.LocalPredicate","instances":[{"typeNames":["TopCat.PrelocalPredicate"],"name":"TopCat.inhabitedPrelocalPredicate","className":"Inhabited"},{"typeNames":["TopCat.LocalPredicate"],"name":"TopCat.inhabitedLocalPredicate","className":"Inhabited"}],"imports":["Init","Mathlib.Topology.Sheaves.SheafOfFunctions","Mathlib.Topology.Sheaves.Stalks","Mathlib.Topology.Sheaves.SheafCondition.UniqueGluing"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/LocalPredicate.lean#L281-L284","name":"TopCat.sheafToTop","line":281,"kind":"def","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.sheafToTop","doc":"The sheaf of continuous functions on `X` with values in a space `T`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.sheafToTop\"><span class=\"name\">TopCat</span>.<span class=\"name\">sheafToTop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(T : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/Sheaf.html#TopCat.Sheaf\">TopCat.Sheaf</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> v)</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/LocalPredicate.lean#L273-L277","name":"TopCat.subpresheafContinuousPrelocalIsoPresheafToTop","line":273,"kind":"def","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subpresheafContinuousPrelocalIsoPresheafToTop","doc":"Some repackaging:\nthe presheaf of functions satisfying `continuousPrelocal` is just the same thing as\nthe presheaf of continuous functions.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subpresheafContinuousPrelocalIsoPresheafToTop\"><span class=\"name\">TopCat</span>.<span class=\"name\">subpresheafContinuousPrelocalIsoPresheafToTop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(T : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subpresheafToTypes\">TopCat.subpresheafToTypes</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.continuousPrelocal</span> <span class=\"fn\">T</span></span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheafToTop</span> <span class=\"fn\">T</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/LocalPredicate.lean#L240-L267","name":"TopCat.stalkToFiber_injective","line":240,"kind":"theorem","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.stalkToFiber_injective","doc":"The `stalkToFiber` map is injective at `x` if any two allowed sections which agree at `x`\nagree on some neighborhood of `x`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.stalkToFiber_injective\"><span class=\"name\">TopCat</span>.<span class=\"name\">stalkToFiber_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.LocalPredicate\">TopCat.LocalPredicate</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↑<span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">∀ (<span class=\"fn\">U </span><span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/OpenNhds.html#TopologicalSpace.OpenNhds\">TopologicalSpace.OpenNhds</a> <span class=\"fn\">x</span></span>) (<span class=\"fn\">fU</span> : <span class=\"fn\">(<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">U</span>.obj</span></span>) → <span class=\"fn\"><span class=\"fn\">T</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.pred</span> <span class=\"fn\">fU</span></span> →\n    <span class=\"fn\">∀ (<span class=\"fn\">fV</span> : <span class=\"fn\">(<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">V</span>.obj</span></span>) → <span class=\"fn\"><span class=\"fn\">T</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span></span>),\n      <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.pred</span> <span class=\"fn\">fV</span></span> →\n        <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">fU</span> <span class=\"fn\">⟨<span class=\"fn\">x</span>, <span class=\"fn\">⋯</span>⟩</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">fV</span> <span class=\"fn\">⟨<span class=\"fn\">x</span>, <span class=\"fn\">⋯</span>⟩</span></span></span> →\n          <span class=\"fn\">∃ (<span class=\"fn\">W</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/OpenNhds.html#TopologicalSpace.OpenNhds\">TopologicalSpace.OpenNhds</a> <span class=\"fn\">x</span></span>) (<span class=\"fn\">iU</span> : <span class=\"fn\"><span class=\"fn\">W</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">U</span></span>) (<span class=\"fn\">iV</span> : <span class=\"fn\"><span class=\"fn\">W</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">V</span></span>),\n            <span class=\"fn\">∀ (<span class=\"fn\">w</span> : <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">W</span>.obj</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">fU</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x_4</span> : <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">W</span>.obj</span></span>) =&gt; <span class=\"fn\">⟨<span class=\"fn\">↑<span class=\"fn\">x_4</span></span>, <span class=\"fn\">⋯</span>⟩</span></span>)</span> <span class=\"fn\">w</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">fV</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x_4</span> : <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">W</span>.obj</span></span>) =&gt; <span class=\"fn\">⟨<span class=\"fn\">↑<span class=\"fn\">x_4</span></span>, <span class=\"fn\">⋯</span>⟩</span></span>)</span> <span class=\"fn\">w</span></span>)</span></span></span></span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.stalkToFiber\">TopCat.stalkToFiber</a> <span class=\"fn\">P</span> <span class=\"fn\">x</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/LocalPredicate.lean#L229-L235","name":"TopCat.stalkToFiber_surjective","line":229,"kind":"theorem","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.stalkToFiber_surjective","doc":"The `stalkToFiber` map is surjective at `x` if\nevery point in the fiber `T x` has an allowed section passing through it.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.stalkToFiber_surjective\"><span class=\"name\">TopCat</span>.<span class=\"name\">stalkToFiber_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.LocalPredicate\">TopCat.LocalPredicate</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↑<span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\">∀ (<span class=\"fn\">t</span> : <span class=\"fn\"><span class=\"fn\">T</span> <span class=\"fn\">x</span></span>), <span class=\"fn\">∃ (<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Category/TopCat/OpenNhds.html#TopologicalSpace.OpenNhds\">TopologicalSpace.OpenNhds</a> <span class=\"fn\">x</span></span>) (<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">y</span> : <span class=\"fn\">↥<span class=\"fn\"><span class=\"fn\">U</span>.obj</span></span>) → <span class=\"fn\"><span class=\"fn\">T</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span></span>) (_ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.pred</span> <span class=\"fn\">f</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">⟨<span class=\"fn\">x</span>, <span class=\"fn\">⋯</span>⟩</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">t</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.stalkToFiber\">TopCat.stalkToFiber</a> <span class=\"fn\">P</span> <span class=\"fn\">x</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/LocalPredicate.lean#L220-L224","name":"TopCat.stalkToFiber_germ","line":220,"kind":"theorem","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.stalkToFiber_germ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.stalkToFiber_germ\"><span class=\"name\">TopCat</span>.<span class=\"name\">stalkToFiber_germ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.LocalPredicate\">TopCat.LocalPredicate</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subsheafToTypes\">TopCat.subsheafToTypes</a> <span class=\"fn\">P</span></span>)</span>.presheaf</span>.obj</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.op\">Opposite.op</a> <span class=\"fn\">U</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.stalkToFiber\">TopCat.stalkToFiber</a> <span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subsheafToTypes\">TopCat.subsheafToTypes</a> <span class=\"fn\">P</span></span>)</span>.presheaf</span>.germ</span> <span class=\"fn\">x</span> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">f</span></span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/LocalPredicate.lean#L208-L216","name":"TopCat.stalkToFiber","line":208,"kind":"def","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.stalkToFiber","doc":"There is a canonical map from the stalk to the original fiber, given by evaluating sections.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.stalkToFiber\"><span class=\"name\">TopCat</span>.<span class=\"name\">stalkToFiber</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.LocalPredicate\">TopCat.LocalPredicate</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↑<span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subsheafToTypes\">TopCat.subsheafToTypes</a> <span class=\"fn\">P</span></span>)</span>.presheaf</span>.stalk</span> <span class=\"fn\">x</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">T</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/LocalPredicate.lean#L203-L204","name":"TopCat.subsheafToTypes","line":203,"kind":"def","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subsheafToTypes","doc":"The subsheaf of the sheaf of all dependently typed functions satisfying the local predicate `P`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subsheafToTypes\"><span class=\"name\">TopCat</span>.<span class=\"name\">subsheafToTypes</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.LocalPredicate\">TopCat.LocalPredicate</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/Sheaf.html#TopCat.Sheaf\">TopCat.Sheaf</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> v)</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/LocalPredicate.lean#L202-L202","name":"TopCat.subsheafToTypes_val","line":202,"kind":"theorem","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subsheafToTypes_val","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subsheafToTypes_val\"><span class=\"name\">TopCat</span>.<span class=\"name\">subsheafToTypes_val</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.LocalPredicate\">TopCat.LocalPredicate</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subsheafToTypes\">TopCat.subsheafToTypes</a> <span class=\"fn\">P</span></span>)</span>.val</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subpresheafToTypes\">TopCat.subpresheafToTypes</a> <span class=\"fn\"><span class=\"fn\">P</span>.toPrelocalPredicate</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/LocalPredicate.lean#L166-L196","name":"TopCat.subpresheafToTypes.isSheaf","line":166,"kind":"theorem","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subpresheafToTypes.isSheaf","doc":"The functions satisfying a local predicate satisfy the sheaf condition.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subpresheafToTypes.isSheaf\"><span class=\"name\">TopCat</span>.<span class=\"name\">subpresheafToTypes</span>.<span class=\"name\">isSheaf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.LocalPredicate\">TopCat.LocalPredicate</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subpresheafToTypes\">TopCat.subpresheafToTypes</a> <span class=\"fn\"><span class=\"fn\">P</span>.toPrelocalPredicate</span></span>)</span>.IsSheaf</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/LocalPredicate.lean#L160-L160","name":"TopCat.subpresheafToTypes.subtype","line":160,"kind":"def","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subpresheafToTypes.subtype","doc":"The natural transformation including the subpresheaf of functions satisfying a local predicate\ninto the presheaf of all functions.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subpresheafToTypes.subtype\"><span class=\"name\">TopCat</span>.<span class=\"name\">subpresheafToTypes</span>.<span class=\"name\">subtype</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate\">TopCat.PrelocalPredicate</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subpresheafToTypes\">TopCat.subpresheafToTypes</a> <span class=\"fn\">P</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.presheafToTypes</span> <span class=\"fn\">T</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/LocalPredicate.lean#L149-L151","name":"TopCat.subpresheafToTypes","line":149,"kind":"def","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subpresheafToTypes","doc":"The subpresheaf of dependent functions on `X` satisfying the \"pre-local\" predicate `P`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subpresheafToTypes\"><span class=\"name\">TopCat</span>.<span class=\"name\">subpresheafToTypes</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate\">TopCat.PrelocalPredicate</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/Presheaf.html#TopCat.Presheaf\">TopCat.Presheaf</a> <a href=\"./foundational_types.html\">(<a href=\"./foundational_types.html\">Type</a> v)</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/LocalPredicate.lean#L148-L148","name":"TopCat.subpresheafToTypes_obj","line":148,"kind":"theorem","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subpresheafToTypes_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subpresheafToTypes_obj\"><span class=\"name\">TopCat</span>.<span class=\"name\">subpresheafToTypes_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate\">TopCat.PrelocalPredicate</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>)</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subpresheafToTypes\">TopCat.subpresheafToTypes</a> <span class=\"fn\">P</span></span>)</span>.obj</span> <span class=\"fn\">U</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\">U</span></span>)</span></span>) → <span class=\"fn\"><span class=\"fn\">T</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span> // <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.pred</span> <span class=\"fn\">f</span></span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/LocalPredicate.lean#L148-L148","name":"TopCat.subpresheafToTypes_map_coe","line":148,"kind":"theorem","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subpresheafToTypes_map_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subpresheafToTypes_map_coe\"><span class=\"name\">TopCat</span>.<span class=\"name\">subpresheafToTypes_map_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate\">TopCat.PrelocalPredicate</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>)</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>)</span><a href=\"./Mathlib/Data/Opposite.html#Opposite\">ᵒᵖ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\">{ <span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\">U</span></span>)</span></span>) → <span class=\"fn\"><span class=\"fn\">T</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span> // <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.pred</span> <span class=\"fn\">f</span></span> }</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Opposite.html#Opposite.unop\">Opposite.unop</a> <span class=\"fn\">V</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.subpresheafToTypes\">TopCat.subpresheafToTypes</a> <span class=\"fn\">P</span></span>)</span>.map</span> <span class=\"fn\">i</span> <span class=\"fn\">f</span></span>)</span></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">f</span></span> <span class=\"fn\">⟨<span class=\"fn\">↑<span class=\"fn\">x</span></span>, <span class=\"fn\">⋯</span>⟩</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/LocalPredicate.lean#L142-L144","name":"TopCat.PrelocalPredicate.sheafifyOf","line":142,"kind":"theorem","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate.sheafifyOf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate.sheafifyOf\"><span class=\"name\">TopCat</span>.<span class=\"name\">PrelocalPredicate</span>.<span class=\"name\">sheafifyOf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate\">TopCat.PrelocalPredicate</a> <span class=\"fn\">T</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">U</span></span>) → <span class=\"fn\"><span class=\"fn\">T</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.pred</span> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span>.sheafify</span>.pred</span> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/LocalPredicate.lean#L128-L140","name":"TopCat.PrelocalPredicate.sheafify","line":128,"kind":"def","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate.sheafify","doc":"Given a `P : PrelocalPredicate`, we can always construct a `LocalPredicate`\nby asking that the condition from `P` holds locally near every point.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate.sheafify\"><span class=\"name\">TopCat</span>.<span class=\"name\">PrelocalPredicate</span>.<span class=\"name\">sheafify</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate\">TopCat.PrelocalPredicate</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.LocalPredicate\">TopCat.LocalPredicate</a> <span class=\"fn\">T</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/LocalPredicate.lean#L120-L121","name":"TopCat.inhabitedLocalPredicate","line":120,"kind":"instance","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.inhabitedLocalPredicate","doc":"Satisfying the inhabited linter. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.inhabitedLocalPredicate\"><span class=\"name\">TopCat</span>.<span class=\"name\">inhabitedLocalPredicate</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(T : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.LocalPredicate\">TopCat.LocalPredicate</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\">X</span></span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">T</span></span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/LocalPredicate.lean#L107-L117","name":"TopCat.continuousLocal","line":107,"kind":"def","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.continuousLocal","doc":"Continuity is a \"local\" predicate on functions to a fixed topological space `T`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.continuousLocal\"><span class=\"name\">TopCat</span>.<span class=\"name\">continuousLocal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(T : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.LocalPredicate\">TopCat.LocalPredicate</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\">X</span></span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">T</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/LocalPredicate.lean#L98-L98","name":"TopCat.LocalPredicate.locality","line":98,"kind":"theorem","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.LocalPredicate.locality","doc":"A local predicate must be local --- provided that it is locally satisfied, it is also globally\nsatisfied "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.LocalPredicate.locality\"><span class=\"name\">TopCat</span>.<span class=\"name\">LocalPredicate</span>.<span class=\"name\">locality</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.LocalPredicate\">TopCat.LocalPredicate</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">U</span></span>) → <span class=\"fn\"><span class=\"fn\">T</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">U</span></span>),\n    <span class=\"fn\">∃ (<span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>) (_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">V</span></span>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">U</span></span>),\n      <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.pred</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">V</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">V</span></span>) =&gt; <span class=\"fn\">⟨<span class=\"fn\">↑<span class=\"fn\">x</span></span>, <span class=\"fn\">⋯</span>⟩</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span></span></span></span></span>)</span> →\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.pred</span> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/LocalPredicate.lean#L95-L95","name":"TopCat.LocalPredicate.mk","line":95,"kind":"ctor","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.LocalPredicate.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.LocalPredicate.mk\"><span class=\"name\">TopCat</span>.<span class=\"name\">LocalPredicate</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(toPrelocalPredicate : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate\">TopCat.PrelocalPredicate</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(locality : <span class=\"fn\">∀ {<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>} (<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">U</span></span>) → <span class=\"fn\"><span class=\"fn\">T</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span>),\n  <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">U</span></span>),\n      <span class=\"fn\">∃ (<span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>) (_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">V</span></span>) (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">U</span></span>),\n        <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">toPrelocalPredicate</span>.pred</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">V</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">V</span></span>) =&gt; <span class=\"fn\">⟨<span class=\"fn\">↑<span class=\"fn\">x</span></span>, <span class=\"fn\">⋯</span>⟩</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span></span></span></span></span>)</span> →\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">toPrelocalPredicate</span>.pred</span> <span class=\"fn\">f</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.LocalPredicate\">TopCat.LocalPredicate</a> <span class=\"fn\">T</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/LocalPredicate.lean#L95-L101","name":"TopCat.LocalPredicate","line":95,"kind":"structure","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.LocalPredicate","doc":"Given a topological space `X : TopCat` and a type family `T : X → Type`,\na `P : LocalPredicate T` consists of:\n* a family of predicates `P.pred`, one for each `U : Opens X`, of the form `(Π x : U, T x) → Prop`\n* a proof that if `f : Π x : V, T x` satisfies the predicate on `V : Opens X`, then\n  the restriction of `f` to any open subset `U` also satisfies the predicate, and\n* a proof that given some `f : Π x : U, T x`,\n  if for every `x : U` we can find an open set `x ∈ V ≤ U`\n  so that the restriction of `f` to `V` satisfies the predicate,\n  then `f` itself satisfies the predicate.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.LocalPredicate\"><span class=\"name\">TopCat</span>.<span class=\"name\">LocalPredicate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(T : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> → <a href=\"./foundational_types.html\">Type</a> v</span>)</span></span>\n<span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate\"><span class=\"name\">TopCat</span>.<span class=\"name\">PrelocalPredicate</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> v</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/LocalPredicate.lean#L79-L81","name":"TopCat.inhabitedPrelocalPredicate","line":79,"kind":"instance","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.inhabitedPrelocalPredicate","doc":"Satisfying the inhabited linter. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.inhabitedPrelocalPredicate\"><span class=\"name\">TopCat</span>.<span class=\"name\">inhabitedPrelocalPredicate</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(T : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate\">TopCat.PrelocalPredicate</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\">X</span></span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">T</span></span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/LocalPredicate.lean#L74-L76","name":"TopCat.continuousPrelocal","line":74,"kind":"def","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.continuousPrelocal","doc":"Continuity is a \"prelocal\" predicate on functions to a fixed topological space `T`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.continuousPrelocal\"><span class=\"name\">TopCat</span>.<span class=\"name\">continuousPrelocal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(T : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate\">TopCat.PrelocalPredicate</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\">X</span></span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">T</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/LocalPredicate.lean#L73-L73","name":"TopCat.continuousPrelocal_pred","line":73,"kind":"theorem","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.continuousPrelocal_pred","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.continuousPrelocal_pred\"><span class=\"name\">TopCat</span>.<span class=\"name\">continuousPrelocal_pred</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(T : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>} (<span class=\"fn\">f</span> : <span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">x</span></span> → <span class=\"fn\">↑<span class=\"fn\">T</span></span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span>.continuousPrelocal</span> <span class=\"fn\">T</span></span>)</span>.pred</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/LocalPredicate.lean#L67-L67","name":"TopCat.PrelocalPredicate.res","line":67,"kind":"theorem","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate.res","doc":"The underlying predicate should be invariant under restriction "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate.res\"><span class=\"name\">TopCat</span>.<span class=\"name\">PrelocalPredicate</span>.<span class=\"name\">res</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate\">TopCat.PrelocalPredicate</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">V</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">V</span></span>) → <span class=\"fn\"><span class=\"fn\">T</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.pred</span> <span class=\"fn\">f</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.pred</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">U</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">U</span></span>) =&gt; <span class=\"fn\">⟨<span class=\"fn\">↑<span class=\"fn\">x</span></span>, <span class=\"fn\">⋯</span>⟩</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/LocalPredicate.lean#L65-L65","name":"TopCat.PrelocalPredicate.pred","line":65,"kind":"def","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate.pred","doc":"The underlying predicate of a prelocal predicate "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate.pred\"><span class=\"name\">TopCat</span>.<span class=\"name\">PrelocalPredicate</span>.<span class=\"name\">pred</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate\">TopCat.PrelocalPredicate</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">U</span></span>) → <span class=\"fn\"><span class=\"fn\">T</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/LocalPredicate.lean#L63-L63","name":"TopCat.PrelocalPredicate.mk","line":63,"kind":"ctor","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate.mk\"><span class=\"name\">TopCat</span>.<span class=\"name\">PrelocalPredicate</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(pred : <span class=\"fn\">{<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>} → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">U</span></span>) → <span class=\"fn\"><span class=\"fn\">T</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span>)</span> → <a href=\"./foundational_types.html\">Prop</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(res : <span class=\"fn\">∀ {<span class=\"fn\">U </span><span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>} (<span class=\"fn\">i</span> : <span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">V</span></span>) (<span class=\"fn\">f</span> : <span class=\"fn\">(<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">V</span></span>) → <span class=\"fn\"><span class=\"fn\">T</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">pred</span> <span class=\"fn\">f</span></span> → <span class=\"fn\"><span class=\"fn\">pred</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">U</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">↥<span class=\"fn\">U</span></span>) =&gt; <span class=\"fn\">⟨<span class=\"fn\">↑<span class=\"fn\">x</span></span>, <span class=\"fn\">⋯</span>⟩</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate\">TopCat.PrelocalPredicate</a> <span class=\"fn\">T</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/LocalPredicate.lean#L63-L67","name":"TopCat.PrelocalPredicate","line":63,"kind":"structure","docLink":"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate","doc":"Given a topological space `X : TopCat` and a type family `T : X → Type`,\na `P : PrelocalPredicate T` consists of:\n* a family of predicates `P.pred`, one for each `U : Opens X`, of the form `(Π x : U, T x) → Prop`\n* a proof that if `f : Π x : V, T x` satisfies the predicate on `V : Opens X`, then\n  the restriction of `f` to any open subset `U` also satisfies the predicate.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/LocalPredicate.html#TopCat.PrelocalPredicate\"><span class=\"name\">TopCat</span>.<span class=\"name\">PrelocalPredicate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(T : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> → <a href=\"./foundational_types.html\">Type</a> v</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> v</div></div>"}]}