{"name":"Mathlib.Topology.Sheaves.SheafCondition.OpensLeCover","instances":[{"typeNames":["TopCat.Presheaf.SheafCondition.OpensLeCover"],"name":"TopCat.Presheaf.SheafCondition.instCategoryOpensLeCover","className":"CategoryTheory.Category"},{"typeNames":["TopCat.Presheaf.SheafCondition.OpensLeCover"],"name":"TopCat.Presheaf.SheafCondition.instInhabitedOpensLeCoverOfNonempty","className":"Inhabited"}],"imports":["Init","Mathlib.Topology.Sheaves.SheafCondition.Sites"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.lean#L216-L227","name":"TopCat.Presheaf.isSheaf_iff_isSheafOpensLeCover","line":216,"kind":"theorem","docLink":"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.isSheaf_iff_isSheafOpensLeCover","doc":"A presheaf `(opens X)ᵒᵖ ⥤ C` on a topological space `X` is a sheaf on the site `opens X` iff\nit satisfies the `IsSheafOpensLeCover` sheaf condition. The latter is not the\nofficial definition of sheaves on spaces, but has the advantage that it does not\nrequire `has_products C`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.isSheaf_iff_isSheafOpensLeCover\"><span class=\"name\">TopCat</span>.<span class=\"name\">Presheaf</span>.<span class=\"name\">isSheaf_iff_isSheafOpensLeCover</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/Presheaf.html#TopCat.Presheaf\">TopCat.Presheaf</a> <span class=\"fn\">C</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.IsSheaf</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">F</span>.IsSheafOpensLeCover</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.lean#L204-L210","name":"TopCat.Presheaf.isLimitOpensLeEquivGenerate₂","line":204,"kind":"def","docLink":"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.isLimitOpensLeEquivGenerate₂","doc":"Given a presheaf `F` on the topological space `X` and a presieve `R` whose generated sieve\nis covering for the associated Grothendieck topology (equivalently, the presieve is covering\nfor the associated pretopology), the natural cone associated to `F` and the family of opens\nassociated to `R` is a limit cone iff the natural cone associated to `F` and the generated\nsieve is a limit cone.\nSince only the existence of a 1-1 correspondence will be used, the exact definition does\nnot matter, so tactics are used liberally. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.isLimitOpensLeEquivGenerate₂\"><span class=\"name\">TopCat</span>.<span class=\"name\">Presheaf</span>.<span class=\"name\">isLimitOpensLeEquivGenerate₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/Presheaf.html#TopCat.Presheaf\">TopCat.Presheaf</a> <span class=\"fn\">C</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(R : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Presieve\">CategoryTheory.Presieve</a> <span class=\"fn\">Y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hR : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve.generate\">CategoryTheory.Sieve.generate</a> <span class=\"fn\">R</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Spaces.html#Opens.grothendieckTopology\">Opens.grothendieckTopology</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>)</span>.sieves</span> <span class=\"fn\">Y</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">CategoryTheory.Limits.IsLimit</a>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Functor.mapCone\">CategoryTheory.Functor.mapCone</a> <span class=\"fn\">F</span>\n      <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.SheafCondition.opensLeCoverCocone\">TopCat.Presheaf.SheafCondition.opensLeCoverCocone</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/SheafCondition/Sites.html#TopCat.Presheaf.coveringOfPresieve\">TopCat.Presheaf.coveringOfPresieve</a> <span class=\"fn\">Y</span> <span class=\"fn\">R</span></span>)</span></span>)</span>.op</span></span>)</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">CategoryTheory.Limits.IsLimit</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Functor.mapCone\">CategoryTheory.Functor.mapCone</a> <span class=\"fn\">F</span> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve.generate\">CategoryTheory.Sieve.generate</a> <span class=\"fn\">R</span></span>)</span>.arrows</span>.cocone</span>.op</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.lean#L191-L195","name":"TopCat.Presheaf.isLimitOpensLeEquivGenerate₁","line":191,"kind":"def","docLink":"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.isLimitOpensLeEquivGenerate₁","doc":"Given a presheaf `F` on the topological space `X` and a family of opens `U` of `X`,\nthe natural cone associated to `F` and `U` used in the definition of\n`F.IsSheafOpensLeCover` is a limit cone iff the natural cone associated to `F`\nand the sieve generated by the presieve associated to `U` is a limit cone. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.isLimitOpensLeEquivGenerate₁\"><span class=\"name\">TopCat</span>.<span class=\"name\">Presheaf</span>.<span class=\"name\">isLimitOpensLeEquivGenerate₁</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/Presheaf.html#TopCat.Presheaf\">TopCat.Presheaf</a> <span class=\"fn\">C</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hY : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#iSup\">iSup</a> <span class=\"fn\">U</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">CategoryTheory.Limits.IsLimit</a>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Functor.mapCone\">CategoryTheory.Functor.mapCone</a> <span class=\"fn\">F</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.SheafCondition.opensLeCoverCocone\">TopCat.Presheaf.SheafCondition.opensLeCoverCocone</a> <span class=\"fn\">U</span></span>)</span>.op</span></span>)</span></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/IsLimit.html#CategoryTheory.Limits.IsLimit\">CategoryTheory.Limits.IsLimit</a>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Functor.mapCone\">CategoryTheory.Functor.mapCone</a> <span class=\"fn\">F</span>\n      <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve.generate\">CategoryTheory.Sieve.generate</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/SheafCondition/Sites.html#TopCat.Presheaf.presieveOfCoveringAux\">TopCat.Presheaf.presieveOfCoveringAux</a> <span class=\"fn\">U</span> <span class=\"fn\">Y</span></span>)</span></span>)</span>.arrows</span>.cocone</span>.op</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.lean#L165-L185","name":"TopCat.Presheaf.whiskerIsoMapGenerateCocone","line":165,"kind":"def","docLink":"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.whiskerIsoMapGenerateCocone","doc":"Given a family of opens `opensLeCoverCocone U` is essentially the natural cocone\nassociated to the sieve generated by the presieve associated to `U` with indexing\ncategory changed using the above equivalence. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.whiskerIsoMapGenerateCocone\"><span class=\"name\">TopCat</span>.<span class=\"name\">Presheaf</span>.<span class=\"name\">whiskerIsoMapGenerateCocone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/Presheaf.html#TopCat.Presheaf\">TopCat.Presheaf</a> <span class=\"fn\">C</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hY : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#iSup\">iSup</a> <span class=\"fn\">U</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cone.whisker\">CategoryTheory.Limits.Cone.whisker</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.generateEquivalenceOpensLe\">TopCat.Presheaf.generateEquivalenceOpensLe</a> <span class=\"fn\">U</span> <span class=\"fn\">hY</span></span>)</span>.op</span>.functor</span>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Functor.mapCone\">CategoryTheory.Functor.mapCone</a> <span class=\"fn\">F</span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.SheafCondition.opensLeCoverCocone\">TopCat.Presheaf.SheafCondition.opensLeCoverCocone</a> <span class=\"fn\">U</span></span>)</span>.op</span></span>)</span></span> <a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso\">≅</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Functor.mapCone\">CategoryTheory.Functor.mapCone</a> <span class=\"fn\">F</span>\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve.generate\">CategoryTheory.Sieve.generate</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/SheafCondition/Sites.html#TopCat.Presheaf.presieveOfCoveringAux\">TopCat.Presheaf.presieveOfCoveringAux</a> <span class=\"fn\">U</span> <span class=\"fn\">Y</span></span>)</span></span>)</span>.arrows</span>.cocone</span>.op</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.lean#L164-L164","name":"TopCat.Presheaf.whiskerIsoMapGenerateCocone_hom_hom","line":164,"kind":"theorem","docLink":"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.whiskerIsoMapGenerateCocone_hom_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.whiskerIsoMapGenerateCocone_hom_hom\"><span class=\"name\">TopCat</span>.<span class=\"name\">Presheaf</span>.<span class=\"name\">whiskerIsoMapGenerateCocone_hom_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/Presheaf.html#TopCat.Presheaf\">TopCat.Presheaf</a> <span class=\"fn\">C</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hY : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#iSup\">iSup</a> <span class=\"fn\">U</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.whiskerIsoMapGenerateCocone</span> <span class=\"fn\">U</span> <span class=\"fn\">hY</span></span>)</span>.hom</span>.hom</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.map</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">⋯</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.lean#L164-L164","name":"TopCat.Presheaf.whiskerIsoMapGenerateCocone_inv_hom","line":164,"kind":"theorem","docLink":"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.whiskerIsoMapGenerateCocone_inv_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.whiskerIsoMapGenerateCocone_inv_hom\"><span class=\"name\">TopCat</span>.<span class=\"name\">Presheaf</span>.<span class=\"name\">whiskerIsoMapGenerateCocone_inv_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/Presheaf.html#TopCat.Presheaf\">TopCat.Presheaf</a> <span class=\"fn\">C</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hY : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#iSup\">iSup</a> <span class=\"fn\">U</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.whiskerIsoMapGenerateCocone</span> <span class=\"fn\">U</span> <span class=\"fn\">hY</span></span>)</span>.inv</span>.hom</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.map</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToHom\">CategoryTheory.eqToHom</a> <span class=\"fn\">⋯</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.lean#L149-L159","name":"TopCat.Presheaf.generateEquivalenceOpensLe","line":149,"kind":"def","docLink":"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.generateEquivalenceOpensLe","doc":"Given a family of opens `U` and an open `Y` equal to the union of opens in `U`, we may\ntake the presieve on `Y` associated to `U` and the sieve generated by it, and form the\nfull subcategory (subposet) of opens contained in `Y` (`over Y`) consisting of arrows\nin the sieve. This full subcategory is equivalent to `OpensLeCover U`, the (poset)\ncategory of opens contained in some `U i`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.generateEquivalenceOpensLe\"><span class=\"name\">TopCat</span>.<span class=\"name\">Presheaf</span>.<span class=\"name\">generateEquivalenceOpensLe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hY : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#iSup\">iSup</a> <span class=\"fn\">U</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FullSubcategory.html#CategoryTheory.FullSubcategory\">CategoryTheory.FullSubcategory</a> <span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Over.html#CategoryTheory.Over\">CategoryTheory.Over</a> <span class=\"fn\">Y</span></span>) =&gt;\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve.generate\">CategoryTheory.Sieve.generate</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/SheafCondition/Sites.html#TopCat.Presheaf.presieveOfCoveringAux\">TopCat.Presheaf.presieveOfCoveringAux</a> <span class=\"fn\">U</span> <span class=\"fn\">Y</span></span>)</span></span>)</span>.arrows</span> <span class=\"fn\"><span class=\"fn\">f</span>.hom</span></span></span></span>)</span> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a>   <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.SheafCondition.OpensLeCover\">TopCat.Presheaf.SheafCondition.OpensLeCover</a> <span class=\"fn\">U</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.lean#L148-L148","name":"TopCat.Presheaf.generateEquivalenceOpensLe_functor","line":148,"kind":"theorem","docLink":"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.generateEquivalenceOpensLe_functor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.generateEquivalenceOpensLe_functor\"><span class=\"name\">TopCat</span>.<span class=\"name\">Presheaf</span>.<span class=\"name\">generateEquivalenceOpensLe_functor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hY : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#iSup\">iSup</a> <span class=\"fn\">U</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.generateEquivalenceOpensLe\">TopCat.Presheaf.generateEquivalenceOpensLe</a> <span class=\"fn\">U</span> <span class=\"fn\">hY</span></span>)</span>.functor</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.generateEquivalenceOpensLe_functor'\">TopCat.Presheaf.generateEquivalenceOpensLe_functor'</a> <span class=\"fn\">U</span> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.lean#L148-L148","name":"TopCat.Presheaf.generateEquivalenceOpensLe_inverse","line":148,"kind":"theorem","docLink":"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.generateEquivalenceOpensLe_inverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.generateEquivalenceOpensLe_inverse\"><span class=\"name\">TopCat</span>.<span class=\"name\">Presheaf</span>.<span class=\"name\">generateEquivalenceOpensLe_inverse</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hY : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#iSup\">iSup</a> <span class=\"fn\">U</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.generateEquivalenceOpensLe\">TopCat.Presheaf.generateEquivalenceOpensLe</a> <span class=\"fn\">U</span> <span class=\"fn\">hY</span></span>)</span>.inverse</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.generateEquivalenceOpensLe_inverse'\">TopCat.Presheaf.generateEquivalenceOpensLe_inverse'</a> <span class=\"fn\">U</span> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.lean#L148-L148","name":"TopCat.Presheaf.generateEquivalenceOpensLe_unitIso","line":148,"kind":"theorem","docLink":"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.generateEquivalenceOpensLe_unitIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.generateEquivalenceOpensLe_unitIso\"><span class=\"name\">TopCat</span>.<span class=\"name\">Presheaf</span>.<span class=\"name\">generateEquivalenceOpensLe_unitIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hY : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#iSup\">iSup</a> <span class=\"fn\">U</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.generateEquivalenceOpensLe\">TopCat.Presheaf.generateEquivalenceOpensLe</a> <span class=\"fn\">U</span> <span class=\"fn\">hY</span></span>)</span>.unitIso</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToIso\">CategoryTheory.eqToIso</a> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.lean#L148-L148","name":"TopCat.Presheaf.generateEquivalenceOpensLe_counitIso","line":148,"kind":"theorem","docLink":"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.generateEquivalenceOpensLe_counitIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.generateEquivalenceOpensLe_counitIso\"><span class=\"name\">TopCat</span>.<span class=\"name\">Presheaf</span>.<span class=\"name\">generateEquivalenceOpensLe_counitIso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hY : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#iSup\">iSup</a> <span class=\"fn\">U</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.generateEquivalenceOpensLe\">TopCat.Presheaf.generateEquivalenceOpensLe</a> <span class=\"fn\">U</span> <span class=\"fn\">hY</span></span>)</span>.counitIso</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/EqToHom.html#CategoryTheory.eqToIso\">CategoryTheory.eqToIso</a> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.lean#L126-L141","name":"TopCat.Presheaf.generateEquivalenceOpensLe_inverse'","line":126,"kind":"def","docLink":"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.generateEquivalenceOpensLe_inverse'","doc":"Given a family of opens `U` and an open `Y` equal to the union of opens in `U`, we may\ntake the presieve on `Y` associated to `U` and the sieve generated by it, and form the\nfull subcategory (subposet) of opens contained in `Y` (`over Y`) consisting of arrows\nin the sieve. This full subcategory is equivalent to `OpensLeCover U`, the (poset)\ncategory of opens contained in some `U i`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.generateEquivalenceOpensLe_inverse'\"><span class=\"name\">TopCat</span>.<span class=\"name\">Presheaf</span>.<span class=\"name\">generateEquivalenceOpensLe_inverse'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hY : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#iSup\">iSup</a> <span class=\"fn\">U</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.SheafCondition.OpensLeCover\">TopCat.Presheaf.SheafCondition.OpensLeCover</a> <span class=\"fn\">U</span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FullSubcategory.html#CategoryTheory.FullSubcategory\">CategoryTheory.FullSubcategory</a> <span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Over.html#CategoryTheory.Over\">CategoryTheory.Over</a> <span class=\"fn\">Y</span></span>) =&gt;\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve.generate\">CategoryTheory.Sieve.generate</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/SheafCondition/Sites.html#TopCat.Presheaf.presieveOfCoveringAux\">TopCat.Presheaf.presieveOfCoveringAux</a> <span class=\"fn\">U</span> <span class=\"fn\">Y</span></span>)</span></span>)</span>.arrows</span> <span class=\"fn\"><span class=\"fn\">f</span>.hom</span></span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.lean#L125-L125","name":"TopCat.Presheaf.generateEquivalenceOpensLe_inverse'_map","line":125,"kind":"theorem","docLink":"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.generateEquivalenceOpensLe_inverse'_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.generateEquivalenceOpensLe_inverse'_map\"><span class=\"name\">TopCat</span>.<span class=\"name\">Presheaf</span>.<span class=\"name\">generateEquivalenceOpensLe_inverse'_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hY : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#iSup\">iSup</a> <span class=\"fn\">U</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ {<span class=\"fn\">x </span><span class=\"fn\">x_1</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.SheafCondition.OpensLeCover\">TopCat.Presheaf.SheafCondition.OpensLeCover</a> <span class=\"fn\">U</span></span>} (<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">x_1</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.generateEquivalenceOpensLe_inverse'\">TopCat.Presheaf.generateEquivalenceOpensLe_inverse'</a> <span class=\"fn\">U</span> <span class=\"fn\">hY</span></span>)</span>.map</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Over.html#CategoryTheory.Over.homMk\">CategoryTheory.Over.homMk</a> <span class=\"fn\">g</span> <span class=\"fn\">⋯</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.lean#L125-L125","name":"TopCat.Presheaf.generateEquivalenceOpensLe_inverse'_obj_obj_left","line":125,"kind":"theorem","docLink":"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.generateEquivalenceOpensLe_inverse'_obj_obj_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.generateEquivalenceOpensLe_inverse'_obj_obj_left\"><span class=\"name\">TopCat</span>.<span class=\"name\">Presheaf</span>.<span class=\"name\">generateEquivalenceOpensLe_inverse'_obj_obj_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hY : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#iSup\">iSup</a> <span class=\"fn\">U</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(V : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.SheafCondition.OpensLeCover\">TopCat.Presheaf.SheafCondition.OpensLeCover</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.generateEquivalenceOpensLe_inverse'\">TopCat.Presheaf.generateEquivalenceOpensLe_inverse'</a> <span class=\"fn\">U</span> <span class=\"fn\">hY</span></span>)</span>.obj</span> <span class=\"fn\">V</span></span>)</span>.obj</span>.left</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">V</span>.obj</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.lean#L125-L125","name":"TopCat.Presheaf.generateEquivalenceOpensLe_inverse'_obj_obj_right_as","line":125,"kind":"theorem","docLink":"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.generateEquivalenceOpensLe_inverse'_obj_obj_right_as","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.generateEquivalenceOpensLe_inverse'_obj_obj_right_as\"><span class=\"name\">TopCat</span>.<span class=\"name\">Presheaf</span>.<span class=\"name\">generateEquivalenceOpensLe_inverse'_obj_obj_right_as</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hY : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#iSup\">iSup</a> <span class=\"fn\">U</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(V : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.SheafCondition.OpensLeCover\">TopCat.Presheaf.SheafCondition.OpensLeCover</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.generateEquivalenceOpensLe_inverse'\">TopCat.Presheaf.generateEquivalenceOpensLe_inverse'</a> <span class=\"fn\">U</span> <span class=\"fn\">hY</span></span>)</span>.obj</span> <span class=\"fn\">V</span></span>)</span>.obj</span>.right</span>.as</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#PUnit.unit\">PUnit.unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.lean#L125-L125","name":"TopCat.Presheaf.generateEquivalenceOpensLe_inverse'_obj_obj_hom","line":125,"kind":"theorem","docLink":"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.generateEquivalenceOpensLe_inverse'_obj_obj_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.generateEquivalenceOpensLe_inverse'_obj_obj_hom\"><span class=\"name\">TopCat</span>.<span class=\"name\">Presheaf</span>.<span class=\"name\">generateEquivalenceOpensLe_inverse'_obj_obj_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hY : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#iSup\">iSup</a> <span class=\"fn\">U</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(V : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.SheafCondition.OpensLeCover\">TopCat.Presheaf.SheafCondition.OpensLeCover</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.generateEquivalenceOpensLe_inverse'\">TopCat.Presheaf.generateEquivalenceOpensLe_inverse'</a> <span class=\"fn\">U</span> <span class=\"fn\">hY</span></span>)</span>.obj</span> <span class=\"fn\">V</span></span>)</span>.obj</span>.hom</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Preorder.html#CategoryTheory.homOfLE\">CategoryTheory.homOfLE</a> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.lean#L110-L117","name":"TopCat.Presheaf.generateEquivalenceOpensLe_functor'","line":110,"kind":"def","docLink":"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.generateEquivalenceOpensLe_functor'","doc":"Given a family of opens `U` and an open `Y` equal to the union of opens in `U`, we may\ntake the presieve on `Y` associated to `U` and the sieve generated by it, and form the\nfull subcategory (subposet) of opens contained in `Y` (`over Y`) consisting of arrows\nin the sieve. This full subcategory is equivalent to `OpensLeCover U`, the (poset)\ncategory of opens contained in some `U i`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.generateEquivalenceOpensLe_functor'\"><span class=\"name\">TopCat</span>.<span class=\"name\">Presheaf</span>.<span class=\"name\">generateEquivalenceOpensLe_functor'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hY : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#iSup\">iSup</a> <span class=\"fn\">U</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FullSubcategory.html#CategoryTheory.FullSubcategory\">CategoryTheory.FullSubcategory</a> <span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Over.html#CategoryTheory.Over\">CategoryTheory.Over</a> <span class=\"fn\">Y</span></span>) =&gt;\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve.generate\">CategoryTheory.Sieve.generate</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/SheafCondition/Sites.html#TopCat.Presheaf.presieveOfCoveringAux\">TopCat.Presheaf.presieveOfCoveringAux</a> <span class=\"fn\">U</span> <span class=\"fn\">Y</span></span>)</span></span>)</span>.arrows</span> <span class=\"fn\"><span class=\"fn\">f</span>.hom</span></span></span></span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.SheafCondition.OpensLeCover\">TopCat.Presheaf.SheafCondition.OpensLeCover</a> <span class=\"fn\">U</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.lean#L109-L109","name":"TopCat.Presheaf.generateEquivalenceOpensLe_functor'_obj_obj","line":109,"kind":"theorem","docLink":"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.generateEquivalenceOpensLe_functor'_obj_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.generateEquivalenceOpensLe_functor'_obj_obj\"><span class=\"name\">TopCat</span>.<span class=\"name\">Presheaf</span>.<span class=\"name\">generateEquivalenceOpensLe_functor'_obj_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hY : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#iSup\">iSup</a> <span class=\"fn\">U</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FullSubcategory.html#CategoryTheory.FullSubcategory\">CategoryTheory.FullSubcategory</a> <span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Over.html#CategoryTheory.Over\">CategoryTheory.Over</a> <span class=\"fn\">Y</span></span>) =&gt;\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve.generate\">CategoryTheory.Sieve.generate</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/SheafCondition/Sites.html#TopCat.Presheaf.presieveOfCoveringAux\">TopCat.Presheaf.presieveOfCoveringAux</a> <span class=\"fn\">U</span> <span class=\"fn\">Y</span></span>)</span></span>)</span>.arrows</span> <span class=\"fn\"><span class=\"fn\">f</span>.hom</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.generateEquivalenceOpensLe_functor'\">TopCat.Presheaf.generateEquivalenceOpensLe_functor'</a> <span class=\"fn\">U</span> <span class=\"fn\">hY</span></span>)</span>.obj</span> <span class=\"fn\">f</span></span>)</span>.obj</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.obj</span>.left</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.lean#L109-L109","name":"TopCat.Presheaf.generateEquivalenceOpensLe_functor'_map","line":109,"kind":"theorem","docLink":"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.generateEquivalenceOpensLe_functor'_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.generateEquivalenceOpensLe_functor'_map\"><span class=\"name\">TopCat</span>.<span class=\"name\">Presheaf</span>.<span class=\"name\">generateEquivalenceOpensLe_functor'_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hY : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#iSup\">iSup</a> <span class=\"fn\">U</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀\n  {<span class=\"fn\">x </span><span class=\"fn\">x_1</span> :\n    <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FullSubcategory.html#CategoryTheory.FullSubcategory\">CategoryTheory.FullSubcategory</a> <span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Comma/Over.html#CategoryTheory.Over\">CategoryTheory.Over</a> <span class=\"fn\">Y</span></span>) =&gt;\n      <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Sites/Sieves.html#CategoryTheory.Sieve.generate\">CategoryTheory.Sieve.generate</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/SheafCondition/Sites.html#TopCat.Presheaf.presieveOfCoveringAux\">TopCat.Presheaf.presieveOfCoveringAux</a> <span class=\"fn\">U</span> <span class=\"fn\">Y</span></span>)</span></span>)</span>.arrows</span> <span class=\"fn\"><span class=\"fn\">f</span>.hom</span></span></span></span>}\n  (<span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">x_1</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.generateEquivalenceOpensLe_functor'\">TopCat.Presheaf.generateEquivalenceOpensLe_functor'</a> <span class=\"fn\">U</span> <span class=\"fn\">hY</span></span>)</span>.map</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span>.left</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.lean#L96-L97","name":"TopCat.Presheaf.IsSheafOpensLeCover","line":96,"kind":"def","docLink":"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.IsSheafOpensLeCover","doc":"An equivalent formulation of the sheaf condition\n(which we prove equivalent to the usual one below as\n`isSheaf_iff_isSheafOpensLeCover`).\n\nA presheaf is a sheaf if `F` sends the cone `(opensLeCoverCocone U).op` to a limit cone.\n(Recall `opensLeCoverCocone U`, has cone point `iSup U`,\nmapping down to any `V` which is contained in some `U i`.)\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.IsSheafOpensLeCover\"><span class=\"name\">TopCat</span>.<span class=\"name\">Presheaf</span>.<span class=\"name\">IsSheafOpensLeCover</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{v, u}</a>    <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/Presheaf.html#TopCat.Presheaf\">TopCat.Presheaf</a> <span class=\"fn\">C</span> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.lean#L80-L82","name":"TopCat.Presheaf.SheafCondition.opensLeCoverCocone","line":80,"kind":"def","docLink":"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.SheafCondition.opensLeCoverCocone","doc":"`iSup U` as a cocone over the opens sets contained in some element of the cover.\n\n(In fact this is a colimit cocone.)\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.SheafCondition.opensLeCoverCocone\"><span class=\"name\">TopCat</span>.<span class=\"name\">Presheaf</span>.<span class=\"name\">SheafCondition</span>.<span class=\"name\">opensLeCoverCocone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Limits/Cones.html#CategoryTheory.Limits.Cocone\">CategoryTheory.Limits.Cocone</a>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/FullSubcategory.html#CategoryTheory.fullSubcategoryInclusion\">CategoryTheory.fullSubcategoryInclusion</a> <span class=\"fn\">fun (<span class=\"fn\">V</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>) =&gt; <span class=\"fn\">∃ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">i</span></span></span></span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.lean#L71-L72","name":"TopCat.Presheaf.SheafCondition.OpensLeCover.homToIndex","line":71,"kind":"def","docLink":"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.SheafCondition.OpensLeCover.homToIndex","doc":"The morphism from `V` to `U i` for some `i`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.SheafCondition.OpensLeCover.homToIndex\"><span class=\"name\">TopCat</span>.<span class=\"name\">Presheaf</span>.<span class=\"name\">SheafCondition</span>.<span class=\"name\">OpensLeCover</span>.<span class=\"name\">homToIndex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(V : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.SheafCondition.OpensLeCover\">TopCat.Presheaf.SheafCondition.OpensLeCover</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">V</span>.obj</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\"><span class=\"fn\">V</span>.index</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.lean#L66-L67","name":"TopCat.Presheaf.SheafCondition.OpensLeCover.index","line":66,"kind":"def","docLink":"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.SheafCondition.OpensLeCover.index","doc":"An arbitrarily chosen index such that `V ≤ U i`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.SheafCondition.OpensLeCover.index\"><span class=\"name\">TopCat</span>.<span class=\"name\">Presheaf</span>.<span class=\"name\">SheafCondition</span>.<span class=\"name\">OpensLeCover</span>.<span class=\"name\">index</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(V : <span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.SheafCondition.OpensLeCover\">TopCat.Presheaf.SheafCondition.OpensLeCover</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">ι</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.lean#L57-L58","name":"TopCat.Presheaf.SheafCondition.instInhabitedOpensLeCoverOfNonempty","line":57,"kind":"instance","docLink":"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.SheafCondition.instInhabitedOpensLeCoverOfNonempty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.SheafCondition.instInhabitedOpensLeCoverOfNonempty\"><span class=\"name\">TopCat</span>.<span class=\"name\">Presheaf</span>.<span class=\"name\">SheafCondition</span>.<span class=\"name\">instInhabitedOpensLeCoverOfNonempty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.SheafCondition.OpensLeCover\">TopCat.Presheaf.SheafCondition.OpensLeCover</a> <span class=\"fn\">U</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.lean#L55-L55","name":"TopCat.Presheaf.SheafCondition.instCategoryOpensLeCover","line":55,"kind":"instance","docLink":"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.SheafCondition.instCategoryOpensLeCover","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.SheafCondition.instCategoryOpensLeCover\"><span class=\"name\">TopCat</span>.<span class=\"name\">Presheaf</span>.<span class=\"name\">SheafCondition</span>.<span class=\"name\">instCategoryOpensLeCover</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{w, w}</a>    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.SheafCondition.OpensLeCover\">TopCat.Presheaf.SheafCondition.OpensLeCover</a> <span class=\"fn\">U</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.lean#L51-L52","name":"TopCat.Presheaf.SheafCondition.OpensLeCover","line":51,"kind":"def","docLink":"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.SheafCondition.OpensLeCover","doc":"The category of open sets contained in some element of the cover.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Sheaves/SheafCondition/OpensLeCover.html#TopCat.Presheaf.SheafCondition.OpensLeCover\"><span class=\"name\">TopCat</span>.<span class=\"name\">Presheaf</span>.<span class=\"name\">SheafCondition</span>.<span class=\"name\">OpensLeCover</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Topology/Category/TopCat/Basic.html#TopCat\">TopCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Sets/Opens.html#TopologicalSpace.Opens\">TopologicalSpace.Opens</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> w</div></div>"}]}