{"name":"Mathlib.Topology.UniformSpace.Ascoli","instances":[],"imports":["Init","Mathlib.Topology.UniformSpace.CompactConvergence","Mathlib.Topology.UniformSpace.Equicontinuity","Mathlib.Topology.UniformSpace.Equiv"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Ascoli.lean#L491-L501","name":"ArzelaAscoli.isCompact_of_equicontinuous","line":491,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Ascoli.html#ArzelaAscoli.isCompact_of_equicontinuous","doc":"A version of the **Arzela-Ascoli theorem**.\n\nIf an equicontinuous family of continuous functions is compact in the pointwise topology, then it\nis compact in the compact open topology. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Ascoli.html#ArzelaAscoli.isCompact_of_equicontinuous\"><span class=\"name\">ArzelaAscoli</span>.<span class=\"name\">isCompact_of_equicontinuous</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">α</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hS1 : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ContinuousMap.toFun</span> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">S</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hS2 : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Equicontinuous\">Equicontinuous</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">↑<span class=\"fn\">S</span></span>) =&gt; <span class=\"fn\">⇑<span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Ascoli.lean#L466-L485","name":"ArzelaAscoli.isCompact_closure_of_closedEmbedding","line":466,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Ascoli.html#ArzelaAscoli.isCompact_closure_of_closedEmbedding","doc":"A version of the **Arzela-Ascoli theorem**.\n\nLet `X, ι` be topological spaces, `𝔖` a covering of `X` by compact subsets, `α` a T2 uniform space,\n`F : ι → (X → α)`, and `s` a subset of `ι`. Assume that:\n* `F`, viewed as a function `ι → (X →ᵤ[𝔖] α)`, is a closed embedding (in other words, `ι`\n  identifies to a closed subset of `X →ᵤ[𝔖] α` through `F`)\n* `F '' s` is equicontinuous on each `K ∈ 𝔖`\n* For all `x ∈ ⋃₀ 𝔖`, the image of `s` under `i ↦ F i x` is contained in some fixed compact subset.\n\nThen `s` has compact closure in `ι`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Ascoli.html#ArzelaAscoli.isCompact_closure_of_closedEmbedding\"><span class=\"name\">ArzelaAscoli</span>.<span class=\"name\">isCompact_closure_of_closedEmbedding</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation.html#T2Space\">T2Space</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝔖 : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝔖_compact : <span class=\"fn\">∀ <span class=\"fn\">K</span> ∈ <span class=\"fn\">𝔖</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(F_clemb : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#ClosedEmbedding\">ClosedEmbedding</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/UniformConvergenceTopology.html#UniformOnFun.ofFun\">UniformOnFun.ofFun</a> <span class=\"fn\">𝔖</span></span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">F</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s_eqcont : <span class=\"fn\">∀ <span class=\"fn\">K</span> ∈ <span class=\"fn\">𝔖</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">Subtype.val</span></span>)</span> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s_pointwiseCompact : <span class=\"fn\">∀ <span class=\"fn\">K</span> ∈ <span class=\"fn\">𝔖</span>, <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\">K</span>, <span class=\"fn\">∃ (<span class=\"fn\">Q</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">Q</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ <span class=\"fn\">i</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">Q</span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#closure\">closure</a> <span class=\"fn\">s</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Ascoli.lean#L448-L454","name":"ArzelaAscoli.compactSpace_of_closedEmbedding","line":448,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Ascoli.html#ArzelaAscoli.compactSpace_of_closedEmbedding","doc":"A version of the **Arzela-Ascoli theorem**.\n\nLet `X, ι` be topological spaces, `𝔖` a covering of `X` by compact subsets, `α` a uniform space,\nand `F : ι → (X → α)`. Assume that:\n* `F`, viewed as a function `ι → (X →ᵤ[𝔖] α)`, is a closed embedding (in other words, `ι`\n  identifies to a closed subset of `X →ᵤ[𝔖] α` through `F`)\n* `F` is equicontinuous on each `K ∈ 𝔖`\n* For all `x`, the range of `i ↦ F i x` is contained in some fixed compact subset.\n\nThen `ι` is compact. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Ascoli.html#ArzelaAscoli.compactSpace_of_closedEmbedding\"><span class=\"name\">ArzelaAscoli</span>.<span class=\"name\">compactSpace_of_closedEmbedding</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝔖 : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝔖_compact : <span class=\"fn\">∀ <span class=\"fn\">K</span> ∈ <span class=\"fn\">𝔖</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(F_clemb : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#ClosedEmbedding\">ClosedEmbedding</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/UniformConvergenceTopology.html#UniformOnFun.ofFun\">UniformOnFun.ofFun</a> <span class=\"fn\">𝔖</span></span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">F</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(F_eqcont : <span class=\"fn\">∀ <span class=\"fn\">K</span> ∈ <span class=\"fn\">𝔖</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(F_pointwiseCompact : <span class=\"fn\">∀ <span class=\"fn\">K</span> ∈ <span class=\"fn\">𝔖</span>, <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\">K</span>, <span class=\"fn\">∃ (<span class=\"fn\">Q</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">Q</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">Q</span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">ι</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Ascoli.lean#L413-L436","name":"ArzelaAscoli.compactSpace_of_closed_inducing'","line":413,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Ascoli.html#ArzelaAscoli.compactSpace_of_closed_inducing'","doc":"A version of the **Arzela-Ascoli theorem**.\n\nLet `X` be a topological space, `𝔖` a family of compact subsets of `X`, `α` a uniform space,\nand `F : ι → (X → α)`. Assume that:\n* `F`, viewed as a function `ι → (X →ᵤ[𝔖] α)`, is closed and inducing\n* `F` is equicontinuous on each `K ∈ 𝔖`\n* For all `x ∈ ⋃₀ 𝔖`, the range of `i ↦ F i x` is contained in some fixed compact subset.\n\nThen `ι` is compact. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Ascoli.html#ArzelaAscoli.compactSpace_of_closed_inducing'\"><span class=\"name\">ArzelaAscoli</span>.<span class=\"name\">compactSpace_of_closed_inducing'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝔖 : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝔖_compact : <span class=\"fn\">∀ <span class=\"fn\">K</span> ∈ <span class=\"fn\">𝔖</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(F_ind : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Inducing\">Inducing</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/UniformConvergenceTopology.html#UniformOnFun.ofFun\">UniformOnFun.ofFun</a> <span class=\"fn\">𝔖</span></span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">F</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(F_cl : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/UniformConvergenceTopology.html#UniformOnFun.ofFun\">UniformOnFun.ofFun</a> <span class=\"fn\">𝔖</span></span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">F</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(F_eqcont : <span class=\"fn\">∀ <span class=\"fn\">K</span> ∈ <span class=\"fn\">𝔖</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(F_pointwiseCompact : <span class=\"fn\">∀ <span class=\"fn\">K</span> ∈ <span class=\"fn\">𝔖</span>, <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\">K</span>, <span class=\"fn\">∃ (<span class=\"fn\">Q</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">Q</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">Q</span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">ι</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Ascoli.lean#L401-L402","name":"EquicontinuousOn.isClosed_range_pi_of_uniformOnFun","line":401,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Ascoli.html#EquicontinuousOn.isClosed_range_pi_of_uniformOnFun","doc":"**Alias** of the forward direction of `EquicontinuousOn.isClosed_range_uniformOnFun_iff_pi`.\n\n---\n\nLet `X` be a topological space, `𝔖` a covering of `X` by compact subsets, and\n`α` a uniform space. An equicontinuous subset of `X → α` is closed in the topology of uniform\nconvergence on all `K ∈ 𝔖` iff it is closed in the topology of pointwise convergence.\n\nThis is a specialization of `EquicontinuousOn.isClosed_range_pi_of_uniformOnFun'` to the case where\n`𝔖` covers `X`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Ascoli.html#EquicontinuousOn.isClosed_range_pi_of_uniformOnFun\"><span class=\"name\">EquicontinuousOn</span>.<span class=\"name\">isClosed_range_pi_of_uniformOnFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝔖 : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝔖_compact : <span class=\"fn\">∀ <span class=\"fn\">K</span> ∈ <span class=\"fn\">𝔖</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(𝔖_covers : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#Set.sUnion\">⋃₀</a> <span class=\"fn\">𝔖</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Set.univ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(F_eqcont : <span class=\"fn\">∀ <span class=\"fn\">K</span> ∈ <span class=\"fn\">𝔖</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/UniformConvergenceTopology.html#UniformOnFun.ofFun\">UniformOnFun.ofFun</a> <span class=\"fn\">𝔖</span></span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">F</span></span>)</span></span>)</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\">F</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Ascoli.lean#L390-L399","name":"EquicontinuousOn.isClosed_range_uniformOnFun_iff_pi","line":390,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Ascoli.html#EquicontinuousOn.isClosed_range_uniformOnFun_iff_pi","doc":"Let `X` be a topological space, `𝔖` a covering of `X` by compact subsets, and\n`α` a uniform space. An equicontinuous subset of `X → α` is closed in the topology of uniform\nconvergence on all `K ∈ 𝔖` iff it is closed in the topology of pointwise convergence.\n\nThis is a specialization of `EquicontinuousOn.isClosed_range_pi_of_uniformOnFun'` to the case where\n`𝔖` covers `X`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Ascoli.html#EquicontinuousOn.isClosed_range_uniformOnFun_iff_pi\"><span class=\"name\">EquicontinuousOn</span>.<span class=\"name\">isClosed_range_uniformOnFun_iff_pi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝔖 : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝔖_compact : <span class=\"fn\">∀ <span class=\"fn\">K</span> ∈ <span class=\"fn\">𝔖</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(𝔖_covers : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#Set.sUnion\">⋃₀</a> <span class=\"fn\">𝔖</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Set.univ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(F_eqcont : <span class=\"fn\">∀ <span class=\"fn\">K</span> ∈ <span class=\"fn\">𝔖</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/UniformConvergenceTopology.html#UniformOnFun.ofFun\">UniformOnFun.ofFun</a> <span class=\"fn\">𝔖</span></span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">F</span></span>)</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\">F</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Ascoli.lean#L369-L382","name":"EquicontinuousOn.isClosed_range_pi_of_uniformOnFun'","line":369,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Ascoli.html#EquicontinuousOn.isClosed_range_pi_of_uniformOnFun'","doc":"Let `X` be a topological space, `𝔖` a family of compact subsets of `X` and\n`α` a uniform space. An equicontinuous subset of `X → α` is closed in the topology of uniform\nconvergence on all `K ∈ 𝔖` iff it is closed in the topology of pointwise convergence on `⋃₀ 𝔖`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Ascoli.html#EquicontinuousOn.isClosed_range_pi_of_uniformOnFun'\"><span class=\"name\">EquicontinuousOn</span>.<span class=\"name\">isClosed_range_pi_of_uniformOnFun'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝔖 : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝔖_compact : <span class=\"fn\">∀ <span class=\"fn\">K</span> ∈ <span class=\"fn\">𝔖</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(F_eqcont : <span class=\"fn\">∀ <span class=\"fn\">K</span> ∈ <span class=\"fn\">𝔖</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/UniformConvergenceTopology.html#UniformOnFun.ofFun\">UniformOnFun.ofFun</a> <span class=\"fn\">𝔖</span></span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">F</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#Set.sUnion\">⋃₀</a> <span class=\"fn\">𝔖</span></span>)</span>.restrict</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">F</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Ascoli.lean#L354-L364","name":"EquicontinuousOn.tendsto_uniformOnFun_iff_pi","line":354,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Ascoli.html#EquicontinuousOn.tendsto_uniformOnFun_iff_pi","doc":"Let `X` be a topological space, `𝔖` a covering of `X` by compact subsets,\n`α` a uniform space, `F : ι → (X → α)` a family equicontinuous on each `K ∈ 𝔖`, and `ℱ` a filter\non `ι`. Then, `F` tends to `f : X → α` along `ℱ` *uniformly on each `K ∈ 𝔖`* iff it tends to `f`\n*pointwise* along `ℱ`.\n\nThis is a specialization of `EquicontinuousOn.tendsto_uniformOnFun_iff_pi'` to the case\nwhere `𝔖` covers `X`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Ascoli.html#EquicontinuousOn.tendsto_uniformOnFun_iff_pi\"><span class=\"name\">EquicontinuousOn</span>.<span class=\"name\">tendsto_uniformOnFun_iff_pi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝔖 : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝔖_compact : <span class=\"fn\">∀ <span class=\"fn\">K</span> ∈ <span class=\"fn\">𝔖</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(𝔖_covers : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#Set.sUnion\">⋃₀</a> <span class=\"fn\">𝔖</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Set.univ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(F_eqcont : <span class=\"fn\">∀ <span class=\"fn\">K</span> ∈ <span class=\"fn\">𝔖</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ℱ : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/UniformConvergenceTopology.html#UniformOnFun.ofFun\">UniformOnFun.ofFun</a> <span class=\"fn\">𝔖</span></span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">F</span></span>)</span> <span class=\"fn\">ℱ</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/UniformConvergenceTopology.html#UniformOnFun.ofFun\">UniformOnFun.ofFun</a> <span class=\"fn\">𝔖</span></span>)</span> <span class=\"fn\">f</span></span>)</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">F</span> <span class=\"fn\">ℱ</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">f</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Ascoli.lean#L327-L345","name":"EquicontinuousOn.tendsto_uniformOnFun_iff_pi'","line":327,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Ascoli.html#EquicontinuousOn.tendsto_uniformOnFun_iff_pi'","doc":"Let `X` be a topological space, `𝔖` a family of compact subsets of `X`,\n`α` a uniform space, `F : ι → (X → α)` a family equicontinuous on each `K ∈ 𝔖`, and `ℱ` a filter\non `ι`. Then, `F` tends to `f : X → α` along `ℱ` *uniformly on each `K ∈ 𝔖`* iff it tends to `f`\n*pointwise on `⋃₀ 𝔖`* along `ℱ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Ascoli.html#EquicontinuousOn.tendsto_uniformOnFun_iff_pi'\"><span class=\"name\">EquicontinuousOn</span>.<span class=\"name\">tendsto_uniformOnFun_iff_pi'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝔖 : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝔖_compact : <span class=\"fn\">∀ <span class=\"fn\">K</span> ∈ <span class=\"fn\">𝔖</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(F_eqcont : <span class=\"fn\">∀ <span class=\"fn\">K</span> ∈ <span class=\"fn\">𝔖</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ℱ : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/UniformConvergenceTopology.html#UniformOnFun.ofFun\">UniformOnFun.ofFun</a> <span class=\"fn\">𝔖</span></span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">F</span></span>)</span> <span class=\"fn\">ℱ</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/UniformConvergenceTopology.html#UniformOnFun.ofFun\">UniformOnFun.ofFun</a> <span class=\"fn\">𝔖</span></span>)</span> <span class=\"fn\">f</span></span>)</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#Set.sUnion\">⋃₀</a> <span class=\"fn\">𝔖</span></span>)</span>.restrict</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">F</span></span>)</span> <span class=\"fn\">ℱ</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#Set.sUnion\">⋃₀</a> <span class=\"fn\">𝔖</span></span>)</span>.restrict</span> <span class=\"fn\">f</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Ascoli.lean#L307-L319","name":"EquicontinuousOn.inducing_uniformOnFun_iff_pi","line":307,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Ascoli.html#EquicontinuousOn.inducing_uniformOnFun_iff_pi","doc":"Let `X` be a topological space, `𝔖` a covering of `X` by compact subsets, `α` a uniform space,\nand `F : ι → (X → α)` a family which is equicontinuous on each `K ∈ 𝔖`. Then, the topologies\nof uniform convergence on `𝔖` and pointwise convergence induce the same topology on `ι`.\n\nThis is a specialization of `EquicontinuousOn.inducing_uniformOnFun_iff_pi'` to\nthe case where `𝔖` covers `X`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Ascoli.html#EquicontinuousOn.inducing_uniformOnFun_iff_pi\"><span class=\"name\">EquicontinuousOn</span>.<span class=\"name\">inducing_uniformOnFun_iff_pi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝔖 : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝔖_covers : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#Set.sUnion\">⋃₀</a> <span class=\"fn\">𝔖</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Set.univ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(𝔖_compact : <span class=\"fn\">∀ <span class=\"fn\">K</span> ∈ <span class=\"fn\">𝔖</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(F_eqcont : <span class=\"fn\">∀ <span class=\"fn\">K</span> ∈ <span class=\"fn\">𝔖</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Inducing\">Inducing</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/UniformConvergenceTopology.html#UniformOnFun.ofFun\">UniformOnFun.ofFun</a> <span class=\"fn\">𝔖</span></span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">F</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Inducing\">Inducing</a> <span class=\"fn\">F</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Ascoli.lean#L291-L299","name":"EquicontinuousOn.inducing_uniformOnFun_iff_pi'","line":291,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Ascoli.html#EquicontinuousOn.inducing_uniformOnFun_iff_pi'","doc":"Let `X` be a topological space, `𝔖` a family of compact subsets of `X`, `α` a uniform space,\nand `F : ι → (X → α)` a family which is equicontinuous on each `K ∈ 𝔖`. Then, the topologies\nof uniform convergence on `𝔖` and pointwise convergence on `⋃₀ 𝔖` induce the same topology on  `ι`.\n\nIn particular, pointwise convergence and compact convergence coincide on an equicontinuous\nsubset of `X → α`.\n\nThis is a consequence of `EquicontinuousOn.comap_uniformOnFun_eq` stated in terms of `Inducing`\nfor convenuence. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Ascoli.html#EquicontinuousOn.inducing_uniformOnFun_iff_pi'\"><span class=\"name\">EquicontinuousOn</span>.<span class=\"name\">inducing_uniformOnFun_iff_pi'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝔖 : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝔖_compact : <span class=\"fn\">∀ <span class=\"fn\">K</span> ∈ <span class=\"fn\">𝔖</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(F_eqcont : <span class=\"fn\">∀ <span class=\"fn\">K</span> ∈ <span class=\"fn\">𝔖</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Inducing\">Inducing</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/UniformConvergenceTopology.html#UniformOnFun.ofFun\">UniformOnFun.ofFun</a> <span class=\"fn\">𝔖</span></span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">F</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Inducing\">Inducing</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#Set.sUnion\">⋃₀</a> <span class=\"fn\">𝔖</span></span>)</span>.restrict</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">F</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Ascoli.lean#L268-L280","name":"EquicontinuousOn.uniformInducing_uniformOnFun_iff_pi","line":268,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Ascoli.html#EquicontinuousOn.uniformInducing_uniformOnFun_iff_pi","doc":"Let `X` be a topological space, `𝔖` a covering of `X` by compact subsets, `α` a uniform space,\nand `F : ι → (X → α)` a family which is equicontinuous on each `K ∈ 𝔖`. Then, the uniform\nstructures of uniform convergence on `𝔖` and pointwise convergence induce the same\nuniform structure on `ι`.\n\nThis is a specialization of `EquicontinuousOn.uniformInducing_uniformOnFun_iff_pi'` to\nthe case where `𝔖` covers `X`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Ascoli.html#EquicontinuousOn.uniformInducing_uniformOnFun_iff_pi\"><span class=\"name\">EquicontinuousOn</span>.<span class=\"name\">uniformInducing_uniformOnFun_iff_pi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝔖 : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝔖_covers : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#Set.sUnion\">⋃₀</a> <span class=\"fn\">𝔖</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Set.univ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(𝔖_compact : <span class=\"fn\">∀ <span class=\"fn\">K</span> ∈ <span class=\"fn\">𝔖</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(F_eqcont : <span class=\"fn\">∀ <span class=\"fn\">K</span> ∈ <span class=\"fn\">𝔖</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/UniformEmbedding.html#UniformInducing\">UniformInducing</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/UniformConvergenceTopology.html#UniformOnFun.ofFun\">UniformOnFun.ofFun</a> <span class=\"fn\">𝔖</span></span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">F</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/UniformEmbedding.html#UniformInducing\">UniformInducing</a> <span class=\"fn\">F</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Ascoli.lean#L252-L259","name":"EquicontinuousOn.uniformInducing_uniformOnFun_iff_pi'","line":252,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Ascoli.html#EquicontinuousOn.uniformInducing_uniformOnFun_iff_pi'","doc":"Let `X` be a topological space, `𝔖` a family of compact subsets of `X`, `α` a uniform space,\nand `F : ι → (X → α)` a family which is equicontinuous on each `K ∈ 𝔖`. Then, the uniform\nstructures of uniform convergence on `𝔖` and pointwise convergence on `⋃₀ 𝔖` induce the same\nuniform structure on `ι`.\n\nIn particular, pointwise convergence and compact convergence coincide on an equicontinuous\nsubset of `X → α`.\n\nThis is a version of `EquicontinuousOn.comap_uniformOnFun_eq` stated in terms of `UniformInducing`\nfor convenuence. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Ascoli.html#EquicontinuousOn.uniformInducing_uniformOnFun_iff_pi'\"><span class=\"name\">EquicontinuousOn</span>.<span class=\"name\">uniformInducing_uniformOnFun_iff_pi'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝔖 : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝔖_compact : <span class=\"fn\">∀ <span class=\"fn\">K</span> ∈ <span class=\"fn\">𝔖</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(F_eqcont : <span class=\"fn\">∀ <span class=\"fn\">K</span> ∈ <span class=\"fn\">𝔖</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/UniformEmbedding.html#UniformInducing\">UniformInducing</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/UniformConvergenceTopology.html#UniformOnFun.ofFun\">UniformOnFun.ofFun</a> <span class=\"fn\">𝔖</span></span>)</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">F</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/UniformEmbedding.html#UniformInducing\">UniformInducing</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#Set.sUnion\">⋃₀</a> <span class=\"fn\">𝔖</span></span>)</span>.restrict</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">F</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Ascoli.lean#L212-L240","name":"EquicontinuousOn.comap_uniformOnFun_eq","line":212,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Ascoli.html#EquicontinuousOn.comap_uniformOnFun_eq","doc":"Let `X` be a topological space, `𝔖` a family of compact subsets of `X`, `α` a uniform space,\nand `F : ι → (X → α)` a family which is equicontinuous on each `K ∈ 𝔖`. Then, the uniform\nstructures of uniform convergence on `𝔖` and pointwise convergence on `⋃₀ 𝔖` induce the same\nuniform structure on `ι`.\n\nIn particular, pointwise convergence and compact convergence coincide on an equicontinuous\nsubset of `X → α`.\n\nConsider using `EquicontinuousOn.uniformInducing_uniformOnFun_iff_pi'` and\n`EquicontinuousOn.inducing_uniformOnFun_iff_pi'` instead to avoid rewriting instances,\nas well as their unprimed versions in case `𝔖` covers `X`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Ascoli.html#EquicontinuousOn.comap_uniformOnFun_eq\"><span class=\"name\">EquicontinuousOn</span>.<span class=\"name\">comap_uniformOnFun_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝔖 : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝔖_compact : <span class=\"fn\">∀ <span class=\"fn\">K</span> ∈ <span class=\"fn\">𝔖</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(F_eqcont : <span class=\"fn\">∀ <span class=\"fn\">K</span> ∈ <span class=\"fn\">𝔖</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace.comap\">UniformSpace.comap</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/UniformConvergenceTopology.html#UniformOnFun.uniformSpace\">UniformOnFun.uniformSpace</a> <span class=\"fn\">X</span> <span class=\"fn\">α</span> <span class=\"fn\">𝔖</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace.comap\">UniformSpace.comap</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#Set.sUnion\">⋃₀</a> <span class=\"fn\">𝔖</span></span>)</span>.restrict</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">F</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Pi.html#Pi.uniformSpace\">Pi.uniformSpace</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#Set.sUnion\">⋃₀</a> <span class=\"fn\">𝔖</span></span>)</span></span>) =&gt; <span class=\"fn\">α</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Ascoli.lean#L163-L199","name":"Equicontinuous.tendsto_uniformFun_iff_pi","line":163,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Ascoli.html#Equicontinuous.tendsto_uniformFun_iff_pi","doc":"Let `X` be a compact topological space, `α` a uniform space, `F : ι → (X → α)` an\nequicontinuous family, and `ℱ` a filter on `ι`. Then, `F` tends *uniformly* to `f : X → α` along\n`ℱ` iff it tends to `f` *pointwise* along `ℱ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Ascoli.html#Equicontinuous.tendsto_uniformFun_iff_pi\"><span class=\"name\">Equicontinuous</span>.<span class=\"name\">tendsto_uniformFun_iff_pi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F_eqcont : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Equicontinuous\">Equicontinuous</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ℱ : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">UniformFun.ofFun</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">F</span></span>)</span> <span class=\"fn\">ℱ</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">UniformFun.ofFun</span> <span class=\"fn\">f</span></span>)</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">F</span> <span class=\"fn\">ℱ</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">f</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Ascoli.lean#L152-L158","name":"Equicontinuous.inducing_uniformFun_iff_pi","line":152,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Ascoli.html#Equicontinuous.inducing_uniformFun_iff_pi","doc":"Let `X` be a compact topological space, `α` a uniform space, and `F : ι → (X → α)` an\nequicontinuous family. Then, the topologies of uniform convergence and pointwise convergence induce\nthe same topology on `ι`.\n\nIn other words, pointwise convergence and uniform convergence coincide on an equicontinuous\nsubset of `X → α`.\n\nThis is a consequence of `Equicontinuous.comap_uniformFun_eq`, stated in terms of `Inducing`\nfor convenuence. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Ascoli.html#Equicontinuous.inducing_uniformFun_iff_pi\"><span class=\"name\">Equicontinuous</span>.<span class=\"name\">inducing_uniformFun_iff_pi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F_eqcont : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Equicontinuous\">Equicontinuous</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Inducing\">Inducing</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">UniformFun.ofFun</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">F</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Inducing\">Inducing</a> <span class=\"fn\">F</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Ascoli.lean#L136-L141","name":"Equicontinuous.uniformInducing_uniformFun_iff_pi","line":136,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Ascoli.html#Equicontinuous.uniformInducing_uniformFun_iff_pi","doc":"Let `X` be a compact topological space, `α` a uniform space, and `F : ι → (X → α)` an\nequicontinuous family. Then, the uniform structures of uniform convergence and pointwise\nconvergence induce the same uniform structure on `ι`.\n\nIn other words, pointwise convergence and uniform convergence coincide on an equicontinuous\nsubset of `X → α`.\n\nThis is a version of `Equicontinuous.comap_uniformFun_eq` stated in terms of `UniformInducing`\nfor convenuence. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Ascoli.html#Equicontinuous.uniformInducing_uniformFun_iff_pi\"><span class=\"name\">Equicontinuous</span>.<span class=\"name\">uniformInducing_uniformFun_iff_pi</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F_eqcont : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Equicontinuous\">Equicontinuous</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/UniformEmbedding.html#UniformInducing\">UniformInducing</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">UniformFun.ofFun</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">F</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/UniformEmbedding.html#UniformInducing\">UniformInducing</a> <span class=\"fn\">F</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Ascoli.lean#L85-L125","name":"Equicontinuous.comap_uniformFun_eq","line":85,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Ascoli.html#Equicontinuous.comap_uniformFun_eq","doc":"Let `X` be a compact topological space, `α` a uniform space, and `F : ι → (X → α)` an\nequicontinuous family. Then, the uniform structures of uniform convergence and pointwise\nconvergence induce the same uniform structure on `ι`.\n\nIn other words, pointwise convergence and uniform convergence coincide on an equicontinuous\nsubset of `X → α`.\n\nConsider using `Equicontinuous.uniformInducing_uniformFun_iff_pi` and\n`Equicontinuous.inducing_uniformFun_iff_pi` instead, to avoid rewriting instances. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Ascoli.html#Equicontinuous.comap_uniformFun_eq\"><span class=\"name\">Equicontinuous</span>.<span class=\"name\">comap_uniformFun_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F_eqcont : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Equicontinuous\">Equicontinuous</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace.comap\">UniformSpace.comap</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/UniformConvergenceTopology.html#UniformFun.uniformSpace\">UniformFun.uniformSpace</a> <span class=\"fn\">X</span> <span class=\"fn\">α</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace.comap\">UniformSpace.comap</a> <span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Pi.html#Pi.uniformSpace\">Pi.uniformSpace</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">X</span>) =&gt; <span class=\"fn\">α</span></span></span>)</span></span></span></div></div>"}]}