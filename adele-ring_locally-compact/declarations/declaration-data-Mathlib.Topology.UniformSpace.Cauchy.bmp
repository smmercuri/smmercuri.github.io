{"name":"Mathlib.Topology.UniformSpace.Cauchy","instances":[{"typeNames":["Prod"],"name":"CompleteSpace.prod","className":"CompleteSpace"},{"typeNames":["AddOpposite"],"name":"CompleteSpace.addOpposite","className":"CompleteSpace"},{"typeNames":["MulOpposite"],"name":"CompleteSpace.mulOpposite","className":"CompleteSpace"},{"typeNames":[],"name":"complete_of_compact","className":"CompleteSpace"},{"typeNames":[],"name":"UniformSpace.firstCountableTopology","className":"FirstCountableTopology"}],"imports":["Init","Mathlib.Topology.Algebra.Constructions","Mathlib.Topology.Bases","Mathlib.Topology.UniformSpace.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L771-L792","name":"UniformSpace.secondCountable_of_separable","line":771,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#UniformSpace.secondCountable_of_separable","doc":"A separable uniform space with countably generated uniformity filter is second countable:\none obtains a countable basis by taking the balls centered at points in a dense subset,\nand with rational \"radii\" from a countable open symmetric antitone basis of `ùì§ Œ±`. We do not\nregister this as an instance, as there is already an instance going in the other direction\nfrom second countable spaces to separable spaces, and we want to avoid loops. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#UniformSpace.secondCountable_of_separable\"><span class=\"name\">UniformSpace</span>.<span class=\"name\">secondCountable_of_separable</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(Œ± : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>)</span>.IsCountablyGenerated</span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Bases.html#TopologicalSpace.SeparableSpace\">TopologicalSpace.SeparableSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Bases.html#SecondCountableTopology\">SecondCountableTopology</a> <span class=\"fn\">Œ±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L763-L764","name":"UniformSpace.firstCountableTopology","line":763,"kind":"instance","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#UniformSpace.firstCountableTopology","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#UniformSpace.firstCountableTopology\"><span class=\"name\">UniformSpace</span>.<span class=\"name\">firstCountableTopology</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(Œ± : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>)</span>.IsCountablyGenerated</span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Bases.html#FirstCountableTopology\">FirstCountableTopology</a> <span class=\"fn\">Œ±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L754-L758","name":"UniformSpace.complete_of_cauchySeq_tendsto","line":754,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#UniformSpace.complete_of_cauchySeq_tendsto","doc":"A sequentially complete uniform space with a countable basis of the uniformity filter is\ncomplete. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#UniformSpace.complete_of_cauchySeq_tendsto\"><span class=\"name\">UniformSpace</span>.<span class=\"name\">complete_of_cauchySeq_tendsto</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>)</span>.IsCountablyGenerated</span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H' : <span class=\"fn\">‚àÄ (<span class=\"fn\">u</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\">Œ±</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">u</span></span> ‚Üí <span class=\"fn\">‚àÉ (<span class=\"fn\">a</span> : <span class=\"fn\">Œ±</span>), <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">u</span> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">a</span></span>)</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L741-L750","name":"UniformSpace.complete_of_convergent_controlled_sequences","line":741,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#UniformSpace.complete_of_convergent_controlled_sequences","doc":"A uniform space is complete provided that (a) its uniformity filter has a countable basis;\n(b) any sequence satisfying a \"controlled\" version of the Cauchy condition converges. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#UniformSpace.complete_of_convergent_controlled_sequences\"><span class=\"name\">UniformSpace</span>.<span class=\"name\">complete_of_convergent_controlled_sequences</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>)</span>.IsCountablyGenerated</span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(U_mem : <span class=\"fn\">‚àÄ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(HU : <span class=\"fn\">‚àÄ (<span class=\"fn\">u</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\">Œ±</span></span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">‚àÄ (<span class=\"fn\">N </span><span class=\"fn\">m </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">m</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">n</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">m</span></span>, <span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">n</span></span>)</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">N</span></span></span></span></span></span>)</span> ‚Üí <span class=\"fn\">‚àÉ (<span class=\"fn\">a</span> : <span class=\"fn\">Œ±</span>), <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">u</span> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">a</span></span>)</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L717-L727","name":"SequentiallyComplete.le_nhds_of_seq_tendsto_nhds","line":717,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.le_nhds_of_seq_tendsto_nhds","doc":"If the sequence `SequentiallyComplete.seq` converges to `a`, then `f ‚â§ ùìù a`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.le_nhds_of_seq_tendsto_nhds\"><span class=\"name\">SequentiallyComplete</span>.<span class=\"name\">le_nhds_of_seq_tendsto_nhds</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span></span>)</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U_mem : <span class=\"fn\">‚àÄ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(U_le : <span class=\"fn\">‚àÄ <span class=\"fn\">s</span> ‚àà <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>, <span class=\"fn\">‚àÉ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">s</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">‚¶Éa : <span class=\"fn\">Œ±</span>‚¶Ñ</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.seq\">SequentiallyComplete.seq</a> <span class=\"fn\">hf</span> <span class=\"fn\">U_mem</span></span>)</span> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">a</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L713-L714","name":"SequentiallyComplete.seq_is_cauchySeq","line":713,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.seq_is_cauchySeq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.seq_is_cauchySeq\"><span class=\"name\">SequentiallyComplete</span>.<span class=\"name\">seq_is_cauchySeq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span></span>)</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U_mem : <span class=\"fn\">‚àÄ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(U_le : <span class=\"fn\">‚àÄ <span class=\"fn\">s</span> ‚àà <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>, <span class=\"fn\">‚àÉ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">s</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.seq\">SequentiallyComplete.seq</a> <span class=\"fn\">hf</span> <span class=\"fn\">U_mem</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L709-L711","name":"SequentiallyComplete.seq_pair_mem","line":709,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.seq_pair_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.seq_pair_mem\"><span class=\"name\">SequentiallyComplete</span>.<span class=\"name\">seq_pair_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span></span>)</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U_mem : <span class=\"fn\">‚àÄ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">‚¶ÉN : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>‚¶Ñ</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">‚¶Ém : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>‚¶Ñ</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">‚¶Én : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>‚¶Ñ</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.seq\">SequentiallyComplete.seq</a> <span class=\"fn\">hf</span> <span class=\"fn\">U_mem</span> <span class=\"fn\">m</span></span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.seq\">SequentiallyComplete.seq</a> <span class=\"fn\">hf</span> <span class=\"fn\">U_mem</span> <span class=\"fn\">n</span></span>)</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">N</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L706-L707","name":"SequentiallyComplete.seq_mem","line":706,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.seq_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.seq_mem\"><span class=\"name\">SequentiallyComplete</span>.<span class=\"name\">seq_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span></span>)</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U_mem : <span class=\"fn\">‚àÄ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.seq\">SequentiallyComplete.seq</a> <span class=\"fn\">hf</span> <span class=\"fn\">U_mem</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.setSeq\">SequentiallyComplete.setSeq</a> <span class=\"fn\">hf</span> <span class=\"fn\">U_mem</span> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L703-L704","name":"SequentiallyComplete.seq","line":703,"kind":"def","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.seq","doc":"A sequence of points such that `seq n ‚àà setSeq n`. Here `setSeq` is an antitone\nsequence of sets `setSeq n ‚àà f` with diameters controlled by a given sequence\nof entourages. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.seq\"><span class=\"name\">SequentiallyComplete</span>.<span class=\"name\">seq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span></span>)</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U_mem : <span class=\"fn\">‚àÄ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">Œ±</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L694-L698","name":"SequentiallyComplete.setSeq_prod_subset","line":694,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.setSeq_prod_subset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.setSeq_prod_subset\"><span class=\"name\">SequentiallyComplete</span>.<span class=\"name\">setSeq_prod_subset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span></span>)</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U_mem : <span class=\"fn\">‚àÄ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.setSeq\">SequentiallyComplete.setSeq</a> <span class=\"fn\">hf</span> <span class=\"fn\">U_mem</span> <span class=\"fn\">m</span></span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">√óÀ¢</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.setSeq\">SequentiallyComplete.setSeq</a> <span class=\"fn\">hf</span> <span class=\"fn\">U_mem</span> <span class=\"fn\">n</span></span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">N</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L691-L692","name":"SequentiallyComplete.setSeq_sub_aux","line":691,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.setSeq_sub_aux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.setSeq_sub_aux\"><span class=\"name\">SequentiallyComplete</span>.<span class=\"name\">setSeq_sub_aux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span></span>)</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U_mem : <span class=\"fn\">‚àÄ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.setSeq\">SequentiallyComplete.setSeq</a> <span class=\"fn\">hf</span> <span class=\"fn\">U_mem</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">‚Üë<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.setSeqAux\">SequentiallyComplete.setSeqAux</a> <span class=\"fn\">hf</span> <span class=\"fn\">U_mem</span> <span class=\"fn\">n</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L688-L689","name":"SequentiallyComplete.setSeq_mono","line":688,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.setSeq_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.setSeq_mono\"><span class=\"name\">SequentiallyComplete</span>.<span class=\"name\">setSeq_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span></span>)</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U_mem : <span class=\"fn\">‚àÄ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">‚¶Ém : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>‚¶Ñ</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">‚¶Én : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>‚¶Ñ</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.setSeq\">SequentiallyComplete.setSeq</a> <span class=\"fn\">hf</span> <span class=\"fn\">U_mem</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.setSeq\">SequentiallyComplete.setSeq</a> <span class=\"fn\">hf</span> <span class=\"fn\">U_mem</span> <span class=\"fn\">m</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L685-L686","name":"SequentiallyComplete.setSeq_mem","line":685,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.setSeq_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.setSeq_mem\"><span class=\"name\">SequentiallyComplete</span>.<span class=\"name\">setSeq_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span></span>)</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U_mem : <span class=\"fn\">‚àÄ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.setSeq\">SequentiallyComplete.setSeq</a> <span class=\"fn\">hf</span> <span class=\"fn\">U_mem</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L682-L683","name":"SequentiallyComplete.setSeq","line":682,"kind":"def","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.setSeq","doc":"Given a Cauchy filter `f` and a sequence `U` of entourages, `set_seq` provides\nan antitone sequence of sets `s n ‚àà f` such that `s n √óÀ¢ s n ‚äÜ U`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.setSeq\"><span class=\"name\">SequentiallyComplete</span>.<span class=\"name\">setSeq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span></span>)</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U_mem : <span class=\"fn\">‚àÄ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L676-L678","name":"SequentiallyComplete.setSeqAux","line":676,"kind":"def","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.setSeqAux","doc":"An auxiliary sequence of sets approximating a Cauchy filter. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#SequentiallyComplete.setSeqAux\"><span class=\"name\">SequentiallyComplete</span>.<span class=\"name\">setSeqAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span></span>)</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U_mem : <span class=\"fn\">‚àÄ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{ <span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span> // <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">√óÀ¢</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">n</span></span></span></span> }</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L641-L650","name":"CauchySeq.totallyBounded_range","line":641,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.totallyBounded_range","doc":"Every Cauchy sequence over `‚Ñï` is totally bounded. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.totallyBounded_range\"><span class=\"name\">CauchySeq</span>.<span class=\"name\">totallyBounded_range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <span class=\"fn\">s</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L636-L638","name":"isCompact_of_totallyBounded_isClosed","line":636,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#isCompact_of_totallyBounded_isClosed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#isCompact_of_totallyBounded_isClosed\"><span class=\"name\">isCompact_of_totallyBounded_isClosed</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ht : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L632-L634","name":"complete_of_compact","line":632,"kind":"instance","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#complete_of_compact","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#complete_of_compact\"><span class=\"name\">complete_of_compact</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#CompactSpace\">CompactSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L628-L629","name":"IsCompact.isComplete","line":628,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#IsCompact.isComplete","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#IsCompact.isComplete\"><span class=\"name\">IsCompact</span>.<span class=\"name\">isComplete</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#IsComplete\">IsComplete</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L625-L626","name":"IsCompact.totallyBounded","line":625,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#IsCompact.totallyBounded","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#IsCompact.totallyBounded\"><span class=\"name\">IsCompact</span>.<span class=\"name\">totallyBounded</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L612-L623","name":"isCompact_iff_totallyBounded_isComplete","line":612,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#isCompact_iff_totallyBounded_isComplete","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#isCompact_iff_totallyBounded_isComplete\"><span class=\"name\">isCompact_iff_totallyBounded_isComplete</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#IsComplete\">IsComplete</a> <span class=\"fn\">s</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L606-L610","name":"totallyBounded_iff_ultrafilter","line":606,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_iff_ultrafilter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_iff_ultrafilter\"><span class=\"name\">totallyBounded_iff_ultrafilter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Ultrafilter.html#Ultrafilter\">Ultrafilter</a> <span class=\"fn\">Œ±</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.principal\">Filter.principal</a> <span class=\"fn\">s</span></span></span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">‚Üë<span class=\"fn\">f</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L586-L604","name":"totallyBounded_iff_filter","line":586,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_iff_filter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_iff_filter\"><span class=\"name\">totallyBounded_iff_filter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.NeBot</span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.principal\">Filter.principal</a> <span class=\"fn\">s</span></span></span> ‚Üí <span class=\"fn\">‚àÉ <span class=\"fn\">c</span> ‚â§ <span class=\"fn\">f</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">c</span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L574-L584","name":"Ultrafilter.cauchy_of_totallyBounded","line":574,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#Ultrafilter.cauchy_of_totallyBounded","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Ultrafilter.cauchy_of_totallyBounded\"><span class=\"name\">Ultrafilter</span>.<span class=\"name\">cauchy_of_totallyBounded</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Ultrafilter.html#Ultrafilter\">Ultrafilter</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.principal\">Filter.principal</a> <span class=\"fn\">s</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">‚Üë<span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L562-L572","name":"TotallyBounded.image","line":562,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded.image","doc":"The image of a totally bounded set under a uniformly continuous map is totally bounded. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded.image\"><span class=\"name\">TotallyBounded</span>.<span class=\"name\">image</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">s</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L559-L559","name":"TotallyBounded.insert","line":559,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded.insert","doc":"**Alias** of the reverse direction of `totallyBounded_insert`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded.insert\"><span class=\"name\">TotallyBounded</span>.<span class=\"name\">insert</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">s</span></span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Insert.insert\">insert</a> <span class=\"fn\">a</span> <span class=\"fn\">s</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L555-L557","name":"totallyBounded_insert","line":555,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_insert","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_insert\"><span class=\"name\">totallyBounded_insert</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Insert.insert\">insert</a> <span class=\"fn\">a</span> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L550-L552","name":"TotallyBounded.union","line":550,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded.union","doc":"The union of two totally bounded sets is totally bounded. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded.union\"><span class=\"name\">TotallyBounded</span>.<span class=\"name\">union</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ht : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Core.html#Union.union\">‚à™</a> <span class=\"fn\">t</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L544-L547","name":"totallyBounded_union","line":544,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_union","doc":"The union of two sets is totally bounded\nif and only if each of the two sets is totally bounded."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_union\"><span class=\"name\">totallyBounded_union</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Core.html#Union.union\">‚à™</a> <span class=\"fn\">t</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">t</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L539-L539","name":"totallyBounded_empty","line":539,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_empty\"><span class=\"name\">totallyBounded_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">‚àÖ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L536-L536","name":"totallyBounded_singleton","line":536,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_singleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_singleton\"><span class=\"name\">totallyBounded_singleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">{<span class=\"fn\">a</span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L531-L533","name":"Set.Subsingleton.totallyBounded","line":531,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#Set.Subsingleton.totallyBounded","doc":"A subsingleton is totally bounded. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Set.Subsingleton.totallyBounded\"><span class=\"name\">Set</span>.<span class=\"name\">Subsingleton</span>.<span class=\"name\">totallyBounded</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\">s</span>.Subsingleton</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L527-L528","name":"Set.Finite.totallyBounded","line":527,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#Set.Finite.totallyBounded","doc":"A finite set is totally bounded. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Set.Finite.totallyBounded\"><span class=\"name\">Set</span>.<span class=\"name\">Finite</span>.<span class=\"name\">totallyBounded</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\">s</span>.Finite</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L522-L524","name":"totallyBounded_sUnion","line":522,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_sUnion","doc":"A union of a finite family of sets is totally bounded\nif and only if each set of the family is totally bounded. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_sUnion\"><span class=\"name\">totallyBounded_sUnion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hS : <span class=\"fn\"><span class=\"fn\">S</span>.Finite</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/SetNotation.html#Set.sUnion\">‚ãÉ‚ÇÄ</a> <span class=\"fn\">S</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ <span class=\"fn\">s</span> ‚àà <span class=\"fn\">S</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">s</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L515-L518","name":"totallyBounded_biUnion","line":515,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_biUnion","doc":"A union indexed by a finite set is totally bounded\nif and only if each set of the family is totally bounded. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_biUnion\"><span class=\"name\">totallyBounded_biUnion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œπ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hI : <span class=\"fn\"><span class=\"fn\">I</span>.Finite</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">(<span class=\"fn\">‚ãÉ <span class=\"fn\">i</span> ‚àà <span class=\"fn\">I</span>, <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ <span class=\"fn\">i</span> ‚àà <span class=\"fn\">I</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L505-L511","name":"totallyBounded_iUnion","line":505,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_iUnion","doc":"A finite indexed union is totally bounded\nif and only if each set of the family is totally bounded. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_iUnion\"><span class=\"name\">totallyBounded_iUnion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">Œπ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">(<span class=\"fn\">‚ãÉ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L499-L500","name":"totallyBounded_closure","line":499,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_closure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_closure\"><span class=\"name\">totallyBounded_closure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#closure\">closure</a> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L491-L496","name":"TotallyBounded.closure","line":491,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded.closure","doc":"The closure of a totally bounded set is totally bounded. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded.closure\"><span class=\"name\">TotallyBounded</span>.<span class=\"name\">closure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#closure\">closure</a> <span class=\"fn\">s</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L487-L488","name":"totallyBounded_subset","line":487,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_subset","doc":"**Alias** of `TotallyBounded.subset`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_subset\"><span class=\"name\">totallyBounded_subset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s‚ÇÅ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s‚ÇÇ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\">s‚ÇÅ</span> <a href=\"./Init/Core.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">s‚ÇÇ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">s‚ÇÇ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">s‚ÇÅ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L482-L485","name":"TotallyBounded.subset","line":482,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded.subset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded.subset\"><span class=\"name\">TotallyBounded</span>.<span class=\"name\">subset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s‚ÇÅ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s‚ÇÇ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\">s‚ÇÅ</span> <a href=\"./Init/Core.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">s‚ÇÇ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">s‚ÇÇ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">s‚ÇÅ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L476-L480","name":"totallyBounded_of_forall_symm","line":476,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_of_forall_symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_of_forall_symm\"><span class=\"name\">totallyBounded_of_forall_symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">‚àÄ <span class=\"fn\">V</span> ‚àà <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#SymmetricRel\">SymmetricRel</a> <span class=\"fn\">V</span></span> ‚Üí <span class=\"fn\">‚àÉ (<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">t</span>.Finite</span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Core.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">‚ãÉ <span class=\"fn\">y</span> ‚àà <span class=\"fn\">t</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace.ball\">UniformSpace.ball</a> <span class=\"fn\">y</span> <span class=\"fn\">V</span></span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L470-L474","name":"Filter.HasBasis.totallyBounded_iff","line":470,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#Filter.HasBasis.totallyBounded_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Filter.HasBasis.totallyBounded_iff\"><span class=\"name\">Filter</span>.<span class=\"name\">HasBasis</span>.<span class=\"name\">totallyBounded_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span></span>)</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>)</span>.HasBasis</span> <span class=\"fn\">p</span> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">i</span></span> ‚Üí <span class=\"fn\">‚àÉ (<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">t</span>.Finite</span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Core.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">‚ãÉ <span class=\"fn\">y</span> ‚àà <span class=\"fn\">t</span>, <span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span> | <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">x</span>, <span class=\"fn\">y</span>)</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">i</span></span></span>}</span></span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L465-L468","name":"totallyBounded_iff_subset","line":465,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_iff_subset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#totallyBounded_iff_subset\"><span class=\"name\">totallyBounded_iff_subset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ <span class=\"fn\">d</span> ‚àà <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>, <span class=\"fn\">‚àÉ <span class=\"fn\">t</span> ‚äÜ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">t</span>.Finite</span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Core.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">‚ãÉ <span class=\"fn\">y</span> ‚àà <span class=\"fn\">t</span>, <span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span> | <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">x</span>, <span class=\"fn\">y</span>)</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">d</span></span>}</span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L449-L463","name":"TotallyBounded.exists_subset","line":449,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded.exists_subset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded.exists_subset\"><span class=\"name\">TotallyBounded</span>.<span class=\"name\">exists_subset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\">TotallyBounded</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">‚àÉ <span class=\"fn\">t</span> ‚äÜ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">t</span>.Finite</span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Core.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">‚ãÉ <span class=\"fn\">y</span> ‚àà <span class=\"fn\">t</span>, <span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span> | <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">x</span>, <span class=\"fn\">y</span>)</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">U</span></span>}</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L446-L447","name":"TotallyBounded","line":446,"kind":"def","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded","doc":"A set `s` is totally bounded if for every entourage `d` there is a finite\nset of points `t` such that every element of `s` is `d`-near to some element of `t`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#TotallyBounded\"><span class=\"name\">TotallyBounded</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L439-L442","name":"IsClosed.isComplete","line":439,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#IsClosed.isComplete","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#IsClosed.isComplete\"><span class=\"name\">IsClosed</span>.<span class=\"name\">isComplete</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#IsComplete\">IsComplete</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L435-L437","name":"CauchySeq.tendsto_limUnder","line":435,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.tendsto_limUnder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.tendsto_limUnder\"><span class=\"name\">CauchySeq</span>.<span class=\"name\">tendsto_limUnder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">u</span> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#limUnder\">limUnder</a> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">u</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L431-L433","name":"Cauchy.le_nhds_lim","line":431,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy.le_nhds_lim","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy.le_nhds_lim\"><span class=\"name\">Cauchy</span>.<span class=\"name\">le_nhds_lim</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#lim\">lim</a> <span class=\"fn\">f</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L426-L429","name":"cauchySeq_tendsto_of_isComplete","line":426,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchySeq_tendsto_of_isComplete","doc":"If `K` is a complete subset, then any cauchy sequence in `K` converges to a point in `K` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchySeq_tendsto_of_isComplete\"><span class=\"name\">cauchySeq_tendsto_of_isComplete</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h‚ÇÅ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#IsComplete\">IsComplete</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h‚ÇÇ : <span class=\"fn\">‚àÄ (<span class=\"fn\">n</span> : <span class=\"fn\">Œ≤</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">K</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h‚ÇÉ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">‚àÉ <span class=\"fn\">v</span> ‚àà <span class=\"fn\">K</span>, <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">u</span> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">v</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L421-L423","name":"cauchySeq_tendsto_of_complete","line":421,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchySeq_tendsto_of_complete","doc":"A Cauchy sequence in a complete space converges "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchySeq_tendsto_of_complete\"><span class=\"name\">cauchySeq_tendsto_of_complete</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">‚àÉ (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>), <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">u</span> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">x</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L416-L418","name":"cauchy_map_iff_exists_tendsto","line":416,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_map_iff_exists_tendsto","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_map_iff_exists_tendsto\"><span class=\"name\">cauchy_map_iff_exists_tendsto</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">l</span>.NeBot</span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.map\">Filter.map</a> <span class=\"fn\">f</span> <span class=\"fn\">l</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÉ (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>), <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">f</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">x</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L412-L414","name":"cauchy_iff_exists_le_nhds","line":412,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_iff_exists_le_nhds","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_iff_exists_le_nhds\"><span class=\"name\">cauchy_iff_exists_le_nhds</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">l</span>.NeBot</span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">l</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÉ (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>), <span class=\"fn\"><span class=\"fn\">l</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">x</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L408-L410","name":"completeSpace_iff_ultrafilter","line":408,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#completeSpace_iff_ultrafilter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#completeSpace_iff_ultrafilter\"><span class=\"name\">completeSpace_iff_ultrafilter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ±</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Ultrafilter.html#Ultrafilter\">Ultrafilter</a> <span class=\"fn\">Œ±</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">‚Üë<span class=\"fn\">l</span></span></span> ‚Üí <span class=\"fn\">‚àÉ (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>), <span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">l</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">x</span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L405-L406","name":"completeSpace_iff_isComplete_univ","line":405,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#completeSpace_iff_isComplete_univ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#completeSpace_iff_isComplete_univ\"><span class=\"name\">completeSpace_iff_isComplete_univ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ±</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#IsComplete\">IsComplete</a> <span class=\"fn\">Set.univ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L402-L403","name":"completeSpace_of_isComplete_univ","line":402,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#completeSpace_of_isComplete_univ","doc":"If `univ` is complete, the space is a complete space "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#completeSpace_of_isComplete_univ\"><span class=\"name\">completeSpace_of_isComplete_univ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#IsComplete\">IsComplete</a> <span class=\"fn\">Set.univ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L395-L399","name":"CompleteSpace.mulOpposite","line":395,"kind":"instance","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace.mulOpposite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace.mulOpposite\"><span class=\"name\">CompleteSpace</span>.<span class=\"name\">mulOpposite</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\"><span class=\"fn\">Œ±</span><a href=\"./Mathlib/Algebra/Opposites.html#MulOpposite\">·µê·µí·µñ</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L394-L394","name":"CompleteSpace.addOpposite","line":394,"kind":"instance","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace.addOpposite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace.addOpposite\"><span class=\"name\">CompleteSpace</span>.<span class=\"name\">addOpposite</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\"><span class=\"fn\">Œ±</span><a href=\"./Mathlib/Algebra/Opposites.html#AddOpposite\">·µÉ·µí·µñ</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L394-L394","name":"CompleteSpace.addOpposite.match_1","line":394,"kind":"def","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace.addOpposite.match_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace.addOpposite.match_1\"><span class=\"name\">CompleteSpace</span>.<span class=\"name\">addOpposite</span>.<span class=\"name\">match_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">‚àÄ {<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\"><span class=\"fn\">Œ±</span><a href=\"./Mathlib/Algebra/Opposites.html#AddOpposite\">·µÉ·µí·µñ</a></span></span>} (<span class=\"fn\">motive</span> : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">‚àÉ (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.map\">Filter.map</a> <span class=\"fn\">AddOpposite.unop</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">x</span></span></span></span>)</span> ‚Üí <a href=\"./foundational_types.html\">Prop</a></span>)\n  (<span class=\"fn\">x</span> : <span class=\"fn\">‚àÉ (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.map\">Filter.map</a> <span class=\"fn\">AddOpposite.unop</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">x</span></span></span></span>),\n  <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">‚àÄ (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>) (<span class=\"fn\">hx</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.map\">Filter.map</a> <span class=\"fn\">AddOpposite.unop</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">x</span></span></span>), <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">‚ãØ</span></span></span>)</span> ‚Üí <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L390-L392","name":"completeSpace_prod_of_nonempty","line":390,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#completeSpace_prod_of_nonempty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#completeSpace_prod_of_nonempty\"><span class=\"name\">completeSpace_prod_of_nonempty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ≤</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ±</span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ≤</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L383-L388","name":"CompleteSpace.snd_of_prod","line":383,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace.snd_of_prod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace.snd_of_prod\"><span class=\"name\">CompleteSpace</span>.<span class=\"name\">snd_of_prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ≤</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ≤</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L376-L381","name":"CompleteSpace.fst_of_prod","line":376,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace.fst_of_prod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace.fst_of_prod\"><span class=\"name\">CompleteSpace</span>.<span class=\"name\">fst_of_prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ≤</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L369-L374","name":"CompleteSpace.prod","line":369,"kind":"instance","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace.prod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace.prod\"><span class=\"name\">CompleteSpace</span>.<span class=\"name\">prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ≤</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L364-L367","name":"complete_univ","line":364,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#complete_univ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#complete_univ\"><span class=\"name\">complete_univ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#IsComplete\">IsComplete</a> <span class=\"fn\">Set.univ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L362-L362","name":"CompleteSpace.complete","line":362,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace.complete","doc":"In a complete uniform space, every Cauchy filter converges. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace.complete\"><span class=\"name\">CompleteSpace</span>.<span class=\"name\">complete</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span> ‚Üí <span class=\"fn\">‚àÉ (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>), <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">x</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L360-L360","name":"CompleteSpace.mk","line":360,"kind":"ctor","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace.mk\"><span class=\"name\">CompleteSpace</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(complete : <span class=\"fn\">‚àÄ {<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span> ‚Üí <span class=\"fn\">‚àÉ (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>), <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">x</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">Œ±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L360-L362","name":"CompleteSpace","line":360,"kind":"class","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace","doc":"A complete space is defined here using uniformities. A uniform space\nis complete if every Cauchy filter converges. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\"><span class=\"name\">CompleteSpace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(Œ± : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L338-L356","name":"isComplete_iUnion_separated","line":338,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#isComplete_iUnion_separated","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#isComplete_iUnion_separated\"><span class=\"name\">isComplete_iUnion_separated</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#IsComplete\">IsComplete</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><span class=\"fn\">U</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hd : <span class=\"fn\">‚àÄ (<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\">‚àÄ <span class=\"fn\">x</span> ‚àà <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>, <span class=\"fn\">‚àÄ <span class=\"fn\">y</span> ‚àà <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">j</span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">x</span>, <span class=\"fn\">y</span>)</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">U</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">j</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#IsComplete\">IsComplete</a> <span class=\"fn\">(<span class=\"fn\">‚ãÉ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L331-L336","name":"IsComplete.union","line":331,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#IsComplete.union","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#IsComplete.union\"><span class=\"name\">IsComplete</span>.<span class=\"name\">union</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#IsComplete\">IsComplete</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ht : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#IsComplete\">IsComplete</a> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#IsComplete\">IsComplete</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Core.html#Union.union\">‚à™</a> <span class=\"fn\">t</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L327-L329","name":"isComplete_iff_ultrafilter'","line":327,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#isComplete_iff_ultrafilter'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#isComplete_iff_ultrafilter'\"><span class=\"name\">isComplete_iff_ultrafilter'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#IsComplete\">IsComplete</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Ultrafilter.html#Ultrafilter\">Ultrafilter</a> <span class=\"fn\">Œ±</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">‚Üë<span class=\"fn\">l</span></span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">l</span></span> ‚Üí <span class=\"fn\">‚àÉ <span class=\"fn\">x</span> ‚àà <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">l</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">x</span></span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L320-L325","name":"isComplete_iff_ultrafilter","line":320,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#isComplete_iff_ultrafilter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#isComplete_iff_ultrafilter\"><span class=\"name\">isComplete_iff_ultrafilter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#IsComplete\">IsComplete</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Ultrafilter.html#Ultrafilter\">Ultrafilter</a> <span class=\"fn\">Œ±</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">‚Üë<span class=\"fn\">l</span></span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">l</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.principal\">Filter.principal</a> <span class=\"fn\">s</span></span></span> ‚Üí <span class=\"fn\">‚àÉ <span class=\"fn\">x</span> ‚àà <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">‚Üë<span class=\"fn\">l</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">x</span></span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L315-L318","name":"isComplete_iff_clusterPt","line":315,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#isComplete_iff_clusterPt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#isComplete_iff_clusterPt\"><span class=\"name\">isComplete_iff_clusterPt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#IsComplete\">IsComplete</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">l</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.principal\">Filter.principal</a> <span class=\"fn\">s</span></span></span> ‚Üí <span class=\"fn\">‚àÉ <span class=\"fn\">x</span> ‚àà <span class=\"fn\">s</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ClusterPt\">ClusterPt</a> <span class=\"fn\">x</span> <span class=\"fn\">l</span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L302-L313","name":"cauchySeq_of_controlled","line":302,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchySeq_of_controlled","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchySeq_of_controlled\"><span class=\"name\">cauchySeq_of_controlled</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#SemilatticeSup\">SemilatticeSup</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(U : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\">‚àÄ <span class=\"fn\">s</span> ‚àà <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>, <span class=\"fn\">‚àÉ (<span class=\"fn\">n</span> : <span class=\"fn\">Œ≤</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">s</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\">‚àÄ ‚¶É<span class=\"fn\">N </span><span class=\"fn\">m </span><span class=\"fn\">n</span> : <span class=\"fn\">Œ≤</span>‚¶Ñ, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">m</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">n</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">m</span></span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span>)</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">U</span> <span class=\"fn\">N</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L292-L300","name":"Filter.HasBasis.cauchySeq_iff'","line":292,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#Filter.HasBasis.cauchySeq_iff'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Filter.HasBasis.cauchySeq_iff'\"><span class=\"name\">Filter</span>.<span class=\"name\">HasBasis</span>.<span class=\"name\">cauchySeq_iff'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≥ : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#SemilatticeSup\">SemilatticeSup</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\">Œ≥</span> ‚Üí <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">Œ≥</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span></span>)</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>)</span>.HasBasis</span> <span class=\"fn\">p</span> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">u</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œ≥</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">i</span></span> ‚Üí <span class=\"fn\">‚àÉ (<span class=\"fn\">N</span> : <span class=\"fn\">Œ≤</span>), <span class=\"fn\">‚àÄ <span class=\"fn\">n</span> ‚â• <span class=\"fn\">N</span>, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">n</span></span>, <span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">N</span></span>)</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L284-L290","name":"Filter.HasBasis.cauchySeq_iff","line":284,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#Filter.HasBasis.cauchySeq_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Filter.HasBasis.cauchySeq_iff\"><span class=\"name\">Filter</span>.<span class=\"name\">HasBasis</span>.<span class=\"name\">cauchySeq_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≥ : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#SemilatticeSup\">SemilatticeSup</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\">Œ≥</span> ‚Üí <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">Œ≥</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span></span>)</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>)</span>.HasBasis</span> <span class=\"fn\">p</span> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">u</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œ≥</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">i</span></span> ‚Üí <span class=\"fn\">‚àÉ (<span class=\"fn\">N</span> : <span class=\"fn\">Œ≤</span>), <span class=\"fn\">‚àÄ (<span class=\"fn\">m</span> : <span class=\"fn\">Œ≤</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">m</span></span> ‚Üí <span class=\"fn\">‚àÄ (<span class=\"fn\">n</span> : <span class=\"fn\">Œ≤</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">n</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">m</span></span>, <span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">n</span></span>)</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span></span></span></span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L274-L282","name":"cauchySeq_shift","line":274,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchySeq_shift","doc":"Any shift of a Cauchy sequence is also a Cauchy sequence. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchySeq_shift\"><span class=\"name\">cauchySeq_shift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>) =&gt; <span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span></span>)</span></span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">u</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L268-L271","name":"tendsto_nhds_of_cauchySeq_of_subseq","line":268,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#tendsto_nhds_of_cauchySeq_of_subseq","doc":"If a Cauchy sequence has a convergent subsequence, then it converges. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#tendsto_nhds_of_cauchySeq_of_subseq\"><span class=\"name\">tendsto_nhds_of_cauchySeq_of_subseq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hu : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œπ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">p</span>.NeBot</span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">f</span> <span class=\"fn\">p</span> <span class=\"fn\">Filter.atTop</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">a</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">u</span> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">a</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L259-L265","name":"Filter.Tendsto.subseq_mem_entourage","line":259,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#Filter.Tendsto.subseq_mem_entourage","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Filter.Tendsto.subseq_mem_entourage\"><span class=\"name\">Filter</span>.<span class=\"name\">Tendsto</span>.<span class=\"name\">subseq_mem_entourage</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span></span>)</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hV : <span class=\"fn\">‚àÄ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">V</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hu : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">u</span> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">a</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">‚àÉ (<span class=\"fn\">œÜ</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#StrictMono\">StrictMono</a> <span class=\"fn\">œÜ</span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">œÜ</span> <span class=\"fn\">0</span></span>)</span></span>, <span class=\"fn\">a</span>)</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">V</span> <span class=\"fn\">0</span></span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">œÜ</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>, <span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">œÜ</span> <span class=\"fn\">n</span></span>)</span></span>)</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">V</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L249-L257","name":"CauchySeq.subseq_mem","line":249,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.subseq_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.subseq_mem\"><span class=\"name\">CauchySeq</span>.<span class=\"name\">subseq_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span></span>)</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hV : <span class=\"fn\">‚àÄ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">V</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hu : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">‚àÉ (<span class=\"fn\">œÜ</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#StrictMono\">StrictMono</a> <span class=\"fn\">œÜ</span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">œÜ</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>, <span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">œÜ</span> <span class=\"fn\">n</span></span>)</span></span>)</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">V</span> <span class=\"fn\">n</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L245-L247","name":"UniformContinuous.comp_cauchySeq","line":245,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#UniformContinuous.comp_cauchySeq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#UniformContinuous.comp_cauchySeq\"><span class=\"name\">UniformContinuous</span>.<span class=\"name\">comp_cauchySeq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≥ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≥</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><span class=\"fn\">Œ≥</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hu : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">u</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L241-L243","name":"CauchySeq.eventually_eventually","line":241,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.eventually_eventually","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.eventually_eventually\"><span class=\"name\">CauchySeq</span>.<span class=\"name\">eventually_eventually</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#SemilatticeSup\">SemilatticeSup</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hu : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hV : <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">‚àÄ·∂† (<span class=\"fn\">k</span> : <span class=\"fn\">Œ≤</span>) (<span class=\"fn\">l</span> : <span class=\"fn\">Œ≤</span>) in <span class=\"fn\">Filter.atTop</span>, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">k</span></span>, <span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">l</span></span>)</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">V</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L236-L239","name":"CauchySeq.prod","line":236,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.prod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.prod\"><span class=\"name\">CauchySeq</span>.<span class=\"name\">prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≥ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≥</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><span class=\"fn\">Œ≥</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{v : <span class=\"fn\"><span class=\"fn\">Œ≥</span> ‚Üí <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hu : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hv : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">v</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">Œ≥</span>) =&gt; <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">x</span></span>, <span class=\"fn\"><span class=\"fn\">v</span> <span class=\"fn\">x</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L232-L234","name":"CauchySeq.prod_map","line":232,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.prod_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.prod_map\"><span class=\"name\">CauchySeq</span>.<span class=\"name\">prod_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≥ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ¥ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≥</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ¥</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><span class=\"fn\">Œ≥</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{v : <span class=\"fn\"><span class=\"fn\">Œ¥</span> ‚Üí <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hu : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hv : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">v</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Prod.map\">Prod.map</a> <span class=\"fn\">u</span> <span class=\"fn\">v</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L228-L230","name":"cauchySeq_iff","line":228,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchySeq_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchySeq_iff\"><span class=\"name\">cauchySeq_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">u</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ <span class=\"fn\">V</span> ‚àà <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>, <span class=\"fn\">‚àÉ (<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\">‚àÄ <span class=\"fn\">k</span> ‚â• <span class=\"fn\">N</span>, <span class=\"fn\">‚àÄ <span class=\"fn\">l</span> ‚â• <span class=\"fn\">N</span>, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">k</span></span>, <span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">l</span></span>)</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">V</span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L224-L226","name":"cauchySeq_iff'","line":224,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchySeq_iff'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchySeq_iff'\"><span class=\"name\">cauchySeq_iff'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">u</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ <span class=\"fn\">V</span> ‚àà <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>, <span class=\"fn\">‚àÄ·∂† (<span class=\"fn\">k</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a></span>) in <span class=\"fn\">Filter.atTop</span>, <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Core.html#Prod.map\">Prod.map</a> <span class=\"fn\">u</span> <span class=\"fn\">u</span></span> <a href=\"./Mathlib/Data/Set/Defs.html#Set.preimage\">‚Åª¬π'</a> <span class=\"fn\">V</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L217-L221","name":"CauchySeq.subseq_subseq_mem","line":217,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.subseq_subseq_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.subseq_subseq_mem\"><span class=\"name\">CauchySeq</span>.<span class=\"name\">subseq_subseq_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span></span>)</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hV : <span class=\"fn\">‚àÄ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">V</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hu : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">f</span> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">Filter.atTop</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">g</span> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">Filter.atTop</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">‚àÉ (<span class=\"fn\">œÜ</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#StrictMono\">StrictMono</a> <span class=\"fn\">œÜ</span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">œÜ</span></span></span>)</span> <span class=\"fn\">n</span></span>, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">œÜ</span></span></span>)</span> <span class=\"fn\">n</span></span>)</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">V</span> <span class=\"fn\">n</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L211-L215","name":"Function.Bijective.cauchySeq_comp_iff","line":211,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#Function.Bijective.cauchySeq_comp_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Function.Bijective.cauchySeq_comp_iff\"><span class=\"name\">Function</span>.<span class=\"name\">Bijective</span>.<span class=\"name\">cauchySeq_comp_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Bijective\">Function.Bijective</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(u : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">u</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L207-L209","name":"CauchySeq.comp_injective","line":207,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.comp_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.comp_injective\"><span class=\"name\">CauchySeq</span>.<span class=\"name\">comp_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#SemilatticeSup\">SemilatticeSup</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Max.html#NoMaxOrder\">NoMaxOrder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">‚Ñï</a> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hu : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <a href=\"./Init/Prelude.html#Nat\">‚Ñï</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">f</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L203-L205","name":"CauchySeq.comp_tendsto","line":203,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.comp_tendsto","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.comp_tendsto\"><span class=\"name\">CauchySeq</span>.<span class=\"name\">comp_tendsto</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≥ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#SemilatticeSup\">SemilatticeSup</a> <span class=\"fn\">Œ≥</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Œ≥</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">Œ≥</span> ‚Üí <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">g</span> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">Filter.atTop</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">g</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L199-L201","name":"cauchySeq_iff_tendsto","line":199,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchySeq_iff_tendsto","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchySeq_iff_tendsto\"><span class=\"name\">cauchySeq_iff_tendsto</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#SemilatticeSup\">SemilatticeSup</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">u</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Prod.map\">Prod.map</a> <span class=\"fn\">u</span> <span class=\"fn\">u</span></span>)</span> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L196-L197","name":"cauchySeq_const","line":196,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchySeq_const","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchySeq_const\"><span class=\"name\">cauchySeq_const</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#SemilatticeSup\">SemilatticeSup</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">fun (<span class=\"fn\">x_1</span> : <span class=\"fn\">Œ≤</span>) =&gt; <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L192-L194","name":"Filter.Tendsto.cauchySeq","line":192,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#Filter.Tendsto.cauchySeq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Filter.Tendsto.cauchySeq\"><span class=\"name\">Filter</span>.<span class=\"name\">Tendsto</span>.<span class=\"name\">cauchySeq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#SemilatticeSup\">SemilatticeSup</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">f</span> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">x</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L186-L190","name":"CauchySeq.mem_entourage","line":186,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.mem_entourage","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.mem_entourage\"><span class=\"name\">CauchySeq</span>.<span class=\"name\">mem_entourage</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#SemilatticeSup\">SemilatticeSup</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{V : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hV : <span class=\"fn\"><span class=\"fn\">V</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">‚àÉ (<span class=\"fn\">k‚ÇÄ</span> : <span class=\"fn\">Œ≤</span>), <span class=\"fn\">‚àÄ (<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\">Œ≤</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k‚ÇÄ</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">i</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k‚ÇÄ</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">j</span></span> ‚Üí <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">i</span></span>, <span class=\"fn\"><span class=\"fn\">u</span> <span class=\"fn\">j</span></span>)</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">V</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L183-L184","name":"CauchySeq.nonempty","line":183,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.nonempty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.nonempty\"><span class=\"name\">CauchySeq</span>.<span class=\"name\">nonempty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hu : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Œ≤</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L179-L181","name":"CauchySeq.tendsto_uniformity","line":179,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.tendsto_uniformity","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq.tendsto_uniformity\"><span class=\"name\">CauchySeq</span>.<span class=\"name\">tendsto_uniformity</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\">CauchySeq</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Core.html#Prod.map\">Prod.map</a> <span class=\"fn\">u</span> <span class=\"fn\">u</span></span>)</span> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L176-L177","name":"CauchySeq","line":176,"kind":"def","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq","doc":"Cauchy sequences. Usually defined on ‚Ñï, but often it is also useful to say that a function\ndefined on ‚Ñù is Cauchy at +‚àû to deduce convergence. Therefore, we define it in a type class that\nis general enough to cover both ‚Ñï and ‚Ñù, which are the main motivating examples. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CauchySeq\"><span class=\"name\">CauchySeq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#Preorder\">Preorder</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(u : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L168-L171","name":"Cauchy.comap'","line":168,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy.comap'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy.comap'\"><span class=\"name\">Cauchy</span>.<span class=\"name\">comap'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.comap\">Filter.comap</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span></span>) =&gt; <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\"><span class=\"fn\">p</span>.1</span></span>, <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\"><span class=\"fn\">p</span>.2</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ≤</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.comap\">Filter.comap</a> <span class=\"fn\">m</span> <span class=\"fn\">f</span></span>)</span>.NeBot</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.comap\">Filter.comap</a> <span class=\"fn\">m</span> <span class=\"fn\">f</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L159-L166","name":"Cauchy.comap","line":159,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy.comap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy.comap\"><span class=\"name\">Cauchy</span>.<span class=\"name\">comap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.comap\">Filter.comap</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span></span>) =&gt; <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\"><span class=\"fn\">p</span>.1</span></span>, <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\"><span class=\"fn\">p</span>.2</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ≤</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.comap\">Filter.comap</a> <span class=\"fn\">m</span> <span class=\"fn\">f</span></span>)</span>.NeBot</span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.comap\">Filter.comap</a> <span class=\"fn\">m</span> <span class=\"fn\">f</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L151-L157","name":"Cauchy.map","line":151,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy.map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy.map\"><span class=\"name\">Cauchy</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.map\">Filter.map</a> <span class=\"fn\">m</span> <span class=\"fn\">f</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L147-L149","name":"le_nhds_iff_adhp_of_cauchy","line":147,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#le_nhds_iff_adhp_of_cauchy","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#le_nhds_iff_adhp_of_cauchy\"><span class=\"name\">le_nhds_iff_adhp_of_cauchy</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ClusterPt\">ClusterPt</a> <span class=\"fn\">x</span> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L139-L145","name":"le_nhds_of_cauchy_adhp","line":139,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#le_nhds_of_cauchy_adhp","doc":"If `x` is an adherent (cluster) point for a Cauchy filter `f`, then it is a limit point\nfor `f`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#le_nhds_of_cauchy_adhp\"><span class=\"name\">le_nhds_of_cauchy_adhp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(adhs : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ClusterPt\">ClusterPt</a> <span class=\"fn\">x</span> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L125-L135","name":"le_nhds_of_cauchy_adhp_aux","line":125,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#le_nhds_of_cauchy_adhp_aux","doc":"The common part of the proofs of `le_nhds_of_cauchy_adhp` and\n`SequentiallyComplete.le_nhds_of_seq_tendsto_nhds`: if for any entourage `s`\none can choose a set `t ‚àà f` of diameter `s` such that it contains a point `y`\nwith `(x, y) ‚àà s`, then `f` converges to `x`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#le_nhds_of_cauchy_adhp_aux\"><span class=\"name\">le_nhds_of_cauchy_adhp_aux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(adhs : <span class=\"fn\">‚àÄ <span class=\"fn\">s</span> ‚àà <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>, <span class=\"fn\">‚àÉ <span class=\"fn\">t</span> ‚àà <span class=\"fn\">f</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">√óÀ¢</a> <span class=\"fn\">t</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\">‚àÉ (<span class=\"fn\">y</span> : <span class=\"fn\">Œ±</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">x</span>, <span class=\"fn\">y</span>)</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">t</span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L116-L119","name":"Cauchy.prod","line":116,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy.prod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy.prod\"><span class=\"name\">Cauchy</span>.<span class=\"name\">prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">√óÀ¢</a> <span class=\"fn\">g</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L112-L114","name":"cauchy_prod_iff","line":112,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_prod_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_prod_iff\"><span class=\"name\">cauchy_prod_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ≤</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">F</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.map\">Filter.map</a> <span class=\"fn\">Prod.fst</span> <span class=\"fn\">F</span></span>)</span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.map\">Filter.map</a> <span class=\"fn\">Prod.snd</span> <span class=\"fn\">F</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L107-L110","name":"cauchy_comap_uniformSpace","line":107,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_comap_uniformSpace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_comap_uniformSpace\"><span class=\"name\">cauchy_comap_uniformSpace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">l</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.map\">Filter.map</a> <span class=\"fn\">f</span> <span class=\"fn\">l</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L102-L105","name":"cauchy_iInf_uniformSpace'","line":102,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_iInf_uniformSpace'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_iInf_uniformSpace'\"><span class=\"name\">cauchy_iInf_uniformSpace'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">l</span>.NeBot</span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">l</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">l</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L96-L100","name":"cauchy_iInf_uniformSpace","line":96,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_iInf_uniformSpace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_iInf_uniformSpace\"><span class=\"name\">cauchy_iInf_uniformSpace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Œπ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">l</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">l</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L90-L94","name":"cauchy_inf_uniformSpace","line":90,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_inf_uniformSpace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_inf_uniformSpace\"><span class=\"name\">cauchy_inf_uniformSpace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{v : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">F</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">F</span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">F</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L86-L88","name":"Cauchy.mono_uniformSpace","line":86,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy.mono_uniformSpace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy.mono_uniformSpace\"><span class=\"name\">Cauchy</span>.<span class=\"name\">mono_uniformSpace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{v : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(huv : <span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">v</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hF : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L82-L84","name":"Filter.Tendsto.cauchy_map","line":82,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#Filter.Tendsto.cauchy_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Filter.Tendsto.cauchy_map\"><span class=\"name\">Filter</span>.<span class=\"name\">Tendsto</span>.<span class=\"name\">cauchy_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">l</span>.NeBot</span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">f</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">a</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.map\">Filter.map</a> <span class=\"fn\">f</span> <span class=\"fn\">l</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L79-L80","name":"cauchy_pure","line":79,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_pure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_pure\"><span class=\"name\">cauchy_pure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Pure.pure\">pure</a> <span class=\"fn\">a</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L76-L77","name":"cauchy_nhds","line":76,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_nhds","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_nhds\"><span class=\"name\">cauchy_nhds</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">a</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L73-L74","name":"Cauchy.mono'","line":73,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy.mono'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy.mono'\"><span class=\"name\">Cauchy</span>.<span class=\"name\">mono'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_c : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span>.NeBot</span> ‚Üí <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">f</span></span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">g</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L70-L71","name":"Cauchy.mono","line":70,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy.mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy.mono\"><span class=\"name\">Cauchy</span>.<span class=\"name\">mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hg : <span class=\"fn\"><span class=\"fn\">g</span>.NeBot</span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_c : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_le : <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L66-L68","name":"cauchy_map_iff'","line":66,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_map_iff'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_map_iff'\"><span class=\"name\">cauchy_map_iff'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hl : <span class=\"fn\"><span class=\"fn\">l</span>.NeBot</span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.map\">Filter.map</a> <span class=\"fn\">f</span> <span class=\"fn\">l</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">Œ≤</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ≤</span></span>) =&gt; <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">p</span>.1</span></span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">p</span>.2</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">l</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">√óÀ¢</a> <span class=\"fn\">l</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L62-L64","name":"cauchy_map_iff","line":62,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_map_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_map_iff\"><span class=\"name\">cauchy_map_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.map\">Filter.map</a> <span class=\"fn\">f</span> <span class=\"fn\">l</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.NeBot</span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">Œ≤</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ≤</span></span>) =&gt; <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">p</span>.1</span></span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">p</span>.2</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">l</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">√óÀ¢</a> <span class=\"fn\">l</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L56-L60","name":"Cauchy.ultrafilter_of","line":56,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy.ultrafilter_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy.ultrafilter_of\"><span class=\"name\">Cauchy</span>.<span class=\"name\">ultrafilter_of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">l</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">‚Üë<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Ultrafilter.html#Ultrafilter.of\">Ultrafilter.of</a> <span class=\"fn\">l</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L52-L54","name":"cauchy_iff_le","line":52,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_iff_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_iff_le\"><span class=\"name\">cauchy_iff_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hl : <span class=\"fn\"><span class=\"fn\">l</span>.NeBot</span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">l</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">√óÀ¢</a> <span class=\"fn\">l</span></span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L48-L50","name":"cauchy_iff","line":48,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_iff\"><span class=\"name\">cauchy_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.NeBot</span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\">‚àÄ <span class=\"fn\">s</span> ‚àà <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>, <span class=\"fn\">‚àÉ <span class=\"fn\">t</span> ‚àà <span class=\"fn\">f</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">√óÀ¢</a> <span class=\"fn\">t</span></span> <a href=\"./Init/Core.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">s</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L44-L46","name":"cauchy_iff'","line":44,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_iff'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#cauchy_iff'\"><span class=\"name\">cauchy_iff'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.NeBot</span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\">‚àÄ <span class=\"fn\">s</span> ‚àà <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>, <span class=\"fn\">‚àÉ <span class=\"fn\">t</span> ‚àà <span class=\"fn\">f</span>, <span class=\"fn\">‚àÄ <span class=\"fn\">x</span> ‚àà <span class=\"fn\">t</span>, <span class=\"fn\">‚àÄ <span class=\"fn\">y</span> ‚àà <span class=\"fn\">t</span>, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">x</span>, <span class=\"fn\">y</span>)</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">s</span></span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L37-L42","name":"Filter.HasBasis.cauchy_iff","line":37,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#Filter.HasBasis.cauchy_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Filter.HasBasis.cauchy_iff\"><span class=\"name\">Filter</span>.<span class=\"name\">HasBasis</span>.<span class=\"name\">cauchy_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Sort</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span></span>)</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>)</span>.HasBasis</span> <span class=\"fn\">p</span> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\">Cauchy</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.NeBot</span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">i</span></span> ‚Üí <span class=\"fn\">‚àÉ <span class=\"fn\">t</span> ‚àà <span class=\"fn\">f</span>, <span class=\"fn\">‚àÄ <span class=\"fn\">x</span> ‚àà <span class=\"fn\">t</span>, <span class=\"fn\">‚àÄ <span class=\"fn\">y</span> ‚àà <span class=\"fn\">t</span>, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">x</span>, <span class=\"fn\">y</span>)</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span></span></span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L34-L35","name":"IsComplete","line":34,"kind":"def","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#IsComplete","doc":"A set `s` is called *complete*, if any Cauchy filter `f` such that `s ‚àà f`\nhas a limit in `s` (formally, it satisfies `f ‚â§ ùìù x` for some `x ‚àà s`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#IsComplete\"><span class=\"name\">IsComplete</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/caac5b13fb72ba0c5d0b35a0067de108db65e964/Mathlib/Topology/UniformSpace/Cauchy.lean#L29-L30","name":"Cauchy","line":29,"kind":"def","docLink":"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy","doc":"A filter `f` is Cauchy if for every entourage `r`, there exists an\n`s ‚àà f` such that `s √ó s ‚äÜ r`. This is a generalization of Cauchy\nsequences, because if `a : ‚Ñï ‚Üí Œ±` then the filter of sets containing\ncofinitely many of the `a n` is Cauchy iff `a` is a Cauchy sequence. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#Cauchy\"><span class=\"name\">Cauchy</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uniformSpace : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"}]}