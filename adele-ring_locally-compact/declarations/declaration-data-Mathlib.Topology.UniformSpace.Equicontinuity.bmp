{"name":"Mathlib.Topology.UniformSpace.Equicontinuity","instances":[],"imports":["Init","Mathlib.Topology.UniformSpace.UniformConvergenceTopology"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L1021-L1025","name":"Equicontinuous.isClosed_setOf_tendsto","line":1021,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Equicontinuous.isClosed_setOf_tendsto","doc":"If `F : Œπ ‚Üí X ‚Üí Œ±` is an equicontinuous family of functions,\n`f : X ‚Üí Œ±` is a continuous function, and `l` is a filter on `Œπ`,\nthen `{x | Filter.Tendsto (F ¬∑ x) l (ùìù (f x))}` is a closed set. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Equicontinuous.isClosed_setOf_tendsto\"><span class=\"name\">Equicontinuous</span>.<span class=\"name\">isClosed_setOf_tendsto</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œπ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hF : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Equicontinuous\">Equicontinuous</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">X</span> | <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x_1</span> : <span class=\"fn\">Œπ</span>) =&gt; <span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">x_1</span> <span class=\"fn\">x</span></span></span>)</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span>)</span></span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L1004-L1016","name":"EquicontinuousAt.tendsto_of_mem_closure","line":1004,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousAt.tendsto_of_mem_closure","doc":"If `F : Œπ ‚Üí X ‚Üí Œ±` is a family of functions equicontinuous at `x`,\nit tends to `f y` along a filter `l` for any `y ‚àà s`,\nthe limit function `f` tends to `z` along `ùìù[s] x`, and `x ‚àà closure s`,\nthen `(F ¬∑ x)` tends to `z` along `l`.\n\nIn some sense, this is a converse of `EquicontinuousAt.closure`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousAt.tendsto_of_mem_closure\"><span class=\"name\">EquicontinuousAt</span>.<span class=\"name\">tendsto_of_mem_closure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œπ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hF : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousAt\">EquicontinuousAt</a> <span class=\"fn\">F</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhdsWithin\">nhdsWithin</a> <span class=\"fn\">x</span> <span class=\"fn\">s</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">z</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\">‚àÄ <span class=\"fn\">y</span> ‚àà <span class=\"fn\">s</span>, <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">Œπ</span>) =&gt; <span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span>)</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span>)</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#closure\">closure</a> <span class=\"fn\">s</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x_1</span> : <span class=\"fn\">Œπ</span>) =&gt; <span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">x_1</span> <span class=\"fn\">x</span></span></span>)</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">z</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L991-L995","name":"Filter.Tendsto.uniformContinuous_of_uniformEquicontinuous","line":991,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Filter.Tendsto.uniformContinuous_of_uniformEquicontinuous","doc":"If `ùìï : Œπ ‚Üí Œ≤ ‚Üí Œ±` tends to `f : Œ≤ ‚Üí Œ±` *pointwise* along some nontrivial filter, and if the\nfamily `ùìï` is uniformly equicontinuous, then the limit is uniformly continuous. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Filter.Tendsto.uniformContinuous_of_uniformEquicontinuous\"><span class=\"name\">Filter</span>.<span class=\"name\">Tendsto</span>.<span class=\"name\">uniformContinuous_of_uniformEquicontinuous</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œπ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.NeBot\">Filter.NeBot</a> <span class=\"fn\">l</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h‚ÇÅ : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">F</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">f</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h‚ÇÇ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuous\">UniformEquicontinuous</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L978-L987","name":"Filter.Tendsto.uniformContinuousOn_of_uniformEquicontinuousOn","line":978,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Filter.Tendsto.uniformContinuousOn_of_uniformEquicontinuousOn","doc":"If `ùìï : Œπ ‚Üí Œ≤ ‚Üí Œ±` tends to `f : Œ≤ ‚Üí Œ±` *pointwise on `S : Set Œ≤`* along some nontrivial\nfilter, and if the family `ùìï` is uniformly equicontinuous on `S`, then the limit is uniformly\ncontinuous on `S`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Filter.Tendsto.uniformContinuousOn_of_uniformEquicontinuousOn\"><span class=\"name\">Filter</span>.<span class=\"name\">Tendsto</span>.<span class=\"name\">uniformContinuousOn_of_uniformEquicontinuousOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œπ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.NeBot\">Filter.NeBot</a> <span class=\"fn\">l</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h‚ÇÅ : <span class=\"fn\">‚àÄ <span class=\"fn\">x</span> ‚àà <span class=\"fn\">S</span>, <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x_1</span> : <span class=\"fn\">Œπ</span>) =&gt; <span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">x_1</span> <span class=\"fn\">x</span></span></span>)</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h‚ÇÇ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuousOn\">UniformEquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformContinuousOn\">UniformContinuousOn</a> <span class=\"fn\">f</span> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L970-L973","name":"Filter.Tendsto.continuousOn_of_equicontinuousOn","line":970,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Filter.Tendsto.continuousOn_of_equicontinuousOn","doc":"If `ùìï : Œπ ‚Üí X ‚Üí Œ±` tends to `f : X ‚Üí Œ±` *pointwise on `S : Set X`* along some nontrivial\nfilter, and if the family `ùìï` is equicontinuous, then the limit is continuous on `S`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Filter.Tendsto.continuousOn_of_equicontinuousOn\"><span class=\"name\">Filter</span>.<span class=\"name\">Tendsto</span>.<span class=\"name\">continuousOn_of_equicontinuousOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œπ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.NeBot\">Filter.NeBot</a> <span class=\"fn\">l</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h‚ÇÅ : <span class=\"fn\">‚àÄ <span class=\"fn\">x</span> ‚àà <span class=\"fn\">S</span>, <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x_1</span> : <span class=\"fn\">Œπ</span>) =&gt; <span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">x_1</span> <span class=\"fn\">x</span></span></span>)</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h‚ÇÇ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">f</span> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L963-L965","name":"Filter.Tendsto.continuous_of_equicontinuous","line":963,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Filter.Tendsto.continuous_of_equicontinuous","doc":"If `ùìï : Œπ ‚Üí X ‚Üí Œ±` tends to `f : X ‚Üí Œ±` *pointwise* along some nontrivial filter, and if the\nfamily `ùìï` is equicontinuous, then the limit is continuous. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Filter.Tendsto.continuous_of_equicontinuous\"><span class=\"name\">Filter</span>.<span class=\"name\">Tendsto</span>.<span class=\"name\">continuous_of_equicontinuous</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œπ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.NeBot\">Filter.NeBot</a> <span class=\"fn\">l</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h‚ÇÅ : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">F</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">f</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h‚ÇÇ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Equicontinuous\">Equicontinuous</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L954-L958","name":"Filter.Tendsto.continuousAt_of_equicontinuousAt","line":954,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Filter.Tendsto.continuousAt_of_equicontinuousAt","doc":"If `ùìï : Œπ ‚Üí X ‚Üí Œ±` tends to `f : X ‚Üí Œ±` *pointwise* along some nontrivial filter, and if the\nfamily `ùìï` is equicontinuous at some `x‚ÇÄ : X`, then the limit is continuous at `x‚ÇÄ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Filter.Tendsto.continuousAt_of_equicontinuousAt\"><span class=\"name\">Filter</span>.<span class=\"name\">Tendsto</span>.<span class=\"name\">continuousAt_of_equicontinuousAt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œπ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.NeBot\">Filter.NeBot</a> <span class=\"fn\">l</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x‚ÇÄ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h‚ÇÅ : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">F</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">f</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h‚ÇÇ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousAt\">EquicontinuousAt</a> <span class=\"fn\">F</span> <span class=\"fn\">x‚ÇÄ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousAt\">ContinuousAt</a> <span class=\"fn\">f</span> <span class=\"fn\">x‚ÇÄ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L941-L950","name":"Filter.Tendsto.continuousWithinAt_of_equicontinuousWithinAt","line":941,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Filter.Tendsto.continuousWithinAt_of_equicontinuousWithinAt","doc":"If `ùìï : Œπ ‚Üí X ‚Üí Œ±` tends to `f : X ‚Üí Œ±` *pointwise on `S ‚à™ {x‚ÇÄ} : Set X`* along some nontrivial\nfilter, and if the family `ùìï` is equicontinuous at `x‚ÇÄ : X` within `S`, then the limit is\ncontinuous at `x‚ÇÄ` within `S`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Filter.Tendsto.continuousWithinAt_of_equicontinuousWithinAt\"><span class=\"name\">Filter</span>.<span class=\"name\">Tendsto</span>.<span class=\"name\">continuousWithinAt_of_equicontinuousWithinAt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">Œπ</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.NeBot\">Filter.NeBot</a> <span class=\"fn\">l</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x‚ÇÄ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h‚ÇÅ : <span class=\"fn\">‚àÄ <span class=\"fn\">x</span> ‚àà <span class=\"fn\">S</span>, <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x_1</span> : <span class=\"fn\">Œπ</span>) =&gt; <span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">x_1</span> <span class=\"fn\">x</span></span></span>)</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h‚ÇÇ : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">Œπ</span>) =&gt; <span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">x</span> <span class=\"fn\">x‚ÇÄ</span></span></span>)</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x‚ÇÄ</span></span>)</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h‚ÇÉ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousWithinAt\">EquicontinuousWithinAt</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span> <span class=\"fn\">x‚ÇÄ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousWithinAt\">ContinuousWithinAt</a> <span class=\"fn\">f</span> <span class=\"fn\">S</span> <span class=\"fn\">x‚ÇÄ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L913-L915","name":"Set.UniformEquicontinuousOn.closure","line":913,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.UniformEquicontinuousOn.closure","doc":"If a set of functions is uniformly equicontinuous on a set `S`, its closure for the product\ntopology is also uniformly equicontinuous. This would also be true for the coarser topology of\npointwise convergence on `S`, see `UniformEquicontinuousOn.closure'`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.UniformEquicontinuousOn.closure\"><span class=\"name\">Set</span>.<span class=\"name\">UniformEquicontinuousOn</span>.<span class=\"name\">closure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hA : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.UniformEquicontinuousOn\">Set.UniformEquicontinuousOn</a> <span class=\"fn\">A</span> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.UniformEquicontinuousOn\">Set.UniformEquicontinuousOn</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#closure\">closure</a> <span class=\"fn\">A</span></span>)</span> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L905-L907","name":"Set.UniformEquicontinuous.closure","line":905,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.UniformEquicontinuous.closure","doc":"If a set of functions is uniformly equicontinuous, its closure for the product topology is also\nuniformly equicontinuous. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.UniformEquicontinuous.closure\"><span class=\"name\">Set</span>.<span class=\"name\">UniformEquicontinuous</span>.<span class=\"name\">closure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hA : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.UniformEquicontinuous\">Set.UniformEquicontinuous</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.UniformEquicontinuous\">Set.UniformEquicontinuous</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#closure\">closure</a> <span class=\"fn\">A</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L896-L900","name":"UniformEquicontinuous.closure'","line":896,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuous.closure'","doc":"If a set of functions is uniformly equicontinuous, the same is true for its closure in *any*\ntopology for which evaluation at any point is continuous. Since this will be applied to\n`DFunLike` types, we state it for any topological space whith a map to `Œ≤ ‚Üí Œ±` satisfying the right\ncontinuity conditions. See also `Set.UniformEquicontinuous.closure` for a more familiar statement.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuous.closure'\"><span class=\"name\">UniformEquicontinuous</span>.<span class=\"name\">closure'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tY : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><span class=\"fn\">Y</span> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hA : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuous\">UniformEquicontinuous</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">Subtype.val</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hu : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuous\">UniformEquicontinuous</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">Subtype.val</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L878-L889","name":"UniformEquicontinuousOn.closure'","line":878,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuousOn.closure'","doc":"If a set of functions is uniformly equicontinuous on a set `S`, the same is true for its\nclosure in *any* topology for which evaluation at any `x ‚àà S` i continuous. Since this will be\napplied to `DFunLike` types, we state it for any topological space whith a map to `Œ≤ ‚Üí Œ±` satisfying\nthe right continuity conditions. See also `Set.UniformEquicontinuousOn.closure` for a more familiar\n(but weaker) statement. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuousOn.closure'\"><span class=\"name\">UniformEquicontinuousOn</span>.<span class=\"name\">closure'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tY : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><span class=\"fn\">Y</span> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hA : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuousOn\">UniformEquicontinuousOn</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">Subtype.val</span></span>)</span> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hu : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Function.html#Set.restrict\">Set.restrict</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">u</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuousOn\">UniformEquicontinuousOn</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">Subtype.val</span></span>)</span> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L869-L871","name":"Set.EquicontinuousOn.closure","line":869,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.EquicontinuousOn.closure","doc":"If a set of functions is equicontinuous, its closure for the product topology is also\nequicontinuous. This would also be true for the coarser topology of pointwise convergence on `S`,\nsee `EquicontinuousOn.closure'`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.EquicontinuousOn.closure\"><span class=\"name\">Set</span>.<span class=\"name\">EquicontinuousOn</span>.<span class=\"name\">closure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hA : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.EquicontinuousOn\">Set.EquicontinuousOn</a> <span class=\"fn\">A</span> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.EquicontinuousOn\">Set.EquicontinuousOn</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#closure\">closure</a> <span class=\"fn\">A</span></span>)</span> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L862-L863","name":"Set.Equicontinuous.closure","line":862,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.Equicontinuous.closure","doc":"If a set of functions is equicontinuous, its closure for the product topology is also\nequicontinuous. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.Equicontinuous.closure\"><span class=\"name\">Set</span>.<span class=\"name\">Equicontinuous</span>.<span class=\"name\">closure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hA : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.Equicontinuous\">Set.Equicontinuous</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.Equicontinuous\">Set.Equicontinuous</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#closure\">closure</a> <span class=\"fn\">A</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L855-L858","name":"EquicontinuousOn.closure'","line":855,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn.closure'","doc":"If a set of functions is equicontinuous on a set `S`, the same is true for its closure in *any*\ntopology for which evaluation at any `x ‚àà S` is continuous. Since this will be applied to\n`DFunLike` types, we state it for any topological space whith a map to `X ‚Üí Œ±` satisfying the right\ncontinuity conditions. See also `Set.EquicontinuousOn.closure` for a more familiar\n(but weaker) statement. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn.closure'\"><span class=\"name\">EquicontinuousOn</span>.<span class=\"name\">closure'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tY : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><span class=\"fn\">Y</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hA : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">Subtype.val</span></span>)</span> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hu : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Function.html#Set.restrict\">Set.restrict</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">u</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">Subtype.val</span></span>)</span> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L845-L847","name":"Equicontinuous.closure'","line":845,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Equicontinuous.closure'","doc":"If a set of functions is equicontinuous, the same is true for its closure in *any*\ntopology for which evaluation at any point is continuous. Since this will be applied to\n`DFunLike` types, we state it for any topological space whith a map to `X ‚Üí Œ±` satisfying the right\ncontinuity conditions. See also `Set.Equicontinuous.closure` for a more familiar statement. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Equicontinuous.closure'\"><span class=\"name\">Equicontinuous</span>.<span class=\"name\">closure'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tY : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><span class=\"fn\">Y</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hA : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Equicontinuous\">Equicontinuous</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">Subtype.val</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hu : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Equicontinuous\">Equicontinuous</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">Subtype.val</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L836-L839","name":"Set.EquicontinuousWithinAt.closure","line":836,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.EquicontinuousWithinAt.closure","doc":"If a set of functions is equicontinuous at some `x‚ÇÄ` within a set `S`, its closure for the\nproduct topology is also equicontinuous at `x‚ÇÄ` within `S`. This would also be true for the coarser\ntopology of pointwise convergence on `S ‚à™ {x‚ÇÄ}`, see `Set.EquicontinuousWithinAt.closure'`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.EquicontinuousWithinAt.closure\"><span class=\"name\">Set</span>.<span class=\"name\">EquicontinuousWithinAt</span>.<span class=\"name\">closure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x‚ÇÄ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hA : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.EquicontinuousWithinAt\">Set.EquicontinuousWithinAt</a> <span class=\"fn\">A</span> <span class=\"fn\">S</span> <span class=\"fn\">x‚ÇÄ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.EquicontinuousWithinAt\">Set.EquicontinuousWithinAt</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#closure\">closure</a> <span class=\"fn\">A</span></span>)</span> <span class=\"fn\">S</span> <span class=\"fn\">x‚ÇÄ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L828-L830","name":"Set.EquicontinuousAt.closure","line":828,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.EquicontinuousAt.closure","doc":"If a set of functions is equicontinuous at some `x‚ÇÄ`, its closure for the product topology is\nalso equicontinuous at `x‚ÇÄ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.EquicontinuousAt.closure\"><span class=\"name\">Set</span>.<span class=\"name\">EquicontinuousAt</span>.<span class=\"name\">closure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x‚ÇÄ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hA : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.EquicontinuousAt\">Set.EquicontinuousAt</a> <span class=\"fn\">A</span> <span class=\"fn\">x‚ÇÄ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.EquicontinuousAt\">Set.EquicontinuousAt</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#closure\">closure</a> <span class=\"fn\">A</span></span>)</span> <span class=\"fn\">x‚ÇÄ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L819-L823","name":"EquicontinuousAt.closure'","line":819,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousAt.closure'","doc":"If a set of functions is equicontinuous at some `x‚ÇÄ`, the same is true for its closure in *any*\ntopology for which evaluation at any point is continuous. Since this will be applied to\n`DFunLike` types, we state it for any topological space whith a map to `X ‚Üí Œ±` satisfying the right\ncontinuity conditions. See also `Set.EquicontinuousAt.closure` for a more familiar statement. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousAt.closure'\"><span class=\"name\">EquicontinuousAt</span>.<span class=\"name\">closure'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tY : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><span class=\"fn\">Y</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x‚ÇÄ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hA : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousAt\">EquicontinuousAt</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">Subtype.val</span></span>)</span> <span class=\"fn\">x‚ÇÄ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hu : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousAt\">EquicontinuousAt</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">Subtype.val</span></span>)</span> <span class=\"fn\">x‚ÇÄ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L803-L813","name":"EquicontinuousWithinAt.closure'","line":803,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousWithinAt.closure'","doc":"If a set of functions is equicontinuous at some `x‚ÇÄ` within a set `S`, the same is true for its\nclosure in *any* topology for which evaluation at any `x ‚àà S ‚à™ {x‚ÇÄ}` is continuous. Since\nthis will be applied to `DFunLike` types, we state it for any topological space whith a map\nto `X ‚Üí Œ±` satisfying the right continuity conditions. See also `Set.EquicontinuousWithinAt.closure`\nfor a more familiar (but weaker) statement.\n\nNote: This could *technically* be called `EquicontinuousWithinAt.closure` without name clashes\nwith `Set.EquicontinuousWithinAt.closure`, but we don't do it because, even with a `protected`\nmarker, it would introduce ambiguities while working in namespace `Set` (e.g, in the proof of\nany theorem called `Set.something`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousWithinAt.closure'\"><span class=\"name\">EquicontinuousWithinAt</span>.<span class=\"name\">closure'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tY : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><span class=\"fn\">Y</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x‚ÇÄ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hA : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousWithinAt\">EquicontinuousWithinAt</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">Subtype.val</span></span>)</span> <span class=\"fn\">S</span> <span class=\"fn\">x‚ÇÄ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hu‚ÇÅ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Function.html#Set.restrict\">Set.restrict</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">u</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hu‚ÇÇ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Basic.html#Function.eval\">Function.eval</a> <span class=\"fn\">x‚ÇÄ</span></span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">u</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousWithinAt\">EquicontinuousWithinAt</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">Subtype.val</span></span>)</span> <span class=\"fn\">S</span> <span class=\"fn\">x‚ÇÄ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L786-L791","name":"UniformInducing.uniformEquicontinuousOn_iff","line":786,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformInducing.uniformEquicontinuousOn_iff","doc":"Given `u : Œ± ‚Üí Œ≥` a uniform inducing map, a family `ùìï : Œπ ‚Üí Œ≤ ‚Üí Œ±` is uniformly equicontinuous\non a subset `S : Set Œ≤` iff the family `ùìï'`, obtained by composing each function of `ùìï` by `u`,\nis uniformly equicontinuous on `S`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformInducing.uniformEquicontinuousOn_iff\"><span class=\"name\">UniformInducing</span>.<span class=\"name\">uniformEquicontinuousOn_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≥ : <a href=\"./foundational_types.html\">Type</a> u_11}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≥ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≥</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≥</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hu : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/UniformEmbedding.html#UniformInducing\">UniformInducing</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuousOn\">UniformEquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuousOn\">UniformEquicontinuousOn</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">x</span></span></span>)</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">F</span></span>)</span> <span class=\"fn\">S</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L776-L780","name":"UniformInducing.uniformEquicontinuous_iff","line":776,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformInducing.uniformEquicontinuous_iff","doc":"Given `u : Œ± ‚Üí Œ≥` a uniform inducing map, a family `ùìï : Œπ ‚Üí Œ≤ ‚Üí Œ±` is uniformly equicontinuous\niff the family `ùìï'`, obtained by composing each function of `ùìï` by `u`, is uniformly\nequicontinuous. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformInducing.uniformEquicontinuous_iff\"><span class=\"name\">UniformInducing</span>.<span class=\"name\">uniformEquicontinuous_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≥ : <a href=\"./foundational_types.html\">Type</a> u_11}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≥ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≥</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≥</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hu : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/UniformEmbedding.html#UniformInducing\">UniformInducing</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuous\">UniformEquicontinuous</a> <span class=\"fn\">F</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuous\">UniformEquicontinuous</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">x</span></span></span>)</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">F</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L768-L771","name":"UniformInducing.equicontinuousOn_iff","line":768,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformInducing.equicontinuousOn_iff","doc":"Given `u : Œ± ‚Üí Œ≤` a uniform inducing map, a family `ùìï : Œπ ‚Üí X ‚Üí Œ±` is equicontinuous on a\nsubset `S : Set X` iff the family `ùìï'`, obtained by composing each function of `ùìï` by `u`, is\nequicontinuous on `S`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformInducing.equicontinuousOn_iff\"><span class=\"name\">UniformInducing</span>.<span class=\"name\">equicontinuousOn_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hu : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/UniformEmbedding.html#UniformInducing\">UniformInducing</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">x</span></span></span>)</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">F</span></span>)</span> <span class=\"fn\">S</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L759-L762","name":"UniformInducing.equicontinuous_iff","line":759,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformInducing.equicontinuous_iff","doc":"Given `u : Œ± ‚Üí Œ≤` a uniform inducing map, a family `ùìï : Œπ ‚Üí X ‚Üí Œ±` is equicontinuous iff the\nfamily `ùìï'`, obtained by composing each function of `ùìï` by `u`, is equicontinuous. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformInducing.equicontinuous_iff\"><span class=\"name\">UniformInducing</span>.<span class=\"name\">equicontinuous_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hu : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/UniformEmbedding.html#UniformInducing\">UniformInducing</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Equicontinuous\">Equicontinuous</a> <span class=\"fn\">F</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Equicontinuous\">Equicontinuous</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">x</span></span></span>)</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">F</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L750-L755","name":"UniformInducing.equicontinuousWithinAt_iff","line":750,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformInducing.equicontinuousWithinAt_iff","doc":"Given `u : Œ± ‚Üí Œ≤` a uniform inducing map, a family `ùìï : Œπ ‚Üí X ‚Üí Œ±` is equicontinuous at a point\n`x‚ÇÄ : X` within a subset `S : Set X` iff the family `ùìï'`, obtained by composing each function\nof `ùìï` by `u`, is equicontinuous at `x‚ÇÄ` within `S`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformInducing.equicontinuousWithinAt_iff\"><span class=\"name\">UniformInducing</span>.<span class=\"name\">equicontinuousWithinAt_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x‚ÇÄ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hu : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/UniformEmbedding.html#UniformInducing\">UniformInducing</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousWithinAt\">EquicontinuousWithinAt</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span> <span class=\"fn\">x‚ÇÄ</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousWithinAt\">EquicontinuousWithinAt</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">x</span></span></span>)</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">F</span></span>)</span> <span class=\"fn\">S</span> <span class=\"fn\">x‚ÇÄ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L740-L744","name":"UniformInducing.equicontinuousAt_iff","line":740,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformInducing.equicontinuousAt_iff","doc":"Given `u : Œ± ‚Üí Œ≤` a uniform inducing map, a family `ùìï : Œπ ‚Üí X ‚Üí Œ±` is equicontinuous at a point\n`x‚ÇÄ : X` iff the family `ùìï'`, obtained by composing each function of `ùìï` by `u`, is\nequicontinuous at `x‚ÇÄ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformInducing.equicontinuousAt_iff\"><span class=\"name\">UniformInducing</span>.<span class=\"name\">equicontinuousAt_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x‚ÇÄ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><span class=\"fn\">Œ±</span> ‚Üí <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hu : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/UniformEmbedding.html#UniformInducing\">UniformInducing</a> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousAt\">EquicontinuousAt</a> <span class=\"fn\">F</span> <span class=\"fn\">x‚ÇÄ</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousAt\">EquicontinuousAt</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">u</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">x</span></span></span>)</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">F</span></span>)</span> <span class=\"fn\">x‚ÇÄ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L727-L735","name":"Filter.HasBasis.uniformEquicontinuousOn_iff","line":727,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Filter.HasBasis.uniformEquicontinuousOn_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Filter.HasBasis.uniformEquicontinuousOn_iff\"><span class=\"name\">Filter</span>.<span class=\"name\">HasBasis</span>.<span class=\"name\">uniformEquicontinuousOn_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ∫‚ÇÅ : <a href=\"./foundational_types.html\">Type</a> u_13}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ∫‚ÇÇ : <a href=\"./foundational_types.html\">Type</a> u_14}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p‚ÇÅ : <span class=\"fn\"><span class=\"fn\">Œ∫‚ÇÅ</span> ‚Üí <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s‚ÇÅ : <span class=\"fn\"><span class=\"fn\">Œ∫‚ÇÅ</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ≤</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ≤</span></span>)</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p‚ÇÇ : <span class=\"fn\"><span class=\"fn\">Œ∫‚ÇÇ</span> ‚Üí <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s‚ÇÇ : <span class=\"fn\"><span class=\"fn\">Œ∫‚ÇÇ</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span></span>)</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Bases.html#Filter.HasBasis\">Filter.HasBasis</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ≤</span></span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">‚äì</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.principal\">Filter.principal</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">S</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">√óÀ¢</a> <span class=\"fn\">S</span></span>)</span></span></span>)</span> <span class=\"fn\">p‚ÇÅ</span> <span class=\"fn\">s‚ÇÅ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hŒ± : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Bases.html#Filter.HasBasis\">Filter.HasBasis</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>)</span> <span class=\"fn\">p‚ÇÇ</span> <span class=\"fn\">s‚ÇÇ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuousOn\">UniformEquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a>   <span class=\"fn\">‚àÄ (<span class=\"fn\">k‚ÇÇ</span> : <span class=\"fn\">Œ∫‚ÇÇ</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p‚ÇÇ</span> <span class=\"fn\">k‚ÇÇ</span></span> ‚Üí <span class=\"fn\">‚àÉ (k‚ÇÅ : <span class=\"fn\">Œ∫‚ÇÅ</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p‚ÇÅ</span> <span class=\"fn\">k‚ÇÅ</span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">x </span>y : <span class=\"fn\">Œ≤</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">x</span>, <span class=\"fn\">y</span>)</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">s‚ÇÅ</span> <span class=\"fn\">k‚ÇÅ</span></span></span> ‚Üí <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\">x</span></span>, <span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\">y</span></span>)</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">s‚ÇÇ</span> <span class=\"fn\">k‚ÇÇ</span></span></span></span></span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L716-L724","name":"Filter.HasBasis.uniformEquicontinuous_iff","line":716,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Filter.HasBasis.uniformEquicontinuous_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Filter.HasBasis.uniformEquicontinuous_iff\"><span class=\"name\">Filter</span>.<span class=\"name\">HasBasis</span>.<span class=\"name\">uniformEquicontinuous_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ∫‚ÇÅ : <a href=\"./foundational_types.html\">Type</a> u_13}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ∫‚ÇÇ : <a href=\"./foundational_types.html\">Type</a> u_14}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p‚ÇÅ : <span class=\"fn\"><span class=\"fn\">Œ∫‚ÇÅ</span> ‚Üí <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s‚ÇÅ : <span class=\"fn\"><span class=\"fn\">Œ∫‚ÇÅ</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ≤</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ≤</span></span>)</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p‚ÇÇ : <span class=\"fn\"><span class=\"fn\">Œ∫‚ÇÇ</span> ‚Üí <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s‚ÇÇ : <span class=\"fn\"><span class=\"fn\">Œ∫‚ÇÇ</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span></span>)</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Bases.html#Filter.HasBasis\">Filter.HasBasis</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ≤</span></span>)</span> <span class=\"fn\">p‚ÇÅ</span> <span class=\"fn\">s‚ÇÅ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hŒ± : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Bases.html#Filter.HasBasis\">Filter.HasBasis</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>)</span> <span class=\"fn\">p‚ÇÇ</span> <span class=\"fn\">s‚ÇÇ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuous\">UniformEquicontinuous</a> <span class=\"fn\">F</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a>   <span class=\"fn\">‚àÄ (<span class=\"fn\">k‚ÇÇ</span> : <span class=\"fn\">Œ∫‚ÇÇ</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p‚ÇÇ</span> <span class=\"fn\">k‚ÇÇ</span></span> ‚Üí <span class=\"fn\">‚àÉ (k‚ÇÅ : <span class=\"fn\">Œ∫‚ÇÅ</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p‚ÇÅ</span> <span class=\"fn\">k‚ÇÅ</span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">x </span>y : <span class=\"fn\">Œ≤</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">x</span>, <span class=\"fn\">y</span>)</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">s‚ÇÅ</span> <span class=\"fn\">k‚ÇÅ</span></span></span> ‚Üí <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\">x</span></span>, <span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\">y</span></span>)</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">s‚ÇÇ</span> <span class=\"fn\">k‚ÇÇ</span></span></span></span></span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L708-L714","name":"Filter.HasBasis.uniformEquicontinuousOn_iff_right","line":708,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Filter.HasBasis.uniformEquicontinuousOn_iff_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Filter.HasBasis.uniformEquicontinuousOn_iff_right\"><span class=\"name\">Filter</span>.<span class=\"name\">HasBasis</span>.<span class=\"name\">uniformEquicontinuousOn_iff_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ∫ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\">Œ∫</span> ‚Üí <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">Œ∫</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span></span>)</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hŒ± : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Bases.html#Filter.HasBasis\">Filter.HasBasis</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>)</span> <span class=\"fn\">p</span> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuousOn\">UniformEquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a>   <span class=\"fn\">‚àÄ (<span class=\"fn\">k</span> : <span class=\"fn\">Œ∫</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">k</span></span> ‚Üí <span class=\"fn\">‚àÄ·∂† (xy : <span class=\"fn\"><span class=\"fn\">Œ≤</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ≤</span></span>) in <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ≤</span></span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">‚äì</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.principal\">Filter.principal</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">S</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">√óÀ¢</a> <span class=\"fn\">S</span></span>)</span></span></span>, <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\"><span class=\"fn\">xy</span>.1</span></span>, <span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\"><span class=\"fn\">xy</span>.2</span></span>)</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">k</span></span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L700-L705","name":"Filter.HasBasis.uniformEquicontinuous_iff_right","line":700,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Filter.HasBasis.uniformEquicontinuous_iff_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Filter.HasBasis.uniformEquicontinuous_iff_right\"><span class=\"name\">Filter</span>.<span class=\"name\">HasBasis</span>.<span class=\"name\">uniformEquicontinuous_iff_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ∫ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\">Œ∫</span> ‚Üí <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">Œ∫</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span></span>)</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hŒ± : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Bases.html#Filter.HasBasis\">Filter.HasBasis</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>)</span> <span class=\"fn\">p</span> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuous\">UniformEquicontinuous</a> <span class=\"fn\">F</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">k</span> : <span class=\"fn\">Œ∫</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">k</span></span> ‚Üí <span class=\"fn\">‚àÄ·∂† (xy : <span class=\"fn\"><span class=\"fn\">Œ≤</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ≤</span></span>) in <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ≤</span></span>, <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\"><span class=\"fn\">xy</span>.1</span></span>, <span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\"><span class=\"fn\">xy</span>.2</span></span>)</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">k</span></span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L691-L698","name":"Filter.HasBasis.uniformEquicontinuousOn_iff_left","line":691,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Filter.HasBasis.uniformEquicontinuousOn_iff_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Filter.HasBasis.uniformEquicontinuousOn_iff_left\"><span class=\"name\">Filter</span>.<span class=\"name\">HasBasis</span>.<span class=\"name\">uniformEquicontinuousOn_iff_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ∫ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\">Œ∫</span> ‚Üí <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">Œ∫</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ≤</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ≤</span></span>)</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Bases.html#Filter.HasBasis\">Filter.HasBasis</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ≤</span></span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">‚äì</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.principal\">Filter.principal</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">S</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">√óÀ¢</a> <span class=\"fn\">S</span></span>)</span></span></span>)</span> <span class=\"fn\">p</span> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuousOn\">UniformEquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a>   <span class=\"fn\">‚àÄ <span class=\"fn\">U</span> ‚àà <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>, <span class=\"fn\">‚àÉ (k : <span class=\"fn\">Œ∫</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">x </span>y : <span class=\"fn\">Œ≤</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">x</span>, <span class=\"fn\">y</span>)</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">k</span></span></span> ‚Üí <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\">x</span></span>, <span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\">y</span></span>)</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">U</span></span></span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L681-L688","name":"Filter.HasBasis.uniformEquicontinuous_iff_left","line":681,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Filter.HasBasis.uniformEquicontinuous_iff_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Filter.HasBasis.uniformEquicontinuous_iff_left\"><span class=\"name\">Filter</span>.<span class=\"name\">HasBasis</span>.<span class=\"name\">uniformEquicontinuous_iff_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ∫ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\">Œ∫</span> ‚Üí <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">Œ∫</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ≤</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ≤</span></span>)</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Bases.html#Filter.HasBasis\">Filter.HasBasis</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ≤</span></span>)</span> <span class=\"fn\">p</span> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuous\">UniformEquicontinuous</a> <span class=\"fn\">F</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ <span class=\"fn\">U</span> ‚àà <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>, <span class=\"fn\">‚àÉ (k : <span class=\"fn\">Œ∫</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">x </span>y : <span class=\"fn\">Œ≤</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">x</span>, <span class=\"fn\">y</span>)</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">k</span></span></span> ‚Üí <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\">x</span></span>, <span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\">y</span></span>)</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">U</span></span></span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L672-L679","name":"Filter.HasBasis.equicontinuousWithinAt_iff","line":672,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Filter.HasBasis.equicontinuousWithinAt_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Filter.HasBasis.equicontinuousWithinAt_iff\"><span class=\"name\">Filter</span>.<span class=\"name\">HasBasis</span>.<span class=\"name\">equicontinuousWithinAt_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ∫‚ÇÅ : <a href=\"./foundational_types.html\">Type</a> u_13}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ∫‚ÇÇ : <a href=\"./foundational_types.html\">Type</a> u_14}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p‚ÇÅ : <span class=\"fn\"><span class=\"fn\">Œ∫‚ÇÅ</span> ‚Üí <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s‚ÇÅ : <span class=\"fn\"><span class=\"fn\">Œ∫‚ÇÅ</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p‚ÇÇ : <span class=\"fn\"><span class=\"fn\">Œ∫‚ÇÇ</span> ‚Üí <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s‚ÇÇ : <span class=\"fn\"><span class=\"fn\">Œ∫‚ÇÇ</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span></span>)</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x‚ÇÄ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hX : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Bases.html#Filter.HasBasis\">Filter.HasBasis</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhdsWithin\">nhdsWithin</a> <span class=\"fn\">x‚ÇÄ</span> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">p‚ÇÅ</span> <span class=\"fn\">s‚ÇÅ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hŒ± : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Bases.html#Filter.HasBasis\">Filter.HasBasis</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>)</span> <span class=\"fn\">p‚ÇÇ</span> <span class=\"fn\">s‚ÇÇ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousWithinAt\">EquicontinuousWithinAt</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span> <span class=\"fn\">x‚ÇÄ</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a>   <span class=\"fn\">‚àÄ (<span class=\"fn\">k‚ÇÇ</span> : <span class=\"fn\">Œ∫‚ÇÇ</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p‚ÇÇ</span> <span class=\"fn\">k‚ÇÇ</span></span> ‚Üí <span class=\"fn\">‚àÉ (k‚ÇÅ : <span class=\"fn\">Œ∫‚ÇÅ</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p‚ÇÅ</span> <span class=\"fn\">k‚ÇÅ</span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\">‚àÄ <span class=\"fn\">x</span> ‚àà <span class=\"fn\"><span class=\"fn\">s‚ÇÅ</span> <span class=\"fn\">k‚ÇÅ</span></span>, <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\">x‚ÇÄ</span></span>, <span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\">x</span></span>)</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">s‚ÇÇ</span> <span class=\"fn\">k‚ÇÇ</span></span></span></span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L662-L669","name":"Filter.HasBasis.equicontinuousAt_iff","line":662,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Filter.HasBasis.equicontinuousAt_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Filter.HasBasis.equicontinuousAt_iff\"><span class=\"name\">Filter</span>.<span class=\"name\">HasBasis</span>.<span class=\"name\">equicontinuousAt_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ∫‚ÇÅ : <a href=\"./foundational_types.html\">Type</a> u_13}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ∫‚ÇÇ : <a href=\"./foundational_types.html\">Type</a> u_14}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p‚ÇÅ : <span class=\"fn\"><span class=\"fn\">Œ∫‚ÇÅ</span> ‚Üí <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s‚ÇÅ : <span class=\"fn\"><span class=\"fn\">Œ∫‚ÇÅ</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p‚ÇÇ : <span class=\"fn\"><span class=\"fn\">Œ∫‚ÇÇ</span> ‚Üí <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s‚ÇÇ : <span class=\"fn\"><span class=\"fn\">Œ∫‚ÇÇ</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span></span>)</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x‚ÇÄ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hX : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Bases.html#Filter.HasBasis\">Filter.HasBasis</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">x‚ÇÄ</span></span>)</span> <span class=\"fn\">p‚ÇÅ</span> <span class=\"fn\">s‚ÇÅ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hŒ± : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Bases.html#Filter.HasBasis\">Filter.HasBasis</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>)</span> <span class=\"fn\">p‚ÇÇ</span> <span class=\"fn\">s‚ÇÇ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousAt\">EquicontinuousAt</a> <span class=\"fn\">F</span> <span class=\"fn\">x‚ÇÄ</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">k‚ÇÇ</span> : <span class=\"fn\">Œ∫‚ÇÇ</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p‚ÇÇ</span> <span class=\"fn\">k‚ÇÇ</span></span> ‚Üí <span class=\"fn\">‚àÉ (k‚ÇÅ : <span class=\"fn\">Œ∫‚ÇÅ</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p‚ÇÅ</span> <span class=\"fn\">k‚ÇÅ</span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\">‚àÄ <span class=\"fn\">x</span> ‚àà <span class=\"fn\"><span class=\"fn\">s‚ÇÅ</span> <span class=\"fn\">k‚ÇÅ</span></span>, <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\">x‚ÇÄ</span></span>, <span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\">x</span></span>)</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">s‚ÇÇ</span> <span class=\"fn\">k‚ÇÇ</span></span></span></span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L655-L660","name":"Filter.HasBasis.equicontinuousWithinAt_iff_right","line":655,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Filter.HasBasis.equicontinuousWithinAt_iff_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Filter.HasBasis.equicontinuousWithinAt_iff_right\"><span class=\"name\">Filter</span>.<span class=\"name\">HasBasis</span>.<span class=\"name\">equicontinuousWithinAt_iff_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ∫ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\">Œ∫</span> ‚Üí <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">Œ∫</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span></span>)</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x‚ÇÄ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hŒ± : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Bases.html#Filter.HasBasis\">Filter.HasBasis</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>)</span> <span class=\"fn\">p</span> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousWithinAt\">EquicontinuousWithinAt</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span> <span class=\"fn\">x‚ÇÄ</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">k</span> : <span class=\"fn\">Œ∫</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">k</span></span> ‚Üí <span class=\"fn\">‚àÄ·∂† (x : <span class=\"fn\">X</span>) in <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhdsWithin\">nhdsWithin</a> <span class=\"fn\">x‚ÇÄ</span> <span class=\"fn\">S</span></span>, <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\">x‚ÇÄ</span></span>, <span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\">x</span></span>)</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">k</span></span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L647-L652","name":"Filter.HasBasis.equicontinuousAt_iff_right","line":647,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Filter.HasBasis.equicontinuousAt_iff_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Filter.HasBasis.equicontinuousAt_iff_right\"><span class=\"name\">Filter</span>.<span class=\"name\">HasBasis</span>.<span class=\"name\">equicontinuousAt_iff_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ∫ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\">Œ∫</span> ‚Üí <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">Œ∫</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <span class=\"fn\">Œ±</span></span>)</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x‚ÇÄ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hŒ± : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Bases.html#Filter.HasBasis\">Filter.HasBasis</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>)</span> <span class=\"fn\">p</span> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousAt\">EquicontinuousAt</a> <span class=\"fn\">F</span> <span class=\"fn\">x‚ÇÄ</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">k</span> : <span class=\"fn\">Œ∫</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">k</span></span> ‚Üí <span class=\"fn\">‚àÄ·∂† (x : <span class=\"fn\">X</span>) in <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">x‚ÇÄ</span></span>, <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\">x‚ÇÄ</span></span>, <span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\">x</span></span>)</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">k</span></span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L640-L645","name":"Filter.HasBasis.equicontinuousWithinAt_iff_left","line":640,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Filter.HasBasis.equicontinuousWithinAt_iff_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Filter.HasBasis.equicontinuousWithinAt_iff_left\"><span class=\"name\">Filter</span>.<span class=\"name\">HasBasis</span>.<span class=\"name\">equicontinuousWithinAt_iff_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ∫ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\">Œ∫</span> ‚Üí <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">Œ∫</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x‚ÇÄ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hX : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Bases.html#Filter.HasBasis\">Filter.HasBasis</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhdsWithin\">nhdsWithin</a> <span class=\"fn\">x‚ÇÄ</span> <span class=\"fn\">S</span></span>)</span> <span class=\"fn\">p</span> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousWithinAt\">EquicontinuousWithinAt</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span> <span class=\"fn\">x‚ÇÄ</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ <span class=\"fn\">U</span> ‚àà <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>, <span class=\"fn\">‚àÉ (k : <span class=\"fn\">Œ∫</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\">‚àÄ <span class=\"fn\">x</span> ‚àà <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">k</span></span>, <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\">x‚ÇÄ</span></span>, <span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\">x</span></span>)</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">U</span></span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L632-L637","name":"Filter.HasBasis.equicontinuousAt_iff_left","line":632,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Filter.HasBasis.equicontinuousAt_iff_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Filter.HasBasis.equicontinuousAt_iff_left\"><span class=\"name\">Filter</span>.<span class=\"name\">HasBasis</span>.<span class=\"name\">equicontinuousAt_iff_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ∫ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><span class=\"fn\">Œ∫</span> ‚Üí <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">Œ∫</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x‚ÇÄ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hX : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Bases.html#Filter.HasBasis\">Filter.HasBasis</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">x‚ÇÄ</span></span>)</span> <span class=\"fn\">p</span> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousAt\">EquicontinuousAt</a> <span class=\"fn\">F</span> <span class=\"fn\">x‚ÇÄ</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ <span class=\"fn\">U</span> ‚àà <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>, <span class=\"fn\">‚àÉ (k : <span class=\"fn\">Œ∫</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#And\">‚àß</a> <span class=\"fn\">‚àÄ <span class=\"fn\">x</span> ‚àà <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">k</span></span>, <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\">x‚ÇÄ</span></span>, <span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\">x</span></span>)</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">U</span></span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L624-L630","name":"uniformEquicontinuousOn_iInf_dom","line":624,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#uniformEquicontinuousOn_iInf_dom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#uniformEquicontinuousOn_iInf_dom\"><span class=\"name\">uniformEquicontinuousOn_iInf_dom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ∫ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤' : <a href=\"./foundational_types.html\">Type</a> u_10}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><span class=\"fn\">Œ∫</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤'</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤'</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ≤'</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\">Œ∫</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hk : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuousOn\">UniformEquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuousOn\">UniformEquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L618-L622","name":"uniformEquicontinuous_iInf_dom","line":618,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#uniformEquicontinuous_iInf_dom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#uniformEquicontinuous_iInf_dom\"><span class=\"name\">uniformEquicontinuous_iInf_dom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ∫ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤' : <a href=\"./foundational_types.html\">Type</a> u_10}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><span class=\"fn\">Œ∫</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤'</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤'</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\">Œ∫</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hk : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuous\">UniformEquicontinuous</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuous\">UniformEquicontinuous</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L613-L616","name":"equicontinuousOn_iInf_dom","line":613,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousOn_iInf_dom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousOn_iInf_dom\"><span class=\"name\">equicontinuousOn_iInf_dom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ∫ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X' : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><span class=\"fn\">Œ∫</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X'</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X'</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X'</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\">Œ∫</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hk : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L608-L611","name":"equicontinuous_iInf_dom","line":608,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuous_iInf_dom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuous_iInf_dom\"><span class=\"name\">equicontinuous_iInf_dom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ∫ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X' : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><span class=\"fn\">Œ∫</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X'</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X'</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\">Œ∫</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hk : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Equicontinuous\">Equicontinuous</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Equicontinuous\">Equicontinuous</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L602-L606","name":"equicontinuousAt_iInf_dom","line":602,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousAt_iInf_dom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousAt_iInf_dom\"><span class=\"name\">equicontinuousAt_iInf_dom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ∫ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X' : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><span class=\"fn\">Œ∫</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X'</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X'</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x‚ÇÄ : <span class=\"fn\">X'</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\">Œ∫</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hk : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousAt\">EquicontinuousAt</a> <span class=\"fn\">F</span> <span class=\"fn\">x‚ÇÄ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousAt\">EquicontinuousAt</a> <span class=\"fn\">F</span> <span class=\"fn\">x‚ÇÄ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L594-L600","name":"equicontinuousWithinAt_iInf_dom","line":594,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousWithinAt_iInf_dom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousWithinAt_iInf_dom\"><span class=\"name\">equicontinuousWithinAt_iInf_dom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ∫ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X' : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><span class=\"fn\">Œ∫</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X'</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X'</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X'</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x‚ÇÄ : <span class=\"fn\">X'</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\">Œ∫</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hk : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousWithinAt\">EquicontinuousWithinAt</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span> <span class=\"fn\">x‚ÇÄ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousWithinAt\">EquicontinuousWithinAt</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span> <span class=\"fn\">x‚ÇÄ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L587-L592","name":"uniformEquicontinuousOn_iInf_rng","line":587,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#uniformEquicontinuousOn_iInf_rng","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#uniformEquicontinuousOn_iInf_rng\"><span class=\"name\">uniformEquicontinuousOn_iInf_rng</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ∫ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ±' : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><span class=\"fn\">Œ∫</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±'</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±'</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuousOn\">UniformEquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">k</span> : <span class=\"fn\">Œ∫</span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuousOn\">UniformEquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L582-L585","name":"uniformEquicontinuous_iInf_rng","line":582,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#uniformEquicontinuous_iInf_rng","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#uniformEquicontinuous_iInf_rng\"><span class=\"name\">uniformEquicontinuous_iInf_rng</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ∫ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ±' : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><span class=\"fn\">Œ∫</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±'</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±'</span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuous\">UniformEquicontinuous</a> <span class=\"fn\">F</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">k</span> : <span class=\"fn\">Œ∫</span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuous\">UniformEquicontinuous</a> <span class=\"fn\">F</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L577-L580","name":"equicontinuousOn_iInf_rng","line":577,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousOn_iInf_rng","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousOn_iInf_rng\"><span class=\"name\">equicontinuousOn_iInf_rng</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ∫ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ±' : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><span class=\"fn\">Œ∫</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±'</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±'</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">k</span> : <span class=\"fn\">Œ∫</span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L572-L575","name":"equicontinuous_iInf_rng","line":572,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuous_iInf_rng","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuous_iInf_rng\"><span class=\"name\">equicontinuous_iInf_rng</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ∫ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ±' : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><span class=\"fn\">Œ∫</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±'</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±'</span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Equicontinuous\">Equicontinuous</a> <span class=\"fn\">F</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">k</span> : <span class=\"fn\">Œ∫</span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Equicontinuous\">Equicontinuous</a> <span class=\"fn\">F</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L567-L570","name":"equicontinuousAt_iInf_rng","line":567,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousAt_iInf_rng","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousAt_iInf_rng\"><span class=\"name\">equicontinuousAt_iInf_rng</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ∫ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ±' : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><span class=\"fn\">Œ∫</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±'</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±'</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x‚ÇÄ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousAt\">EquicontinuousAt</a> <span class=\"fn\">F</span> <span class=\"fn\">x‚ÇÄ</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">k</span> : <span class=\"fn\">Œ∫</span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousAt\">EquicontinuousAt</a> <span class=\"fn\">F</span> <span class=\"fn\">x‚ÇÄ</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L560-L565","name":"equicontinuousWithinAt_iInf_rng","line":560,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousWithinAt_iInf_rng","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousWithinAt_iInf_rng\"><span class=\"name\">equicontinuousWithinAt_iInf_rng</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ∫ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ±' : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{u : <span class=\"fn\"><span class=\"fn\">Œ∫</span> ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±'</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±'</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x‚ÇÄ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousWithinAt\">EquicontinuousWithinAt</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span> <span class=\"fn\">x‚ÇÄ</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">k</span> : <span class=\"fn\">Œ∫</span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousWithinAt\">EquicontinuousWithinAt</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span> <span class=\"fn\">x‚ÇÄ</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L555-L558","name":"uniformEquicontinuousOn_iff_uniformContinuousOn","line":555,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#uniformEquicontinuousOn_iff_uniformContinuousOn","doc":"A family `ùìï : Œπ ‚Üí Œ≤ ‚Üí Œ±` is uniformly equicontinuous on `S` iff the function\n`swap ùìï : Œ≤ ‚Üí Œπ ‚Üí Œ±` is uniformly continuous on `S`\n*when `Œπ ‚Üí Œ±` is equipped with the uniform structure of uniform convergence*. This is very useful\nfor developping the equicontinuity API, but it should not be used directly for other purposes. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#uniformEquicontinuousOn_iff_uniformContinuousOn\"><span class=\"name\">uniformEquicontinuousOn_iff_uniformContinuousOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuousOn\">UniformEquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformContinuousOn\">UniformContinuousOn</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">‚áë<span class=\"fn\">UniformFun.ofFun</span></span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.swap\">Function.swap</a> <span class=\"fn\">F</span></span></span>)</span> <span class=\"fn\">S</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L545-L548","name":"uniformEquicontinuous_iff_uniformContinuous","line":545,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#uniformEquicontinuous_iff_uniformContinuous","doc":"A family `ùìï : Œπ ‚Üí Œ≤ ‚Üí Œ±` is uniformly equicontinuous iff the function `swap ùìï : Œ≤ ‚Üí Œπ ‚Üí Œ±` is\nuniformly continuous *when `Œπ ‚Üí Œ±` is equipped with the uniform structure of uniform convergence*.\nThis is very useful for developping the equicontinuity API, but it should not be used directly\nfor other purposes. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#uniformEquicontinuous_iff_uniformContinuous\"><span class=\"name\">uniformEquicontinuous_iff_uniformContinuous</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuous\">UniformEquicontinuous</a> <span class=\"fn\">F</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">‚áë<span class=\"fn\">UniformFun.ofFun</span></span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.swap\">Function.swap</a> <span class=\"fn\">F</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L537-L539","name":"equicontinuousOn_iff_continuousOn","line":537,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousOn_iff_continuousOn","doc":"A family `ùìï : Œπ ‚Üí X ‚Üí Œ±` is equicontinuous on `S` iff the function `swap ùìï : X ‚Üí Œπ ‚Üí Œ±` is\ncontinuous on `S` *when `Œπ ‚Üí Œ±` is equipped with the topology of uniform convergence*. This is\nvery useful for developping the equicontinuity API, but it should not be used directly for other\npurposes. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousOn_iff_continuousOn\"><span class=\"name\">equicontinuousOn_iff_continuousOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">‚áë<span class=\"fn\">UniformFun.ofFun</span></span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.swap\">Function.swap</a> <span class=\"fn\">F</span></span></span>)</span> <span class=\"fn\">S</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L528-L530","name":"equicontinuous_iff_continuous","line":528,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuous_iff_continuous","doc":"A family `ùìï : Œπ ‚Üí X ‚Üí Œ±` is equicontinuous iff the function `swap ùìï : X ‚Üí Œπ ‚Üí Œ±` is\ncontinuous *when `Œπ ‚Üí Œ±` is equipped with the topology of uniform convergence*. This is\nvery useful for developping the equicontinuity API, but it should not be used directly for other\npurposes. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuous_iff_continuous\"><span class=\"name\">equicontinuous_iff_continuous</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Equicontinuous\">Equicontinuous</a> <span class=\"fn\">F</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">‚áë<span class=\"fn\">UniformFun.ofFun</span></span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.swap\">Function.swap</a> <span class=\"fn\">F</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L518-L522","name":"equicontinuousWithinAt_iff_continuousWithinAt","line":518,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousWithinAt_iff_continuousWithinAt","doc":"A family `ùìï : Œπ ‚Üí X ‚Üí Œ±` is equicontinuous at `x‚ÇÄ` within `S` iff the function\n`swap ùìï : X ‚Üí Œπ ‚Üí Œ±` is continuous at `x‚ÇÄ` within `S`\n*when `Œπ ‚Üí Œ±` is equipped with the topology of uniform convergence*. This is very useful for\ndevelopping the equicontinuity API, but it should not be used directly for other purposes. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousWithinAt_iff_continuousWithinAt\"><span class=\"name\">equicontinuousWithinAt_iff_continuousWithinAt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x‚ÇÄ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousWithinAt\">EquicontinuousWithinAt</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span> <span class=\"fn\">x‚ÇÄ</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousWithinAt\">ContinuousWithinAt</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">‚áë<span class=\"fn\">UniformFun.ofFun</span></span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.swap\">Function.swap</a> <span class=\"fn\">F</span></span></span>)</span> <span class=\"fn\">S</span> <span class=\"fn\">x‚ÇÄ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L508-L511","name":"equicontinuousAt_iff_continuousAt","line":508,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousAt_iff_continuousAt","doc":"A family `ùìï : Œπ ‚Üí X ‚Üí Œ±` is equicontinuous at `x‚ÇÄ` iff the function `swap ùìï : X ‚Üí Œπ ‚Üí Œ±` is\ncontinuous at `x‚ÇÄ` *when `Œπ ‚Üí Œ±` is equipped with the topology of uniform convergence*. This is\nvery useful for developping the equicontinuity API, but it should not be used directly for other\npurposes. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousAt_iff_continuousAt\"><span class=\"name\">equicontinuousAt_iff_continuousAt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x‚ÇÄ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousAt\">EquicontinuousAt</a> <span class=\"fn\">F</span> <span class=\"fn\">x‚ÇÄ</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousAt\">ContinuousAt</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">‚áë<span class=\"fn\">UniformFun.ofFun</span></span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.swap\">Function.swap</a> <span class=\"fn\">F</span></span></span>)</span> <span class=\"fn\">x‚ÇÄ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L495-L498","name":"uniformEquicontinuousOn_iff_range","line":495,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#uniformEquicontinuousOn_iff_range","doc":"A family `ùìï : Œπ ‚Üí Œ≤ ‚Üí Œ±` is uniformly equicontinuous on `S` iff `range ùìï` is uniformly\nequicontinuous on `S`, i.e the family `(‚Üë) : range F ‚Üí Œ≤ ‚Üí Œ±` is uniformly equicontinuous on `S`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#uniformEquicontinuousOn_iff_range\"><span class=\"name\">uniformEquicontinuousOn_iff_range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuousOn\">UniformEquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuousOn\">UniformEquicontinuousOn</a> <span class=\"fn\">Subtype.val</span> <span class=\"fn\">S</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L487-L490","name":"uniformEquicontinuous_iff_range","line":487,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#uniformEquicontinuous_iff_range","doc":"A family `ùìï : Œπ ‚Üí Œ≤ ‚Üí Œ±` is uniformly equicontinuous iff `range ùìï` is uniformly equicontinuous,\ni.e the family `(‚Üë) : range F ‚Üí Œ≤ ‚Üí Œ±` is uniformly equicontinuous. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#uniformEquicontinuous_iff_range\"><span class=\"name\">uniformEquicontinuous_iff_range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuous\">UniformEquicontinuous</a> <span class=\"fn\">F</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuous\">UniformEquicontinuous</a> <span class=\"fn\">Subtype.val</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L481-L483","name":"equicontinuousOn_iff_range","line":481,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousOn_iff_range","doc":"A family `ùìï : Œπ ‚Üí X ‚Üí Œ±` is equicontinuous on `S` iff `range ùìï` is equicontinuous on `S`,\ni.e the family `(‚Üë) : range F ‚Üí X ‚Üí Œ±` is equicontinuous on `S`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousOn_iff_range\"><span class=\"name\">equicontinuousOn_iff_range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">Subtype.val</span> <span class=\"fn\">S</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L474-L476","name":"equicontinuous_iff_range","line":474,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuous_iff_range","doc":"A family `ùìï : Œπ ‚Üí X ‚Üí Œ±` is equicontinuous iff `range ùìï` is equicontinuous,\ni.e the family `(‚Üë) : range F ‚Üí X ‚Üí Œ±` is equicontinuous. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuous_iff_range\"><span class=\"name\">equicontinuous_iff_range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Equicontinuous\">Equicontinuous</a> <span class=\"fn\">F</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Equicontinuous\">Equicontinuous</a> <span class=\"fn\">Subtype.val</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L468-L470","name":"equicontinuousWithinAt_iff_range","line":468,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousWithinAt_iff_range","doc":"A family `ùìï : Œπ ‚Üí X ‚Üí Œ±` is equicontinuous at `x‚ÇÄ` within `S` iff `range ùìï` is equicontinuous\nat `x‚ÇÄ` within `S`, i.e the family `(‚Üë) : range F ‚Üí X ‚Üí Œ±` is equicontinuous at `x‚ÇÄ` within `S`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousWithinAt_iff_range\"><span class=\"name\">equicontinuousWithinAt_iff_range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x‚ÇÄ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousWithinAt\">EquicontinuousWithinAt</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span> <span class=\"fn\">x‚ÇÄ</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousWithinAt\">EquicontinuousWithinAt</a> <span class=\"fn\">Subtype.val</span> <span class=\"fn\">S</span> <span class=\"fn\">x‚ÇÄ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L461-L463","name":"equicontinuousAt_iff_range","line":461,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousAt_iff_range","doc":"A family `ùìï : Œπ ‚Üí X ‚Üí Œ±` is equicontinuous at `x‚ÇÄ` iff `range ùìï` is equicontinuous at `x‚ÇÄ`,\ni.e the family `(‚Üë) : range F ‚Üí X ‚Üí Œ±` is equicontinuous at `x‚ÇÄ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousAt_iff_range\"><span class=\"name\">equicontinuousAt_iff_range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x‚ÇÄ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousAt\">EquicontinuousAt</a> <span class=\"fn\">F</span> <span class=\"fn\">x‚ÇÄ</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousAt\">EquicontinuousAt</a> <span class=\"fn\">Subtype.val</span> <span class=\"fn\">x‚ÇÄ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L455-L457","name":"Set.UniformEquicontinuousOn.mono","line":455,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.UniformEquicontinuousOn.mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.UniformEquicontinuousOn.mono\"><span class=\"name\">Set</span>.<span class=\"name\">UniformEquicontinuousOn</span>.<span class=\"name\">mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H' : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.UniformEquicontinuousOn\">Set.UniformEquicontinuousOn</a> <span class=\"fn\">H</span> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hH : <span class=\"fn\"><span class=\"fn\">H'</span> <a href=\"./Init/Core.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.UniformEquicontinuousOn\">Set.UniformEquicontinuousOn</a> <span class=\"fn\">H'</span> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L450-L452","name":"Set.UniformEquicontinuous.mono","line":450,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.UniformEquicontinuous.mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.UniformEquicontinuous.mono\"><span class=\"name\">Set</span>.<span class=\"name\">UniformEquicontinuous</span>.<span class=\"name\">mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H' : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.UniformEquicontinuous\">Set.UniformEquicontinuous</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hH : <span class=\"fn\"><span class=\"fn\">H'</span> <a href=\"./Init/Core.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.UniformEquicontinuous\">Set.UniformEquicontinuous</a> <span class=\"fn\">H'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L446-L448","name":"UniformEquicontinuousOn.comp","line":446,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuousOn.comp","doc":"Taking sub-families preserves uniform equicontinuity on a subset. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuousOn.comp\"><span class=\"name\">UniformEquicontinuousOn</span>.<span class=\"name\">comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ∫ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuousOn\">UniformEquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(u : <span class=\"fn\"><span class=\"fn\">Œ∫</span> ‚Üí <span class=\"fn\">Œπ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuousOn\">UniformEquicontinuousOn</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">u</span></span>)</span> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L441-L442","name":"UniformEquicontinuous.comp","line":441,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuous.comp","doc":"Taking sub-families preserves uniform equicontinuity. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuous.comp\"><span class=\"name\">UniformEquicontinuous</span>.<span class=\"name\">comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ∫ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuous\">UniformEquicontinuous</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(u : <span class=\"fn\"><span class=\"fn\">Œ∫</span> ‚Üí <span class=\"fn\">Œπ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuous\">UniformEquicontinuous</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">u</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L436-L438","name":"Set.EquicontinuousOn.mono","line":436,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.EquicontinuousOn.mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.EquicontinuousOn.mono\"><span class=\"name\">Set</span>.<span class=\"name\">EquicontinuousOn</span>.<span class=\"name\">mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H' : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.EquicontinuousOn\">Set.EquicontinuousOn</a> <span class=\"fn\">H</span> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hH : <span class=\"fn\"><span class=\"fn\">H'</span> <a href=\"./Init/Core.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.EquicontinuousOn\">Set.EquicontinuousOn</a> <span class=\"fn\">H'</span> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L431-L433","name":"Set.Equicontinuous.mono","line":431,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.Equicontinuous.mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.Equicontinuous.mono\"><span class=\"name\">Set</span>.<span class=\"name\">Equicontinuous</span>.<span class=\"name\">mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H' : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.Equicontinuous\">Set.Equicontinuous</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hH : <span class=\"fn\"><span class=\"fn\">H'</span> <a href=\"./Init/Core.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.Equicontinuous\">Set.Equicontinuous</a> <span class=\"fn\">H'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L428-L429","name":"EquicontinuousOn.comp","line":428,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn.comp","doc":"Taking sub-families preserves equicontinuity on a subset. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn.comp\"><span class=\"name\">EquicontinuousOn</span>.<span class=\"name\">comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ∫ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(u : <span class=\"fn\"><span class=\"fn\">Œ∫</span> ‚Üí <span class=\"fn\">Œπ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">u</span></span>)</span> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L423-L424","name":"Equicontinuous.comp","line":423,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Equicontinuous.comp","doc":"Taking sub-families preserves equicontinuity. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Equicontinuous.comp\"><span class=\"name\">Equicontinuous</span>.<span class=\"name\">comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ∫ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Equicontinuous\">Equicontinuous</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(u : <span class=\"fn\"><span class=\"fn\">Œ∫</span> ‚Üí <span class=\"fn\">Œπ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Equicontinuous\">Equicontinuous</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">u</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L418-L420","name":"Set.EquicontinuousWithinAt.mono","line":418,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.EquicontinuousWithinAt.mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.EquicontinuousWithinAt.mono\"><span class=\"name\">Set</span>.<span class=\"name\">EquicontinuousWithinAt</span>.<span class=\"name\">mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H' : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x‚ÇÄ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.EquicontinuousWithinAt\">Set.EquicontinuousWithinAt</a> <span class=\"fn\">H</span> <span class=\"fn\">S</span> <span class=\"fn\">x‚ÇÄ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hH : <span class=\"fn\"><span class=\"fn\">H'</span> <a href=\"./Init/Core.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.EquicontinuousWithinAt\">Set.EquicontinuousWithinAt</a> <span class=\"fn\">H'</span> <span class=\"fn\">S</span> <span class=\"fn\">x‚ÇÄ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L413-L415","name":"Set.EquicontinuousAt.mono","line":413,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.EquicontinuousAt.mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.EquicontinuousAt.mono\"><span class=\"name\">Set</span>.<span class=\"name\">EquicontinuousAt</span>.<span class=\"name\">mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H' : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x‚ÇÄ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.EquicontinuousAt\">Set.EquicontinuousAt</a> <span class=\"fn\">H</span> <span class=\"fn\">x‚ÇÄ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hH : <span class=\"fn\"><span class=\"fn\">H'</span> <a href=\"./Init/Core.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.EquicontinuousAt\">Set.EquicontinuousAt</a> <span class=\"fn\">H'</span> <span class=\"fn\">x‚ÇÄ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L408-L411","name":"EquicontinuousWithinAt.comp","line":408,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousWithinAt.comp","doc":"Taking sub-families preserves equicontinuity at a point within a subset. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousWithinAt.comp\"><span class=\"name\">EquicontinuousWithinAt</span>.<span class=\"name\">comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ∫ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x‚ÇÄ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousWithinAt\">EquicontinuousWithinAt</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span> <span class=\"fn\">x‚ÇÄ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(u : <span class=\"fn\"><span class=\"fn\">Œ∫</span> ‚Üí <span class=\"fn\">Œπ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousWithinAt\">EquicontinuousWithinAt</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">u</span></span>)</span> <span class=\"fn\">S</span> <span class=\"fn\">x‚ÇÄ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L403-L404","name":"EquicontinuousAt.comp","line":403,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousAt.comp","doc":"Taking sub-families preserves equicontinuity at a point. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousAt.comp\"><span class=\"name\">EquicontinuousAt</span>.<span class=\"name\">comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ∫ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x‚ÇÄ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousAt\">EquicontinuousAt</a> <span class=\"fn\">F</span> <span class=\"fn\">x‚ÇÄ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(u : <span class=\"fn\"><span class=\"fn\">Œ∫</span> ‚Üí <span class=\"fn\">Œπ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousAt\">EquicontinuousAt</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">u</span></span>)</span> <span class=\"fn\">x‚ÇÄ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L397-L400","name":"Set.UniformEquicontinuousOn.uniformContinuousOn_of_mem","line":397,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.UniformEquicontinuousOn.uniformContinuousOn_of_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.UniformEquicontinuousOn.uniformContinuousOn_of_mem\"><span class=\"name\">Set</span>.<span class=\"name\">UniformEquicontinuousOn</span>.<span class=\"name\">uniformContinuousOn_of_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.UniformEquicontinuousOn\">Set.UniformEquicontinuousOn</a> <span class=\"fn\">H</span> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformContinuousOn\">UniformContinuousOn</a> <span class=\"fn\">f</span> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L392-L394","name":"Set.UniformEquicontinuous.uniformContinuous_of_mem","line":392,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.UniformEquicontinuous.uniformContinuous_of_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.UniformEquicontinuous.uniformContinuous_of_mem\"><span class=\"name\">Set</span>.<span class=\"name\">UniformEquicontinuous</span>.<span class=\"name\">uniformContinuous_of_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.UniformEquicontinuous\">Set.UniformEquicontinuous</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L387-L390","name":"UniformEquicontinuousOn.uniformContinuousOn","line":387,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuousOn.uniformContinuousOn","doc":"Each function of a family uniformly equicontinuous on `S` is uniformly continuous on `S`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuousOn.uniformContinuousOn\"><span class=\"name\">UniformEquicontinuousOn</span>.<span class=\"name\">uniformContinuousOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuousOn\">UniformEquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">Œπ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformContinuousOn\">UniformContinuousOn</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L381-L383","name":"UniformEquicontinuous.uniformContinuous","line":381,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuous.uniformContinuous","doc":"Each function of a uniformly equicontinuous family is uniformly continuous. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuous.uniformContinuous\"><span class=\"name\">UniformEquicontinuous</span>.<span class=\"name\">uniformContinuous</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuous\">UniformEquicontinuous</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">Œπ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L376-L378","name":"Set.EquicontinuousOn.continuousOn_of_mem","line":376,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.EquicontinuousOn.continuousOn_of_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.EquicontinuousOn.continuousOn_of_mem\"><span class=\"name\">Set</span>.<span class=\"name\">EquicontinuousOn</span>.<span class=\"name\">continuousOn_of_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.EquicontinuousOn\">Set.EquicontinuousOn</a> <span class=\"fn\">H</span> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">f</span> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L371-L373","name":"Set.Equicontinuous.continuous_of_mem","line":371,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.Equicontinuous.continuous_of_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.Equicontinuous.continuous_of_mem\"><span class=\"name\">Set</span>.<span class=\"name\">Equicontinuous</span>.<span class=\"name\">continuous_of_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.Equicontinuous\">Set.Equicontinuous</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L367-L369","name":"EquicontinuousOn.continuousOn","line":367,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn.continuousOn","doc":"Each function of a family equicontinuous on `S` is continuous on `S`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn.continuousOn\"><span class=\"name\">EquicontinuousOn</span>.<span class=\"name\">continuousOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">Œπ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L361-L363","name":"Equicontinuous.continuous","line":361,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Equicontinuous.continuous","doc":"Each function of an equicontinuous family is continuous. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Equicontinuous.continuous\"><span class=\"name\">Equicontinuous</span>.<span class=\"name\">continuous</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Equicontinuous\">Equicontinuous</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">Œπ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L355-L358","name":"Set.EquicontinuousWithinAt.continuousWithinAt_of_mem","line":355,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.EquicontinuousWithinAt.continuousWithinAt_of_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.EquicontinuousWithinAt.continuousWithinAt_of_mem\"><span class=\"name\">Set</span>.<span class=\"name\">EquicontinuousWithinAt</span>.<span class=\"name\">continuousWithinAt_of_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x‚ÇÄ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.EquicontinuousWithinAt\">Set.EquicontinuousWithinAt</a> <span class=\"fn\">H</span> <span class=\"fn\">S</span> <span class=\"fn\">x‚ÇÄ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousWithinAt\">ContinuousWithinAt</a> <span class=\"fn\">f</span> <span class=\"fn\">S</span> <span class=\"fn\">x‚ÇÄ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L350-L352","name":"Set.EquicontinuousAt.continuousAt_of_mem","line":350,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.EquicontinuousAt.continuousAt_of_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.EquicontinuousAt.continuousAt_of_mem\"><span class=\"name\">Set</span>.<span class=\"name\">EquicontinuousAt</span>.<span class=\"name\">continuousAt_of_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x‚ÇÄ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.EquicontinuousAt\">Set.EquicontinuousAt</a> <span class=\"fn\">H</span> <span class=\"fn\">x‚ÇÄ</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">H</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousAt\">ContinuousAt</a> <span class=\"fn\">f</span> <span class=\"fn\">x‚ÇÄ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L345-L348","name":"EquicontinuousWithinAt.continuousWithinAt","line":345,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousWithinAt.continuousWithinAt","doc":"Each function of a family equicontinuous at `x‚ÇÄ` within `S` is continuous at `x‚ÇÄ` within `S`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousWithinAt.continuousWithinAt\"><span class=\"name\">EquicontinuousWithinAt</span>.<span class=\"name\">continuousWithinAt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x‚ÇÄ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousWithinAt\">EquicontinuousWithinAt</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span> <span class=\"fn\">x‚ÇÄ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">Œπ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousWithinAt\">ContinuousWithinAt</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">S</span> <span class=\"fn\">x‚ÇÄ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L339-L341","name":"EquicontinuousAt.continuousAt","line":339,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousAt.continuousAt","doc":"Each function of a family equicontinuous at `x‚ÇÄ` is continuous at `x‚ÇÄ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousAt.continuousAt\"><span class=\"name\">EquicontinuousAt</span>.<span class=\"name\">continuousAt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x‚ÇÄ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousAt\">EquicontinuousAt</a> <span class=\"fn\">F</span> <span class=\"fn\">x‚ÇÄ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">Œπ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousAt\">ContinuousAt</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">x‚ÇÄ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L333-L336","name":"UniformEquicontinuousOn.equicontinuousOn","line":333,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuousOn.equicontinuousOn","doc":"Uniform equicontinuity on a subset implies equicontinuity on that subset. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuousOn.equicontinuousOn\"><span class=\"name\">UniformEquicontinuousOn</span>.<span class=\"name\">equicontinuousOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuousOn\">UniformEquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L327-L329","name":"UniformEquicontinuous.equicontinuous","line":327,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuous.equicontinuous","doc":"Uniform equicontinuity implies equicontinuity. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuous.equicontinuous\"><span class=\"name\">UniformEquicontinuous</span>.<span class=\"name\">equicontinuous</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuous\">UniformEquicontinuous</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Equicontinuous\">Equicontinuous</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L319-L323","name":"equicontinuousAt_iff_pair","line":319,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousAt_iff_pair","doc":"Reformulation of equicontinuity at `x‚ÇÄ` comparing two variables near `x‚ÇÄ` instead of comparing\nonly one with `x‚ÇÄ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousAt_iff_pair\"><span class=\"name\">equicontinuousAt_iff_pair</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x‚ÇÄ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousAt\">EquicontinuousAt</a> <span class=\"fn\">F</span> <span class=\"fn\">x‚ÇÄ</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ <span class=\"fn\">U</span> ‚àà <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>, <span class=\"fn\">‚àÉ V ‚àà <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">x‚ÇÄ</span></span>, <span class=\"fn\">‚àÄ <span class=\"fn\">x</span> ‚àà <span class=\"fn\">V</span>, <span class=\"fn\">‚àÄ <span class=\"fn\">y</span> ‚àà <span class=\"fn\">V</span>, <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\">x</span></span>, <span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\">y</span></span>)</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">U</span></span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L307-L315","name":"equicontinuousWithinAt_iff_pair","line":307,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousWithinAt_iff_pair","doc":"Reformulation of equicontinuity at `x‚ÇÄ` within a set `S`, comparing two variables near `x‚ÇÄ`\ninstead of comparing only one with `x‚ÇÄ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousWithinAt_iff_pair\"><span class=\"name\">equicontinuousWithinAt_iff_pair</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x‚ÇÄ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx‚ÇÄ : <span class=\"fn\"><span class=\"fn\">x‚ÇÄ</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousWithinAt\">EquicontinuousWithinAt</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span> <span class=\"fn\">x‚ÇÄ</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a>   <span class=\"fn\">‚àÄ <span class=\"fn\">U</span> ‚àà <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#uniformity\">uniformity</a> <span class=\"fn\">Œ±</span></span>, <span class=\"fn\">‚àÉ V ‚àà <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhdsWithin\">nhdsWithin</a> <span class=\"fn\">x‚ÇÄ</span> <span class=\"fn\">S</span></span>, <span class=\"fn\">‚àÄ <span class=\"fn\">x</span> ‚àà <span class=\"fn\">V</span>, <span class=\"fn\">‚àÄ <span class=\"fn\">y</span> ‚àà <span class=\"fn\">V</span>, <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\">x</span></span>, <span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span> <span class=\"fn\">y</span></span>)</span> <a href=\"./Init/Prelude.html#Membership.mem\">‚àà</a> <span class=\"fn\">U</span></span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L301-L303","name":"uniformEquicontinuousOn_unique","line":301,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#uniformEquicontinuousOn_unique","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#uniformEquicontinuousOn_unique\"><span class=\"name\">uniformEquicontinuousOn_unique</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">Œπ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuousOn\">UniformEquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformContinuousOn\">UniformContinuousOn</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">default</span></span>)</span> <span class=\"fn\">S</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L297-L299","name":"uniformEquicontinuous_unique","line":297,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#uniformEquicontinuous_unique","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#uniformEquicontinuous_unique\"><span class=\"name\">uniformEquicontinuous_unique</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">Œπ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuous\">UniformEquicontinuous</a> <span class=\"fn\">F</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">default</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L293-L295","name":"equicontinuousOn_unique","line":293,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousOn_unique","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousOn_unique\"><span class=\"name\">equicontinuousOn_unique</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">Œπ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">default</span></span>)</span> <span class=\"fn\">S</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L289-L291","name":"equicontinuous_unique","line":289,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuous_unique","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuous_unique\"><span class=\"name\">equicontinuous_unique</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">Œπ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Equicontinuous\">Equicontinuous</a> <span class=\"fn\">F</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">default</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L285-L287","name":"equicontinuousWithinAt_unique","line":285,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousWithinAt_unique","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousWithinAt_unique\"><span class=\"name\">equicontinuousWithinAt_unique</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">Œπ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousWithinAt\">EquicontinuousWithinAt</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousWithinAt\">ContinuousWithinAt</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">default</span></span>)</span> <span class=\"fn\">S</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L281-L283","name":"equicontinuousAt_unique","line":281,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousAt_unique","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousAt_unique\"><span class=\"name\">equicontinuousAt_unique</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">Œπ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousAt\">EquicontinuousAt</a> <span class=\"fn\">F</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousAt\">ContinuousAt</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">default</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L273-L275","name":"uniformEquicontinuousOn_finite","line":273,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#uniformEquicontinuousOn_finite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#uniformEquicontinuousOn_finite\"><span class=\"name\">uniformEquicontinuousOn_finite</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">Œπ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuousOn\">UniformEquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformContinuousOn\">UniformContinuousOn</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">S</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L269-L271","name":"uniformEquicontinuous_finite","line":269,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#uniformEquicontinuous_finite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#uniformEquicontinuous_finite\"><span class=\"name\">uniformEquicontinuous_finite</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">Œπ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuous\">UniformEquicontinuous</a> <span class=\"fn\">F</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformContinuous\">UniformContinuous</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L265-L267","name":"equicontinuousOn_finite","line":265,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousOn_finite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousOn_finite\"><span class=\"name\">equicontinuousOn_finite</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">Œπ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">S</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L261-L263","name":"equicontinuous_finite","line":261,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuous_finite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuous_finite\"><span class=\"name\">equicontinuous_finite</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">Œπ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Equicontinuous\">Equicontinuous</a> <span class=\"fn\">F</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L255-L259","name":"equicontinuousWithinAt_finite","line":255,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousWithinAt_finite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousWithinAt_finite\"><span class=\"name\">equicontinuousWithinAt_finite</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">Œπ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x‚ÇÄ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousWithinAt\">EquicontinuousWithinAt</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span> <span class=\"fn\">x‚ÇÄ</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousWithinAt\">ContinuousWithinAt</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">S</span> <span class=\"fn\">x‚ÇÄ</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L250-L253","name":"equicontinuousAt_finite","line":250,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousAt_finite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousAt_finite\"><span class=\"name\">equicontinuousAt_finite</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">Œπ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x‚ÇÄ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousAt\">EquicontinuousAt</a> <span class=\"fn\">F</span> <span class=\"fn\">x‚ÇÄ</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\">‚àÄ (<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousAt\">ContinuousAt</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">x‚ÇÄ</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L242-L244","name":"uniformEquicontinuousOn_empty","line":242,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#uniformEquicontinuousOn_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#uniformEquicontinuousOn_empty\"><span class=\"name\">uniformEquicontinuousOn_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h : <span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\">Œπ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuousOn\">UniformEquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L237-L239","name":"uniformEquicontinuous_empty","line":237,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#uniformEquicontinuous_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#uniformEquicontinuous_empty\"><span class=\"name\">uniformEquicontinuous_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h : <span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\">Œπ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuous\">UniformEquicontinuous</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L232-L234","name":"equicontinuousOn_empty","line":232,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousOn_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousOn_empty\"><span class=\"name\">equicontinuousOn_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\">Œπ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L227-L229","name":"equicontinuous_empty","line":227,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuous_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuous_empty\"><span class=\"name\">equicontinuous_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\">Œπ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Equicontinuous\">Equicontinuous</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L222-L224","name":"equicontinuousWithinAt_empty","line":222,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousWithinAt_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousWithinAt_empty\"><span class=\"name\">equicontinuousWithinAt_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h : <span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\">Œπ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x‚ÇÄ : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousWithinAt\">EquicontinuousWithinAt</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span> <span class=\"fn\">x‚ÇÄ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L217-L219","name":"equicontinuousAt_empty","line":217,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousAt_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousAt_empty\"><span class=\"name\">equicontinuousAt_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h : <span class=\"fn\"><a href=\"./Mathlib/Logic/IsEmpty.html#IsEmpty\">IsEmpty</a> <span class=\"fn\">Œπ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x‚ÇÄ : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousAt\">EquicontinuousAt</a> <span class=\"fn\">F</span> <span class=\"fn\">x‚ÇÄ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L207-L210","name":"uniformEquicontinuous_restrict_iff","line":207,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#uniformEquicontinuous_restrict_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#uniformEquicontinuous_restrict_iff\"><span class=\"name\">uniformEquicontinuous_restrict_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuous\">UniformEquicontinuous</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Function.html#Set.restrict\">Set.restrict</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">F</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuousOn\">UniformEquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L203-L205","name":"uniformEquicontinuousOn_univ","line":203,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#uniformEquicontinuousOn_univ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#uniformEquicontinuousOn_univ\"><span class=\"name\">uniformEquicontinuousOn_univ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuousOn\">UniformEquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">Set.univ</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuous\">UniformEquicontinuous</a> <span class=\"fn\">F</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L199-L201","name":"UniformEquicontinuousOn.mono","line":199,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuousOn.mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuousOn.mono\"><span class=\"name\">UniformEquicontinuousOn</span>.<span class=\"name\">mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ≤</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuousOn\">UniformEquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hST : <span class=\"fn\"><span class=\"fn\">S</span> <a href=\"./Init/Core.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuousOn\">UniformEquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L195-L197","name":"UniformEquicontinuous.uniformEquicontinuousOn","line":195,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuous.uniformEquicontinuousOn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuous.uniformEquicontinuousOn\"><span class=\"name\">UniformEquicontinuous</span>.<span class=\"name\">uniformEquicontinuousOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuous\">UniformEquicontinuous</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuousOn\">UniformEquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L191-L193","name":"equicontinuous_restrict_iff","line":191,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuous_restrict_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuous_restrict_iff\"><span class=\"name\">equicontinuous_restrict_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Equicontinuous\">Equicontinuous</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Function.html#Set.restrict\">Set.restrict</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">F</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L187-L189","name":"equicontinuousOn_univ","line":187,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousOn_univ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousOn_univ\"><span class=\"name\">equicontinuousOn_univ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">Set.univ</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Equicontinuous\">Equicontinuous</a> <span class=\"fn\">F</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L183-L185","name":"EquicontinuousOn.mono","line":183,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn.mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn.mono\"><span class=\"name\">EquicontinuousOn</span>.<span class=\"name\">mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hST : <span class=\"fn\"><span class=\"fn\">S</span> <a href=\"./Init/Core.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L179-L181","name":"Equicontinuous.equicontinuousOn","line":179,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Equicontinuous.equicontinuousOn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Equicontinuous.equicontinuousOn\"><span class=\"name\">Equicontinuous</span>.<span class=\"name\">equicontinuousOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Equicontinuous\">Equicontinuous</a> <span class=\"fn\">F</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\">EquicontinuousOn</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L174-L177","name":"equicontinuousAt_restrict_iff","line":174,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousAt_restrict_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousAt_restrict_iff\"><span class=\"name\">equicontinuousAt_restrict_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x‚ÇÄ : <span class=\"fn\">‚Üë<span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousAt\">EquicontinuousAt</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Function.html#Set.restrict\">Set.restrict</a> <span class=\"fn\">S</span></span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">F</span></span>)</span> <span class=\"fn\">x‚ÇÄ</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousWithinAt\">EquicontinuousWithinAt</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span> <span class=\"fn\">‚Üë<span class=\"fn\">x‚ÇÄ</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L170-L172","name":"equicontinuousWithinAt_univ","line":170,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousWithinAt_univ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#equicontinuousWithinAt_univ\"><span class=\"name\">equicontinuousWithinAt_univ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x‚ÇÄ : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousWithinAt\">EquicontinuousWithinAt</a> <span class=\"fn\">F</span> <span class=\"fn\">Set.univ</span> <span class=\"fn\">x‚ÇÄ</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousAt\">EquicontinuousAt</a> <span class=\"fn\">F</span> <span class=\"fn\">x‚ÇÄ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L166-L168","name":"EquicontinuousWithinAt.mono","line":166,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousWithinAt.mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousWithinAt.mono\"><span class=\"name\">EquicontinuousWithinAt</span>.<span class=\"name\">mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x‚ÇÄ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousWithinAt\">EquicontinuousWithinAt</a> <span class=\"fn\">F</span> <span class=\"fn\">T</span> <span class=\"fn\">x‚ÇÄ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hST : <span class=\"fn\"><span class=\"fn\">S</span> <a href=\"./Init/Core.html#HasSubset.Subset\">‚äÜ</a> <span class=\"fn\">T</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousWithinAt\">EquicontinuousWithinAt</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span> <span class=\"fn\">x‚ÇÄ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L162-L164","name":"EquicontinuousAt.equicontinuousWithinAt","line":162,"kind":"theorem","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousAt.equicontinuousWithinAt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousAt.equicontinuousWithinAt\"><span class=\"name\">EquicontinuousAt</span>.<span class=\"name\">equicontinuousWithinAt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x‚ÇÄ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousAt\">EquicontinuousAt</a> <span class=\"fn\">F</span> <span class=\"fn\">x‚ÇÄ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousWithinAt\">EquicontinuousWithinAt</a> <span class=\"fn\">F</span> <span class=\"fn\">S</span> <span class=\"fn\">x‚ÇÄ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L159-L160","name":"Set.UniformEquicontinuousOn","line":159,"kind":"def","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.UniformEquicontinuousOn","doc":"We say that a set `H : Set (X ‚Üí Œ±)` of functions is uniformly equicontinuous on a subset if the\nfamily `(‚Üë) : ‚Ü•H ‚Üí (X ‚Üí Œ±)` is uniformly equicontinuous on that subset. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.UniformEquicontinuousOn\"><span class=\"name\">Set</span>.<span class=\"name\">UniformEquicontinuousOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L154-L155","name":"UniformEquicontinuousOn","line":154,"kind":"def","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuousOn","doc":"A family `F : Œπ ‚Üí Œ≤ ‚Üí Œ±` of functions between uniform spaces is\n*uniformly equicontinuous on `S : Set Œ≤`* if, for all entourages `U ‚àà ùì§ Œ±`, there is a relative\nentourage `V ‚àà ùì§ Œ≤ ‚äì ùìü (S √óÀ¢ S)` such that, whenever `x` and `y` are `V`-close, we have that,\n*for all `i : Œπ`*, `F i x` is `U`-close to `F i y`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuousOn\"><span class=\"name\">UniformEquicontinuousOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Œ≤</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L146-L147","name":"Set.UniformEquicontinuous","line":146,"kind":"def","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.UniformEquicontinuous","doc":"We say that a set `H : Set (X ‚Üí Œ±)` of functions is uniformly equicontinuous if the family\n`(‚Üë) : ‚Ü•H ‚Üí (X ‚Üí Œ±)` is uniformly equicontinuous. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.UniformEquicontinuous\"><span class=\"name\">Set</span>.<span class=\"name\">UniformEquicontinuous</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L140-L141","name":"UniformEquicontinuous","line":140,"kind":"def","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuous","doc":"A family `F : Œπ ‚Üí Œ≤ ‚Üí Œ±` of functions between uniform spaces is *uniformly equicontinuous* if,\nfor all entourages `U ‚àà ùì§ Œ±`, there is an entourage `V ‚àà ùì§ Œ≤` such that, whenever `x` and `y` are\n`V`-close, we have that, *for all `i : Œπ`*, `F i x` is `U`-close to `F i y`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#UniformEquicontinuous\"><span class=\"name\">UniformEquicontinuous</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ≤ : <a href=\"./foundational_types.html\">Type</a> u_9}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ≤ : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ≤</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">Œ≤</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L134-L135","name":"Set.EquicontinuousOn","line":134,"kind":"def","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.EquicontinuousOn","doc":"We say that a set `H : Set (X ‚Üí Œ±)` of functions is equicontinuous on a subset if the family\n`(‚Üë) : ‚Ü•H ‚Üí (X ‚Üí Œ±)` is equicontinuous on that subset. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.EquicontinuousOn\"><span class=\"name\">Set</span>.<span class=\"name\">EquicontinuousOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L129-L130","name":"EquicontinuousOn","line":129,"kind":"def","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn","doc":"A family `F : Œπ ‚Üí X ‚Üí Œ±` of functions from a topological space to a uniform space is\n*equicontinuous on `S : Set X`* if it is equicontinuous *within `S`* at each point of `S`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousOn\"><span class=\"name\">EquicontinuousOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L123-L124","name":"Set.Equicontinuous","line":123,"kind":"def","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.Equicontinuous","doc":"We say that a set `H : Set (X ‚Üí Œ±)` of functions is equicontinuous if the family\n`(‚Üë) : ‚Ü•H ‚Üí (X ‚Üí Œ±)` is equicontinuous. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.Equicontinuous\"><span class=\"name\">Set</span>.<span class=\"name\">Equicontinuous</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L117-L118","name":"Equicontinuous","line":117,"kind":"def","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Equicontinuous","doc":"A family `F : Œπ ‚Üí X ‚Üí Œ±` of functions from a topological space to a uniform space is\n*equicontinuous* on all of `X` if it is equicontinuous at each point of `X`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Equicontinuous\"><span class=\"name\">Equicontinuous</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L112-L113","name":"Set.EquicontinuousWithinAt","line":112,"kind":"def","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.EquicontinuousWithinAt","doc":"We say that a set `H : Set (X ‚Üí Œ±)` of functions is equicontinuous at a point within a subset\nif the family `(‚Üë) : ‚Ü•H ‚Üí (X ‚Üí Œ±)` is equicontinuous at that point within that same subset. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.EquicontinuousWithinAt\"><span class=\"name\">Set</span>.<span class=\"name\">EquicontinuousWithinAt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x‚ÇÄ : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L107-L108","name":"EquicontinuousWithinAt","line":107,"kind":"def","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousWithinAt","doc":"A family `F : Œπ ‚Üí X ‚Üí Œ±` of functions from a topological space to a uniform space is\n*equicontinuous at `x‚ÇÄ : X` within `S : Set X`* if, for all entourages `U ‚àà ùì§ Œ±`, there is a\nneighborhood `V` of `x‚ÇÄ` within `S` such that, for all `x ‚àà V` and for all `i : Œπ`, `F i x` is\n`U`-close to `F i x‚ÇÄ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousWithinAt\"><span class=\"name\">EquicontinuousWithinAt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x‚ÇÄ : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L99-L100","name":"Set.EquicontinuousAt","line":99,"kind":"def","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.EquicontinuousAt","doc":"We say that a set `H : Set (X ‚Üí Œ±)` of functions is equicontinuous at a point if the family\n`(‚Üë) : ‚Ü•H ‚Üí (X ‚Üí Œ±)` is equicontinuous at that point. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#Set.EquicontinuousAt\"><span class=\"name\">Set</span>.<span class=\"name\">EquicontinuousAt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x‚ÇÄ : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/UniformSpace/Equicontinuity.lean#L93-L94","name":"EquicontinuousAt","line":93,"kind":"def","docLink":"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousAt","doc":"A family `F : Œπ ‚Üí X ‚Üí Œ±` of functions from a topological space to a uniform space is\n*equicontinuous at `x‚ÇÄ : X`* if, for all entourages `U ‚àà ùì§ Œ±`, there is a neighborhood `V` of `x‚ÇÄ`\nsuch that, for all `x ‚àà V` and for all `i : Œπ`, `F i x` is `U`-close to `F i x‚ÇÄ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/UniformSpace/Equicontinuity.html#EquicontinuousAt\"><span class=\"name\">EquicontinuousAt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[tX : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[uŒ± : <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Basic.html#UniformSpace\">UniformSpace</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\"><span class=\"fn\">X</span> ‚Üí <span class=\"fn\">Œ±</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x‚ÇÄ : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"}]}