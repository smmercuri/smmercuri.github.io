{"name":"Std.Data.UInt","instances":[],"imports":["Init"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UInt.lean#L100-L101","name":"UInt32.toUSize_toNat","line":100,"kind":"theorem","docLink":"./Std/Data/UInt.html#UInt32.toUSize_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UInt.html#UInt32.toUSize_toNat\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUSize_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#USize.toNat\">USize.toNat</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt32.toUSize\">UInt32.toUSize</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#UInt32.toNat\">UInt32.toNat</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UInt.lean#L97-L98","name":"USize.toUInt64_toNat","line":97,"kind":"theorem","docLink":"./Std/Data/UInt.html#USize.toUInt64_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UInt.html#USize.toUInt64_toNat\"><span class=\"name\">USize</span>.<span class=\"name\">toUInt64_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt64.toNat\">UInt64.toNat</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#USize.toUInt64\">USize.toUInt64</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#USize.toNat\">USize.toNat</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UInt.lean#L94-L95","name":"USize.toNat_lt","line":94,"kind":"theorem","docLink":"./Std/Data/UInt.html#USize.toNat_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UInt.html#USize.toNat_lt\"><span class=\"name\">USize</span>.<span class=\"name\">toNat_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#USize.toNat\">USize.toNat</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UInt.lean#L89-L92","name":"USize.size_le","line":89,"kind":"theorem","docLink":"./Std/Data/UInt.html#USize.size_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UInt.html#USize.size_le\"><span class=\"name\">USize</span>.<span class=\"name\">size_le</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#USize.size\">USize.size</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">64</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UInt.lean#L84-L87","name":"USize.le_size","line":84,"kind":"theorem","docLink":"./Std/Data/UInt.html#USize.le_size","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UInt.html#USize.le_size\"><span class=\"name\">USize</span>.<span class=\"name\">le_size</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">32</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <a href=\"./Init/Prelude.html#USize.size\">USize.size</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UInt.lean#L80-L82","name":"USize.size_eq","line":80,"kind":"theorem","docLink":"./Std/Data/UInt.html#USize.size_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UInt.html#USize.size_eq\"><span class=\"name\">USize</span>.<span class=\"name\">size_eq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#USize.size\">USize.size</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <a href=\"./Init/Prelude.html#System.Platform.numBits\">System.Platform.numBits</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UInt.lean#L78-L78","name":"USize.val_val_eq_toNat","line":78,"kind":"theorem","docLink":"./Std/Data/UInt.html#USize.val_val_eq_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UInt.html#USize.val_val_eq_toNat\"><span class=\"name\">USize</span>.<span class=\"name\">val_val_eq_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Init/Prelude.html#USize\">USize</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.val</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#USize.toNat\">USize.toNat</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UInt.lean#L75-L76","name":"USize.ext","line":75,"kind":"theorem","docLink":"./Std/Data/UInt.html#USize.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UInt.html#USize.ext\"><span class=\"name\">USize</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Init/Prelude.html#USize\">USize</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#USize.toNat\">USize.toNat</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#USize.toNat\">USize.toNat</a> <span class=\"fn\">y</span></span></span> → <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UInt.lean#L71-L71","name":"UInt64.toUInt32_toNat","line":71,"kind":"theorem","docLink":"./Std/Data/UInt.html#UInt64.toUInt32_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UInt.html#UInt64.toUInt32_toNat\"><span class=\"name\">UInt64</span>.<span class=\"name\">toUInt32_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt32.toNat\">UInt32.toNat</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt64.toUInt32\">UInt64.toUInt32</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt64.toNat\">UInt64.toNat</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">32</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UInt.lean#L69-L69","name":"UInt64.toUInt16_toNat","line":69,"kind":"theorem","docLink":"./Std/Data/UInt.html#UInt64.toUInt16_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UInt.html#UInt64.toUInt16_toNat\"><span class=\"name\">UInt64</span>.<span class=\"name\">toUInt16_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt16.toNat\">UInt16.toNat</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt64.toUInt16\">UInt64.toUInt16</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt64.toNat\">UInt64.toNat</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">16</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UInt.lean#L67-L67","name":"UInt64.toUInt8_toNat","line":67,"kind":"theorem","docLink":"./Std/Data/UInt.html#UInt64.toUInt8_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UInt.html#UInt64.toUInt8_toNat\"><span class=\"name\">UInt64</span>.<span class=\"name\">toUInt8_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt8.toNat\">UInt8.toNat</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt64.toUInt8\">UInt64.toUInt8</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt64.toNat\">UInt64.toNat</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">8</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UInt.lean#L65-L65","name":"UInt64.toNat_lt","line":65,"kind":"theorem","docLink":"./Std/Data/UInt.html#UInt64.toNat_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UInt.html#UInt64.toNat_lt\"><span class=\"name\">UInt64</span>.<span class=\"name\">toNat_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt64.toNat\">UInt64.toNat</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">64</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UInt.lean#L63-L63","name":"UInt64.val_val_eq_toNat","line":63,"kind":"theorem","docLink":"./Std/Data/UInt.html#UInt64.val_val_eq_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UInt.html#UInt64.val_val_eq_toNat\"><span class=\"name\">UInt64</span>.<span class=\"name\">val_val_eq_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.val</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt64.toNat\">UInt64.toNat</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UInt.lean#L60-L61","name":"UInt64.ext","line":60,"kind":"theorem","docLink":"./Std/Data/UInt.html#UInt64.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UInt.html#UInt64.ext\"><span class=\"name\">UInt64</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Init/Prelude.html#UInt64\">UInt64</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt64.toNat\">UInt64.toNat</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt64.toNat\">UInt64.toNat</a> <span class=\"fn\">y</span></span></span> → <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UInt.lean#L55-L56","name":"UInt32.toUInt64_toNat","line":55,"kind":"theorem","docLink":"./Std/Data/UInt.html#UInt32.toUInt64_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UInt.html#UInt32.toUInt64_toNat\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUInt64_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt64.toNat\">UInt64.toNat</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt32.toUInt64\">UInt32.toUInt64</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#UInt32.toNat\">UInt32.toNat</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UInt.lean#L53-L53","name":"UInt32.toUInt16_toNat","line":53,"kind":"theorem","docLink":"./Std/Data/UInt.html#UInt32.toUInt16_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UInt.html#UInt32.toUInt16_toNat\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUInt16_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt16.toNat\">UInt16.toNat</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt32.toUInt16\">UInt32.toUInt16</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt32.toNat\">UInt32.toNat</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">16</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UInt.lean#L51-L51","name":"UInt32.toUInt8_toNat","line":51,"kind":"theorem","docLink":"./Std/Data/UInt.html#UInt32.toUInt8_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UInt.html#UInt32.toUInt8_toNat\"><span class=\"name\">UInt32</span>.<span class=\"name\">toUInt8_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt8.toNat\">UInt8.toNat</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt32.toUInt8\">UInt32.toUInt8</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt32.toNat\">UInt32.toNat</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">8</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UInt.lean#L49-L49","name":"UInt32.toNat_lt","line":49,"kind":"theorem","docLink":"./Std/Data/UInt.html#UInt32.toNat_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UInt.html#UInt32.toNat_lt\"><span class=\"name\">UInt32</span>.<span class=\"name\">toNat_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt32.toNat\">UInt32.toNat</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">32</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UInt.lean#L47-L47","name":"UInt32.val_val_eq_toNat","line":47,"kind":"theorem","docLink":"./Std/Data/UInt.html#UInt32.val_val_eq_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UInt.html#UInt32.val_val_eq_toNat\"><span class=\"name\">UInt32</span>.<span class=\"name\">val_val_eq_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.val</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#UInt32.toNat\">UInt32.toNat</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UInt.lean#L44-L45","name":"UInt32.ext","line":44,"kind":"theorem","docLink":"./Std/Data/UInt.html#UInt32.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UInt.html#UInt32.ext\"><span class=\"name\">UInt32</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt32.toNat\">UInt32.toNat</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#UInt32.toNat\">UInt32.toNat</a> <span class=\"fn\">y</span></span></span> → <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UInt.lean#L39-L40","name":"UInt16.toUInt64_toNat","line":39,"kind":"theorem","docLink":"./Std/Data/UInt.html#UInt16.toUInt64_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UInt.html#UInt16.toUInt64_toNat\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUInt64_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt64.toNat\">UInt64.toNat</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt16.toUInt64\">UInt16.toUInt64</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt16.toNat\">UInt16.toNat</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UInt.lean#L36-L37","name":"UInt16.toUInt32_toNat","line":36,"kind":"theorem","docLink":"./Std/Data/UInt.html#UInt16.toUInt32_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UInt.html#UInt16.toUInt32_toNat\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUInt32_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt32.toNat\">UInt32.toNat</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt16.toUInt32\">UInt16.toUInt32</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt16.toNat\">UInt16.toNat</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UInt.lean#L34-L34","name":"UInt16.toUInt8_toNat","line":34,"kind":"theorem","docLink":"./Std/Data/UInt.html#UInt16.toUInt8_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UInt.html#UInt16.toUInt8_toNat\"><span class=\"name\">UInt16</span>.<span class=\"name\">toUInt8_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt8.toNat\">UInt8.toNat</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt16.toUInt8\">UInt16.toUInt8</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt16.toNat\">UInt16.toNat</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">8</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UInt.lean#L32-L32","name":"UInt16.val_val_eq_toNat","line":32,"kind":"theorem","docLink":"./Std/Data/UInt.html#UInt16.val_val_eq_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UInt.html#UInt16.val_val_eq_toNat\"><span class=\"name\">UInt16</span>.<span class=\"name\">val_val_eq_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.val</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt16.toNat\">UInt16.toNat</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UInt.lean#L30-L30","name":"UInt16.toNat_lt","line":30,"kind":"theorem","docLink":"./Std/Data/UInt.html#UInt16.toNat_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UInt.html#UInt16.toNat_lt\"><span class=\"name\">UInt16</span>.<span class=\"name\">toNat_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt16.toNat\">UInt16.toNat</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">16</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UInt.lean#L27-L28","name":"UInt16.ext","line":27,"kind":"theorem","docLink":"./Std/Data/UInt.html#UInt16.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UInt.html#UInt16.ext\"><span class=\"name\">UInt16</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Init/Prelude.html#UInt16\">UInt16</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt16.toNat\">UInt16.toNat</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt16.toNat\">UInt16.toNat</a> <span class=\"fn\">y</span></span></span> → <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UInt.lean#L22-L23","name":"UInt8.toUInt64_toNat","line":22,"kind":"theorem","docLink":"./Std/Data/UInt.html#UInt8.toUInt64_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UInt.html#UInt8.toUInt64_toNat\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUInt64_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt64.toNat\">UInt64.toNat</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt8.toUInt64\">UInt8.toUInt64</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt8.toNat\">UInt8.toNat</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UInt.lean#L19-L20","name":"UInt8.toUInt32_toNat","line":19,"kind":"theorem","docLink":"./Std/Data/UInt.html#UInt8.toUInt32_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UInt.html#UInt8.toUInt32_toNat\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUInt32_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#UInt32.toNat\">UInt32.toNat</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt8.toUInt32\">UInt8.toUInt32</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt8.toNat\">UInt8.toNat</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UInt.lean#L16-L17","name":"UInt8.toUInt16_toNat","line":16,"kind":"theorem","docLink":"./Std/Data/UInt.html#UInt8.toUInt16_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UInt.html#UInt8.toUInt16_toNat\"><span class=\"name\">UInt8</span>.<span class=\"name\">toUInt16_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt16.toNat\">UInt16.toNat</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt8.toUInt16\">UInt8.toUInt16</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt8.toNat\">UInt8.toNat</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UInt.lean#L14-L14","name":"UInt8.toNat_lt","line":14,"kind":"theorem","docLink":"./Std/Data/UInt.html#UInt8.toNat_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UInt.html#UInt8.toNat_lt\"><span class=\"name\">UInt8</span>.<span class=\"name\">toNat_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt8.toNat\">UInt8.toNat</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">8</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UInt.lean#L12-L12","name":"UInt8.val_val_eq_toNat","line":12,"kind":"theorem","docLink":"./Std/Data/UInt.html#UInt8.val_val_eq_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UInt.html#UInt8.val_val_eq_toNat\"><span class=\"name\">UInt8</span>.<span class=\"name\">val_val_eq_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.val</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt8.toNat\">UInt8.toNat</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UInt.lean#L9-L10","name":"UInt8.ext","line":9,"kind":"theorem","docLink":"./Std/Data/UInt.html#UInt8.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UInt.html#UInt8.ext\"><span class=\"name\">UInt8</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Init/Prelude.html#UInt8\">UInt8</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt8.toNat\">UInt8.toNat</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/UInt/Basic.html#UInt8.toNat\">UInt8.toNat</a> <span class=\"fn\">y</span></span></span> → <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></span></div></div>"}]}