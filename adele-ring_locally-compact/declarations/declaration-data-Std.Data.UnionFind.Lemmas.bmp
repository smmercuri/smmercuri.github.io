{"name":"Std.Data.UnionFind.Lemmas","instances":[],"imports":["Init","Std.Data.UnionFind.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UnionFind/Lemmas.lean#L136-L139","name":"Std.UnionFind.equiv_union","line":136,"kind":"theorem","docLink":"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.equiv_union","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.equiv_union\"><span class=\"name\">Std</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">equiv_union</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{self : <a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind\">Std.UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.size\">Std.UnionFind.size</a> <span class=\"fn\">self</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.size\">Std.UnionFind.size</a> <span class=\"fn\">self</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.Equiv\">Std.UnionFind.Equiv</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.union\">Std.UnionFind.union</a> <span class=\"fn\">self</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.Equiv\">Std.UnionFind.Equiv</a> <span class=\"fn\">self</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a>     <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.Equiv\">Std.UnionFind.Equiv</a> <span class=\"fn\">self</span> <span class=\"fn\">a</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.Equiv\">Std.UnionFind.Equiv</a> <span class=\"fn\">self</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">y</span></span>)</span> <span class=\"fn\">b</span></span></span> <a href=\"./Init/Prelude.html#Or\">∨</a>       <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.Equiv\">Std.UnionFind.Equiv</a> <span class=\"fn\">self</span> <span class=\"fn\">a</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.Equiv\">Std.UnionFind.Equiv</a> <span class=\"fn\">self</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">x</span></span>)</span> <span class=\"fn\">b</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UnionFind/Lemmas.lean#L115-L134","name":"Std.UnionFind.equiv_link","line":115,"kind":"theorem","docLink":"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.equiv_link","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.equiv_link\"><span class=\"name\">Std</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">equiv_link</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{self : <a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind\">Std.UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.size\">Std.UnionFind.size</a> <span class=\"fn\">self</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.size\">Std.UnionFind.size</a> <span class=\"fn\">self</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(xroot : <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.parent\">Std.UnionFind.parent</a> <span class=\"fn\">self</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(yroot : <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.parent\">Std.UnionFind.parent</a> <span class=\"fn\">self</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.Equiv\">Std.UnionFind.Equiv</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.link\">Std.UnionFind.link</a> <span class=\"fn\">self</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span> <span class=\"fn\">yroot</span></span>)</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.Equiv\">Std.UnionFind.Equiv</a> <span class=\"fn\">self</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a>     <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.Equiv\">Std.UnionFind.Equiv</a> <span class=\"fn\">self</span> <span class=\"fn\">a</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.Equiv\">Std.UnionFind.Equiv</a> <span class=\"fn\">self</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">y</span></span>)</span> <span class=\"fn\">b</span></span></span> <a href=\"./Init/Prelude.html#Or\">∨</a>       <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.Equiv\">Std.UnionFind.Equiv</a> <span class=\"fn\">self</span> <span class=\"fn\">a</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.Equiv\">Std.UnionFind.Equiv</a> <span class=\"fn\">self</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">x</span></span>)</span> <span class=\"fn\">b</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UnionFind/Lemmas.lean#L113-L113","name":"Std.UnionFind.equiv_find","line":113,"kind":"theorem","docLink":"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.equiv_find","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.equiv_find\"><span class=\"name\">Std</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">equiv_find</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{self : <a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind\">Std.UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.size\">Std.UnionFind.size</a> <span class=\"fn\">self</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.Equiv\">Std.UnionFind.Equiv</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.find\">Std.UnionFind.find</a> <span class=\"fn\">self</span> <span class=\"fn\">x</span></span>)</span>.fst</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.Equiv\">Std.UnionFind.Equiv</a> <span class=\"fn\">self</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UnionFind/Lemmas.lean#L110-L111","name":"Std.UnionFind.equiv_rootD_r","line":110,"kind":"theorem","docLink":"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.equiv_rootD_r","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.equiv_rootD_r\"><span class=\"name\">Std</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">equiv_rootD_r</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{self : <a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind\">Std.UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.Equiv\">Std.UnionFind.Equiv</a> <span class=\"fn\">self</span> <span class=\"fn\">a</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.rootD\">Std.UnionFind.rootD</a> <span class=\"fn\">self</span> <span class=\"fn\">b</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.Equiv\">Std.UnionFind.Equiv</a> <span class=\"fn\">self</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UnionFind/Lemmas.lean#L108-L109","name":"Std.UnionFind.equiv_rootD_l","line":108,"kind":"theorem","docLink":"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.equiv_rootD_l","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.equiv_rootD_l\"><span class=\"name\">Std</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">equiv_rootD_l</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{self : <a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind\">Std.UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.Equiv\">Std.UnionFind.Equiv</a> <span class=\"fn\">self</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.rootD\">Std.UnionFind.rootD</a> <span class=\"fn\">self</span> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.Equiv\">Std.UnionFind.Equiv</a> <span class=\"fn\">self</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UnionFind/Lemmas.lean#L107-L107","name":"Std.UnionFind.equiv_rootD","line":107,"kind":"theorem","docLink":"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.equiv_rootD","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.equiv_rootD\"><span class=\"name\">Std</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">equiv_rootD</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{self : <a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind\">Std.UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.Equiv\">Std.UnionFind.Equiv</a> <span class=\"fn\">self</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.rootD\">Std.UnionFind.rootD</a> <span class=\"fn\">self</span> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UnionFind/Lemmas.lean#L105-L105","name":"Std.UnionFind.equiv_push","line":105,"kind":"theorem","docLink":"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.equiv_push","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.equiv_push\"><span class=\"name\">Std</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">equiv_push</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{self : <a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind\">Std.UnionFind</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.Equiv\">Std.UnionFind.Equiv</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.push\">Std.UnionFind.push</a> <span class=\"fn\">self</span></span>)</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.Equiv\">Std.UnionFind.Equiv</a> <span class=\"fn\">self</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UnionFind/Lemmas.lean#L103-L103","name":"Std.UnionFind.equiv_empty","line":103,"kind":"theorem","docLink":"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.equiv_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.equiv_empty\"><span class=\"name\">Std</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">equiv_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.Equiv\">Std.UnionFind.Equiv</a> <a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.empty\">Std.UnionFind.empty</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UnionFind/Lemmas.lean#L101-L101","name":"Std.UnionFind.Equiv.trans","line":101,"kind":"theorem","docLink":"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.Equiv.trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.Equiv.trans\"><span class=\"name\">Std</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">Equiv</span>.<span class=\"name\">trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{self : <a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind\">Std.UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.Equiv\">Std.UnionFind.Equiv</a> <span class=\"fn\">self</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.Equiv\">Std.UnionFind.Equiv</a> <span class=\"fn\">self</span> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span> → <span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.Equiv\">Std.UnionFind.Equiv</a> <span class=\"fn\">self</span> <span class=\"fn\">a</span> <span class=\"fn\">c</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UnionFind/Lemmas.lean#L100-L100","name":"Std.UnionFind.Equiv.symm","line":100,"kind":"theorem","docLink":"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.Equiv.symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.Equiv.symm\"><span class=\"name\">Std</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">Equiv</span>.<span class=\"name\">symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{self : <a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind\">Std.UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.Equiv\">Std.UnionFind.Equiv</a> <span class=\"fn\">self</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> → <span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.Equiv\">Std.UnionFind.Equiv</a> <span class=\"fn\">self</span> <span class=\"fn\">b</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UnionFind/Lemmas.lean#L99-L99","name":"Std.UnionFind.Equiv.rfl","line":99,"kind":"theorem","docLink":"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.Equiv.rfl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.Equiv.rfl\"><span class=\"name\">Std</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">Equiv</span>.<span class=\"name\">rfl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{self : <a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind\">Std.UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.Equiv\">Std.UnionFind.Equiv</a> <span class=\"fn\">self</span> <span class=\"fn\">a</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UnionFind/Lemmas.lean#L79-L90","name":"Std.UnionFind.root_link.go","line":79,"kind":"theorem","docLink":"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.root_link.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.root_link.go\"><span class=\"name\">Std</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">root_link</span>.<span class=\"name\">go</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{self : <a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind\">Std.UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.size\">Std.UnionFind.size</a> <span class=\"fn\">self</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.size\">Std.UnionFind.size</a> <span class=\"fn\">self</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(xroot : <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.parent\">Std.UnionFind.parent</a> <span class=\"fn\">self</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(yroot : <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.parent\">Std.UnionFind.parent</a> <span class=\"fn\">self</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind\">Std.UnionFind</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.parent\">Std.UnionFind.parent</a> <span class=\"fn\">m</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">if <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i</span></span> then <span class=\"fn\">↑<span class=\"fn\">x</span></span> else <span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.parent\">Std.UnionFind.parent</a> <span class=\"fn\">self</span> <span class=\"fn\">i</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.rootD\">Std.UnionFind.rootD</a> <span class=\"fn\">m</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">if <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.rootD\">Std.UnionFind.rootD</a> <span class=\"fn\">self</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.rootD\">Std.UnionFind.rootD</a> <span class=\"fn\">self</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span></span> then <span class=\"fn\">↑<span class=\"fn\">x</span></span> else <span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.rootD\">Std.UnionFind.rootD</a> <span class=\"fn\">self</span> <span class=\"fn\">i</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UnionFind/Lemmas.lean#L64-L97","name":"Std.UnionFind.root_link","line":64,"kind":"theorem","docLink":"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.root_link","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.root_link\"><span class=\"name\">Std</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">root_link</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{self : <a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind\">Std.UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.size\">Std.UnionFind.size</a> <span class=\"fn\">self</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.size\">Std.UnionFind.size</a> <span class=\"fn\">self</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(xroot : <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.parent\">Std.UnionFind.parent</a> <span class=\"fn\">self</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(yroot : <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.parent\">Std.UnionFind.parent</a> <span class=\"fn\">self</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">r</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.size\">Std.UnionFind.size</a> <span class=\"fn\">self</span></span>)</span></span>),\n  <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a>     <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>),\n      <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.rootD\">Std.UnionFind.rootD</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.link\">Std.UnionFind.link</a> <span class=\"fn\">self</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span> <span class=\"fn\">yroot</span></span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>         <span class=\"fn\">if <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.rootD\">Std.UnionFind.rootD</a> <span class=\"fn\">self</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.rootD\">Std.UnionFind.rootD</a> <span class=\"fn\">self</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span></span> then <span class=\"fn\">↑<span class=\"fn\">r</span></span> else <span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.rootD\">Std.UnionFind.rootD</a> <span class=\"fn\">self</span> <span class=\"fn\">i</span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UnionFind/Lemmas.lean#L53-L62","name":"Std.UnionFind.parent_link","line":53,"kind":"theorem","docLink":"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.parent_link","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.parent_link\"><span class=\"name\">Std</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">parent_link</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{self : <a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind\">Std.UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.size\">Std.UnionFind.size</a> <span class=\"fn\">self</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.size\">Std.UnionFind.size</a> <span class=\"fn\">self</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(yroot : <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.parent\">Std.UnionFind.parent</a> <span class=\"fn\">self</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{i : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.parent\">Std.UnionFind.parent</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.link\">Std.UnionFind.link</a> <span class=\"fn\">self</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span> <span class=\"fn\">yroot</span></span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">if <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> then <span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.parent\">Std.UnionFind.parent</a> <span class=\"fn\">self</span> <span class=\"fn\">i</span></span>\n  else\n    <span class=\"fn\">if <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.rank\">Std.UnionFind.rank</a> <span class=\"fn\">self</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.rank\">Std.UnionFind.rank</a> <span class=\"fn\">self</span> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span> then <span class=\"fn\">if <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i</span></span> then <span class=\"fn\">↑<span class=\"fn\">x</span></span> else <span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.parent\">Std.UnionFind.parent</a> <span class=\"fn\">self</span> <span class=\"fn\">i</span></span></span>\n    else <span class=\"fn\">if <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i</span></span> then <span class=\"fn\">↑<span class=\"fn\">y</span></span> else <span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.parent\">Std.UnionFind.parent</a> <span class=\"fn\">self</span> <span class=\"fn\">i</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UnionFind/Lemmas.lean#L41-L51","name":"Std.UnionFind.parentD_linkAux","line":41,"kind":"theorem","docLink":"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.parentD_linkAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.parentD_linkAux\"><span class=\"name\">Std</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">parentD_linkAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{i : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{self : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Std/Data/UnionFind/Basic.html#Std.UFNode\">Std.UFNode</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array.size\">Array.size</a> <span class=\"fn\">self</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array.size\">Array.size</a> <span class=\"fn\">self</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.parentD\">Std.UnionFind.parentD</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.linkAux\">Std.UnionFind.linkAux</a> <span class=\"fn\">self</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">if <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> then <span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.parentD\">Std.UnionFind.parentD</a> <span class=\"fn\">self</span> <span class=\"fn\">i</span></span>\n  else\n    <span class=\"fn\">if <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array.get\">Array.get</a> <span class=\"fn\">self</span> <span class=\"fn\">y</span></span>)</span>.rank</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array.get\">Array.get</a> <span class=\"fn\">self</span> <span class=\"fn\">x</span></span>)</span>.rank</span></span> then <span class=\"fn\">if <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i</span></span> then <span class=\"fn\">↑<span class=\"fn\">x</span></span> else <span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.parentD\">Std.UnionFind.parentD</a> <span class=\"fn\">self</span> <span class=\"fn\">i</span></span></span>\n    else <span class=\"fn\">if <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i</span></span> then <span class=\"fn\">↑<span class=\"fn\">y</span></span> else <span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.parentD\">Std.UnionFind.parentD</a> <span class=\"fn\">self</span> <span class=\"fn\">i</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UnionFind/Lemmas.lean#L39-L39","name":"Std.UnionFind.arr_link","line":39,"kind":"theorem","docLink":"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.arr_link","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.arr_link\"><span class=\"name\">Std</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">arr_link</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{self : <a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind\">Std.UnionFind</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.size\">Std.UnionFind.size</a> <span class=\"fn\">self</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.size\">Std.UnionFind.size</a> <span class=\"fn\">self</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{yroot : <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.parent\">Std.UnionFind.parent</a> <span class=\"fn\">self</span> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">y</span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.link\">Std.UnionFind.link</a> <span class=\"fn\">self</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span> <span class=\"fn\">yroot</span></span>)</span>.arr</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.linkAux\">Std.UnionFind.linkAux</a> <span class=\"fn\"><span class=\"fn\">self</span>.arr</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UnionFind/Lemmas.lean#L36-L37","name":"Std.UnionFind.root_push","line":36,"kind":"theorem","docLink":"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.root_push","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.root_push\"><span class=\"name\">Std</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">root_push</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{self : <a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind\">Std.UnionFind</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.rootD\">Std.UnionFind.rootD</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.push\">Std.UnionFind.push</a> <span class=\"fn\">self</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.rootD\">Std.UnionFind.rootD</a> <span class=\"fn\">self</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UnionFind/Lemmas.lean#L34-L34","name":"Std.UnionFind.rankMax_push","line":34,"kind":"theorem","docLink":"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.rankMax_push","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.rankMax_push\"><span class=\"name\">Std</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">rankMax_push</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind\">Std.UnionFind</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.rankMax\">Std.UnionFind.rankMax</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.push\">Std.UnionFind.push</a> <span class=\"fn\">m</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.rankMax\">Std.UnionFind.rankMax</a> <span class=\"fn\">m</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UnionFind/Lemmas.lean#L32-L32","name":"Std.UnionFind.rank_push","line":32,"kind":"theorem","docLink":"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.rank_push","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.rank_push\"><span class=\"name\">Std</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">rank_push</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind\">Std.UnionFind</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.rank\">Std.UnionFind.rank</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.push\">Std.UnionFind.push</a> <span class=\"fn\">m</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.rank\">Std.UnionFind.rank</a> <span class=\"fn\">m</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UnionFind/Lemmas.lean#L27-L30","name":"Std.UnionFind.rankD_push","line":27,"kind":"theorem","docLink":"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.rankD_push","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.rankD_push\"><span class=\"name\">Std</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">rankD_push</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{arr : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Std/Data/UnionFind/Basic.html#Std.UFNode\">Std.UFNode</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.rankD\">Std.UnionFind.rankD</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array.push\">Array.push</a> <span class=\"fn\">arr</span> <span class=\"fn\">{ <span class=\"fn\">parent</span> := <span class=\"fn\"><a href=\"./Init/Prelude.html#Array.size\">Array.size</a> <span class=\"fn\">arr</span></span>, <span class=\"fn\">rank</span> := <span class=\"fn\">0</span> }</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.rankD\">Std.UnionFind.rankD</a> <span class=\"fn\">arr</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UnionFind/Lemmas.lean#L25-L25","name":"Std.UnionFind.parent_push","line":25,"kind":"theorem","docLink":"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.parent_push","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.parent_push\"><span class=\"name\">Std</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">parent_push</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind\">Std.UnionFind</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.parent\">Std.UnionFind.parent</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.push\">Std.UnionFind.push</a> <span class=\"fn\">m</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.parent\">Std.UnionFind.parent</a> <span class=\"fn\">m</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UnionFind/Lemmas.lean#L17-L23","name":"Std.UnionFind.parentD_push","line":17,"kind":"theorem","docLink":"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.parentD_push","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.parentD_push\"><span class=\"name\">Std</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">parentD_push</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{arr : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Std/Data/UnionFind/Basic.html#Std.UFNode\">Std.UFNode</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.parentD\">Std.UnionFind.parentD</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array.push\">Array.push</a> <span class=\"fn\">arr</span> <span class=\"fn\">{ <span class=\"fn\">parent</span> := <span class=\"fn\"><a href=\"./Init/Prelude.html#Array.size\">Array.size</a> <span class=\"fn\">arr</span></span>, <span class=\"fn\">rank</span> := <span class=\"fn\">0</span> }</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.parentD\">Std.UnionFind.parentD</a> <span class=\"fn\">arr</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UnionFind/Lemmas.lean#L15-L15","name":"Std.UnionFind.arr_push","line":15,"kind":"theorem","docLink":"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.arr_push","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.arr_push\"><span class=\"name\">Std</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">arr_push</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind\">Std.UnionFind</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.push\">Std.UnionFind.push</a> <span class=\"fn\">m</span></span>)</span>.arr</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array.push\">Array.push</a> <span class=\"fn\"><span class=\"fn\">m</span>.arr</span> <span class=\"fn\">{ <span class=\"fn\">parent</span> := <span class=\"fn\"><a href=\"./Init/Prelude.html#Array.size\">Array.size</a> <span class=\"fn\"><span class=\"fn\">m</span>.arr</span></span>, <span class=\"fn\">rank</span> := <span class=\"fn\">0</span> }</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UnionFind/Lemmas.lean#L13-L13","name":"Std.UnionFind.rootD_empty","line":13,"kind":"theorem","docLink":"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.rootD_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.rootD_empty\"><span class=\"name\">Std</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">rootD_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.rootD\">Std.UnionFind.rootD</a> <a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.empty\">Std.UnionFind.empty</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UnionFind/Lemmas.lean#L12-L12","name":"Std.UnionFind.rank_empty","line":12,"kind":"theorem","docLink":"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.rank_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.rank_empty\"><span class=\"name\">Std</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">rank_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.rank\">Std.UnionFind.rank</a> <a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.empty\">Std.UnionFind.empty</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UnionFind/Lemmas.lean#L11-L11","name":"Std.UnionFind.parent_empty","line":11,"kind":"theorem","docLink":"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.parent_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.parent_empty\"><span class=\"name\">Std</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">parent_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.parent\">Std.UnionFind.parent</a> <a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.empty\">Std.UnionFind.empty</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Data/UnionFind/Lemmas.lean#L10-L10","name":"Std.UnionFind.arr_empty","line":10,"kind":"theorem","docLink":"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.arr_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/UnionFind/Lemmas.html#Std.UnionFind.arr_empty\"><span class=\"name\">Std</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">arr_empty</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/UnionFind/Basic.html#Std.UnionFind.empty\">Std.UnionFind.empty</a>.arr</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">#[]</span></span></div></div>"}]}