{"name":"Std.Util.CheckTactic","instances":[],"imports":["Init","Lean.Elab.Tactic.ElabTerm","Lean.Elab.Term"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Util/CheckTactic.lean#L123-L124","name":"Std.Tactic.«command#check_simp_!~>»","line":123,"kind":"def","docLink":"./Std/Util/CheckTactic.html#Std.Tactic.«command#check_simp_!~>»","doc":"`#check_simp t !~>` checks `simp` fails to reduce `t`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Util/CheckTactic.html#Std.Tactic.«command#check_simp_!~>»\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">«command#check_simp_!~>»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Util/CheckTactic.lean#L113-L114","name":"Std.Tactic.«command#check_simp_~>_»","line":113,"kind":"def","docLink":"./Std/Util/CheckTactic.html#Std.Tactic.«command#check_simp_~>_»","doc":"`#check_simp t ~> r` checks `simp` reduces `t` to `r`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Util/CheckTactic.html#Std.Tactic.«command#check_simp_~>_»\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">«command#check_simp_~>_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Util/CheckTactic.lean#L107-L108","name":"Std.Tactic.«command#check_tactic_~>_By_»","line":107,"kind":"def","docLink":"./Std/Util/CheckTactic.html#Std.Tactic.«command#check_tactic_~>_By_»","doc":"`#check_tactic t ~> r by commands` runs the tactic sequence `commands`\non a goal with t in the type and sees if the resulting expression has\nreduced it to `r`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Util/CheckTactic.html#Std.Tactic.«command#check_tactic_~>_By_»\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">«command#check_tactic_~>_By_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Util/CheckTactic.lean#L68-L75","name":"Std.Tactic.check_tactic_fails","line":68,"kind":"def","docLink":"./Std/Util/CheckTactic.html#Std.Tactic.check_tactic_fails","doc":"`check_tactic_goal t` verifies that the goal has is equal to\n`CheckGoalType t` with reducible transparency.  It closes the goal if so\nand otherwise reports an error.\n\nIt is used by #check_tactic.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Util/CheckTactic.html#Std.Tactic.check_tactic_fails\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">check_tactic_fails</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Util/CheckTactic.lean#L44-L51","name":"Std.Tactic.check_tactic_goal","line":44,"kind":"def","docLink":"./Std/Util/CheckTactic.html#Std.Tactic.check_tactic_goal","doc":"`check_tactic_goal t` verifies that the goal has is equal to\n`CheckGoalType t` with reducible transparency.  It closes the goal if so\nand otherwise reports an error.\n\nIt is used by #check_tactic.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Util/CheckTactic.html#Std.Tactic.check_tactic_goal\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">check_tactic_goal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"}]}