{"name":"Aesop.Script","instances":[{"typeNames":["Aesop.GoalWithMVars"],"name":"Aesop.instInhabitedGoalWithMVars","className":"Inhabited"},{"typeNames":["Aesop.GoalWithMVars"],"name":"Aesop.instReprGoalWithMVars","className":"Repr"},{"typeNames":["Aesop.GoalWithMVars"],"name":"Aesop.instBEqGoalWithMVars","className":"BEq"},{"typeNames":["Aesop.UnstructuredScriptBuilder"],"name":"Aesop.UnstructuredScriptBuilder.instInhabitedUnstructuredScriptBuilder","className":"Inhabited"},{"typeNames":["Aesop.StructuredScriptBuilder"],"name":"Aesop.StructuredScriptBuilder.instInhabitedStructuredScriptBuilder","className":"Inhabited"},{"typeNames":["Aesop.ScriptBuilder"],"name":"Aesop.instInhabitedScriptBuilder","className":"Inhabited"},{"typeNames":["Aesop.TacticState"],"name":"Aesop.instInhabitedTacticState","className":"Inhabited"},{"typeNames":["Aesop.TacticInvocation"],"name":"Aesop.instNonemptyTacticInvocation","className":"Nonempty"},{"typeNames":["Aesop.StructuredScript"],"name":"Aesop.instInhabitedStructuredScript","className":"Inhabited"}],"imports":["Init","Aesop.Util.Basic","Aesop.Util.Tactic","Aesop.Util.EqualUpToIds","Std.Lean.Meta.Clear","Std.Lean.Meta.Inaccessible","Std.Lean.HashSet","Std.Tactic.PermuteGoals","Std.Tactic.SeqFocus"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L557-L596","name":"Aesop.UnstructuredScript.toStructuredScript.go","line":557,"kind":"opaque","docLink":"./Aesop/Script.html#Aesop.UnstructuredScript.toStructuredScript.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.UnstructuredScript.toStructuredScript.go\"><span class=\"name\">Aesop</span>.<span class=\"name\">UnstructuredScript</span>.<span class=\"name\">toStructuredScript</span>.<span class=\"name\">go</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(steps : <span class=\"fn\"><a href=\"./Lean/Data/HashMap.html#Lean.HashMap\">Lean.HashMap</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Aesop/Script.html#Aesop.TacticInvocation\">Aesop.TacticInvocation</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tacticState : <a href=\"./Aesop/Script.html#Aesop.TacticState\">Aesop.TacticState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.StructuredScript\">Aesop.StructuredScript</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Aesop/Script.html#Aesop.TacticState\">Aesop.TacticState</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L549-L596","name":"Aesop.UnstructuredScript.toStructuredScript","line":549,"kind":"def","docLink":"./Aesop/Script.html#Aesop.UnstructuredScript.toStructuredScript","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.UnstructuredScript.toStructuredScript\"><span class=\"name\">Aesop</span>.<span class=\"name\">UnstructuredScript</span>.<span class=\"name\">toStructuredScript</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(tacticState : <a href=\"./Aesop/Script.html#Aesop.TacticState\">Aesop.TacticState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(script : <a href=\"./Aesop/Script.html#Aesop.UnstructuredScript\">Aesop.UnstructuredScript</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Aesop/Script.html#Aesop.StructuredScript\">Aesop.StructuredScript</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L523-L544","name":"Aesop.StructuredScript.render.go","line":523,"kind":"def","docLink":"./Aesop/Script.html#Aesop.StructuredScript.render.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.StructuredScript.render.go\"><span class=\"name\">Aesop</span>.<span class=\"name\">StructuredScript</span>.<span class=\"name\">render</span>.<span class=\"name\">go</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.MonadQuotation\">Lean.MonadQuotation</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(script : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Meta.html#Lean.Syntax.Tactic\">Lean.Syntax.Tactic</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tacticState : <a href=\"./Aesop/Script.html#Aesop.TacticState\">Aesop.TacticState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.StructuredScript\">Aesop.StructuredScript</a> → <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Meta.html#Lean.Syntax.Tactic\">Lean.Syntax.Tactic</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Aesop/Script.html#Aesop.TacticState\">Aesop.TacticState</a></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L519-L544","name":"Aesop.StructuredScript.render","line":519,"kind":"def","docLink":"./Aesop/Script.html#Aesop.StructuredScript.render","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.StructuredScript.render\"><span class=\"name\">Aesop</span>.<span class=\"name\">StructuredScript</span>.<span class=\"name\">render</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.MonadQuotation\">Lean.MonadQuotation</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(tacticState : <a href=\"./Aesop/Script.html#Aesop.TacticState\">Aesop.TacticState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(script : <a href=\"./Aesop/Script.html#Aesop.StructuredScript\">Aesop.StructuredScript</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Meta.html#Lean.Syntax.Tactic\">Lean.Syntax.Tactic</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L517-L517","name":"Aesop.instInhabitedStructuredScript","line":517,"kind":"instance","docLink":"./Aesop/Script.html#Aesop.instInhabitedStructuredScript","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.instInhabitedStructuredScript\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedStructuredScript</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Aesop/Script.html#Aesop.StructuredScript\">Aesop.StructuredScript</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L516-L516","name":"Aesop.StructuredScript.solve","line":516,"kind":"ctor","docLink":"./Aesop/Script.html#Aesop.StructuredScript.solve","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.StructuredScript.solve\"><span class=\"name\">Aesop</span>.<span class=\"name\">StructuredScript</span>.<span class=\"name\">solve</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(goal : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(here : <a href=\"./Aesop/Script.html#Aesop.StructuredScript\">Aesop.StructuredScript</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tail : <a href=\"./Aesop/Script.html#Aesop.StructuredScript\">Aesop.StructuredScript</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Script.html#Aesop.StructuredScript\">Aesop.StructuredScript</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L515-L515","name":"Aesop.StructuredScript.unstructuredStep","line":515,"kind":"ctor","docLink":"./Aesop/Script.html#Aesop.StructuredScript.unstructuredStep","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.StructuredScript.unstructuredStep\"><span class=\"name\">Aesop</span>.<span class=\"name\">StructuredScript</span>.<span class=\"name\">unstructuredStep</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ti : <a href=\"./Aesop/Script.html#Aesop.TacticInvocation\">Aesop.TacticInvocation</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tail : <a href=\"./Aesop/Script.html#Aesop.StructuredScript\">Aesop.StructuredScript</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Script.html#Aesop.StructuredScript\">Aesop.StructuredScript</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L514-L514","name":"Aesop.StructuredScript.empty","line":514,"kind":"ctor","docLink":"./Aesop/Script.html#Aesop.StructuredScript.empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.StructuredScript.empty\"><span class=\"name\">Aesop</span>.<span class=\"name\">StructuredScript</span>.<span class=\"name\">empty</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Script.html#Aesop.StructuredScript\">Aesop.StructuredScript</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L513-L517","name":"Aesop.StructuredScript","line":513,"kind":"inductive","docLink":"./Aesop/Script.html#Aesop.StructuredScript","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.StructuredScript\"><span class=\"name\">Aesop</span>.<span class=\"name\">StructuredScript</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L510-L511","name":"Aesop.UnstructuredScript.validate","line":510,"kind":"def","docLink":"./Aesop/Script.html#Aesop.UnstructuredScript.validate","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.UnstructuredScript.validate\"><span class=\"name\">Aesop</span>.<span class=\"name\">UnstructuredScript</span>.<span class=\"name\">validate</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Aesop/Script.html#Aesop.UnstructuredScript\">Aesop.UnstructuredScript</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L500-L508","name":"Aesop.UnstructuredScript.render","line":500,"kind":"def","docLink":"./Aesop/Script.html#Aesop.UnstructuredScript.render","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.UnstructuredScript.render\"><span class=\"name\">Aesop</span>.<span class=\"name\">UnstructuredScript</span>.<span class=\"name\">render</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.MonadQuotation\">Lean.MonadQuotation</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(tacticState : <a href=\"./Aesop/Script.html#Aesop.TacticState\">Aesop.TacticState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Aesop/Script.html#Aesop.UnstructuredScript\">Aesop.UnstructuredScript</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Meta.html#Lean.Syntax.Tactic\">Lean.Syntax.Tactic</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L498-L498","name":"Aesop.UnstructuredScript","line":498,"kind":"def","docLink":"./Aesop/Script.html#Aesop.UnstructuredScript","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.UnstructuredScript\"><span class=\"name\">Aesop</span>.<span class=\"name\">UnstructuredScript</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L489-L493","name":"Aesop.TacticInvocation.validate.fmtGoals","line":489,"kind":"def","docLink":"./Aesop/Script.html#Aesop.TacticInvocation.validate.fmtGoals","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.TacticInvocation.validate.fmtGoals\"><span class=\"name\">Aesop</span>.<span class=\"name\">TacticInvocation</span>.<span class=\"name\">validate</span>.<span class=\"name\">fmtGoals</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(state : <a href=\"./Lean/Meta/Basic.html#Lean.Meta.SavedState\">Lean.Meta.SavedState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(goals : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L474-L493","name":"Aesop.TacticInvocation.validate","line":474,"kind":"def","docLink":"./Aesop/Script.html#Aesop.TacticInvocation.validate","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.TacticInvocation.validate\"><span class=\"name\">Aesop</span>.<span class=\"name\">TacticInvocation</span>.<span class=\"name\">validate</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ti : <a href=\"./Aesop/Script.html#Aesop.TacticInvocation\">Aesop.TacticInvocation</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L459-L472","name":"Aesop.TacticInvocation.render","line":459,"kind":"def","docLink":"./Aesop/Script.html#Aesop.TacticInvocation.render","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.TacticInvocation.render\"><span class=\"name\">Aesop</span>.<span class=\"name\">TacticInvocation</span>.<span class=\"name\">render</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.MonadQuotation\">Lean.MonadQuotation</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(acc : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Meta.html#Lean.Syntax.Tactic\">Lean.Syntax.Tactic</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ti : <a href=\"./Aesop/Script.html#Aesop.TacticInvocation\">Aesop.TacticInvocation</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tacticState : <a href=\"./Aesop/Script.html#Aesop.TacticState\">Aesop.TacticState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Meta.html#Lean.Syntax.Tactic\">Lean.Syntax.Tactic</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Aesop/Script.html#Aesop.TacticState\">Aesop.TacticState</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L452-L457","name":"Aesop.TacticInvocation.noop","line":452,"kind":"def","docLink":"./Aesop/Script.html#Aesop.TacticInvocation.noop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.TacticInvocation.noop\"><span class=\"name\">Aesop</span>.<span class=\"name\">TacticInvocation</span>.<span class=\"name\">noop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(preGoal : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(postGoal : <a href=\"./Aesop/Script.html#Aesop.GoalWithMVars\">Aesop.GoalWithMVars</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(preState : <a href=\"./Lean/Meta/Basic.html#Lean.Meta.SavedState\">Lean.Meta.SavedState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(postState : <a href=\"./Lean/Meta/Basic.html#Lean.Meta.SavedState\">Lean.Meta.SavedState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Script.html#Aesop.TacticInvocation\">Aesop.TacticInvocation</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L446-L448","name":"Aesop.TacticState.applyTacticInvocation","line":446,"kind":"def","docLink":"./Aesop/Script.html#Aesop.TacticState.applyTacticInvocation","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.TacticState.applyTacticInvocation\"><span class=\"name\">Aesop</span>.<span class=\"name\">TacticState</span>.<span class=\"name\">applyTacticInvocation</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(tacticState : <a href=\"./Aesop/Script.html#Aesop.TacticState\">Aesop.TacticState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ti : <a href=\"./Aesop/Script.html#Aesop.TacticInvocation\">Aesop.TacticInvocation</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Aesop/Script.html#Aesop.TacticState\">Aesop.TacticState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L444-L444","name":"Aesop.instNonemptyTacticInvocation","line":444,"kind":"instance","docLink":"./Aesop/Script.html#Aesop.instNonemptyTacticInvocation","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.instNonemptyTacticInvocation\"><span class=\"name\">Aesop</span>.<span class=\"name\">instNonemptyTacticInvocation</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <a href=\"./Aesop/Script.html#Aesop.TacticInvocation\">Aesop.TacticInvocation</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L443-L443","name":"Aesop.TacticInvocation.postState","line":443,"kind":"def","docLink":"./Aesop/Script.html#Aesop.TacticInvocation.postState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.TacticInvocation.postState\"><span class=\"name\">Aesop</span>.<span class=\"name\">TacticInvocation</span>.<span class=\"name\">postState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Aesop/Script.html#Aesop.TacticInvocation\">Aesop.TacticInvocation</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.SavedState\">Lean.Meta.SavedState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L442-L442","name":"Aesop.TacticInvocation.postGoals","line":442,"kind":"def","docLink":"./Aesop/Script.html#Aesop.TacticInvocation.postGoals","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.TacticInvocation.postGoals\"><span class=\"name\">Aesop</span>.<span class=\"name\">TacticInvocation</span>.<span class=\"name\">postGoals</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Aesop/Script.html#Aesop.TacticInvocation\">Aesop.TacticInvocation</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Script.html#Aesop.GoalWithMVars\">Aesop.GoalWithMVars</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L441-L441","name":"Aesop.TacticInvocation.tacticSeq","line":441,"kind":"def","docLink":"./Aesop/Script.html#Aesop.TacticInvocation.tacticSeq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.TacticInvocation.tacticSeq\"><span class=\"name\">Aesop</span>.<span class=\"name\">TacticInvocation</span>.<span class=\"name\">tacticSeq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Aesop/Script.html#Aesop.TacticInvocation\">Aesop.TacticInvocation</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Meta.html#Lean.Syntax.Tactic\">Lean.Syntax.Tactic</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L440-L440","name":"Aesop.TacticInvocation.preGoal","line":440,"kind":"def","docLink":"./Aesop/Script.html#Aesop.TacticInvocation.preGoal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.TacticInvocation.preGoal\"><span class=\"name\">Aesop</span>.<span class=\"name\">TacticInvocation</span>.<span class=\"name\">preGoal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Aesop/Script.html#Aesop.TacticInvocation\">Aesop.TacticInvocation</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L439-L439","name":"Aesop.TacticInvocation.preState","line":439,"kind":"def","docLink":"./Aesop/Script.html#Aesop.TacticInvocation.preState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.TacticInvocation.preState\"><span class=\"name\">Aesop</span>.<span class=\"name\">TacticInvocation</span>.<span class=\"name\">preState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Aesop/Script.html#Aesop.TacticInvocation\">Aesop.TacticInvocation</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.SavedState\">Lean.Meta.SavedState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L438-L438","name":"Aesop.TacticInvocation.mk","line":438,"kind":"ctor","docLink":"./Aesop/Script.html#Aesop.TacticInvocation.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.TacticInvocation.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">TacticInvocation</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(preState : <a href=\"./Lean/Meta/Basic.html#Lean.Meta.SavedState\">Lean.Meta.SavedState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(preGoal : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tacticSeq : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Meta.html#Lean.Syntax.Tactic\">Lean.Syntax.Tactic</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(postGoals : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Script.html#Aesop.GoalWithMVars\">Aesop.GoalWithMVars</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(postState : <a href=\"./Lean/Meta/Basic.html#Lean.Meta.SavedState\">Lean.Meta.SavedState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Script.html#Aesop.TacticInvocation\">Aesop.TacticInvocation</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L438-L444","name":"Aesop.TacticInvocation","line":438,"kind":"structure","docLink":"./Aesop/Script.html#Aesop.TacticInvocation","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.TacticInvocation\"><span class=\"name\">Aesop</span>.<span class=\"name\">TacticInvocation</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L424-L433","name":"Aesop.TacticState.onGoalM","line":424,"kind":"def","docLink":"./Aesop/Script.html#Aesop.TacticState.onGoalM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.TacticState.onGoalM\"><span class=\"name\">Aesop</span>.<span class=\"name\">TacticState</span>.<span class=\"name\">onGoalM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ts : <a href=\"./Aesop/Script.html#Aesop.TacticState\">Aesop.TacticState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.TacticState\">Aesop.TacticState</a> → <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Aesop/Script.html#Aesop.TacticState\">Aesop.TacticState</a></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Aesop/Script.html#Aesop.TacticState\">Aesop.TacticState</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L414-L421","name":"Aesop.TacticState.focus","line":414,"kind":"def","docLink":"./Aesop/Script.html#Aesop.TacticState.focus","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.TacticState.focus\"><span class=\"name\">Aesop</span>.<span class=\"name\">TacticState</span>.<span class=\"name\">focus</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ts : <a href=\"./Aesop/Script.html#Aesop.TacticState\">Aesop.TacticState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(goal : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Aesop/Script.html#Aesop.TacticState\">Aesop.TacticState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L403-L410","name":"Aesop.TacticState.applyTactic","line":403,"kind":"def","docLink":"./Aesop/Script.html#Aesop.TacticState.applyTactic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.TacticState.applyTactic\"><span class=\"name\">Aesop</span>.<span class=\"name\">TacticState</span>.<span class=\"name\">applyTactic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ts : <a href=\"./Aesop/Script.html#Aesop.TacticState\">Aesop.TacticState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(inGoal : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(outGoals : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Script.html#Aesop.GoalWithMVars\">Aesop.GoalWithMVars</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(postMCtx : <a href=\"./Lean/MetavarContext.html#Lean.MetavarContext\">Lean.MetavarContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Aesop/Script.html#Aesop.TacticState\">Aesop.TacticState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L393-L401","name":"Aesop.TacticState.eraseSolvedGoals","line":393,"kind":"def","docLink":"./Aesop/Script.html#Aesop.TacticState.eraseSolvedGoals","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.TacticState.eraseSolvedGoals\"><span class=\"name\">Aesop</span>.<span class=\"name\">TacticState</span>.<span class=\"name\">eraseSolvedGoals</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ts : <a href=\"./Aesop/Script.html#Aesop.TacticState\">Aesop.TacticState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mctx : <a href=\"./Lean/MetavarContext.html#Lean.MetavarContext\">Lean.MetavarContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Script.html#Aesop.TacticState\">Aesop.TacticState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L378-L379","name":"Aesop.TacticState.visibleGoalsHaveMVars","line":378,"kind":"def","docLink":"./Aesop/Script.html#Aesop.TacticState.visibleGoalsHaveMVars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.TacticState.visibleGoalsHaveMVars\"><span class=\"name\">Aesop</span>.<span class=\"name\">TacticState</span>.<span class=\"name\">visibleGoalsHaveMVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ts : <a href=\"./Aesop/Script.html#Aesop.TacticState\">Aesop.TacticState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L375-L376","name":"Aesop.TacticState.hasSingleVisibleGoal","line":375,"kind":"def","docLink":"./Aesop/Script.html#Aesop.TacticState.hasSingleVisibleGoal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.TacticState.hasSingleVisibleGoal\"><span class=\"name\">Aesop</span>.<span class=\"name\">TacticState</span>.<span class=\"name\">hasSingleVisibleGoal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ts : <a href=\"./Aesop/Script.html#Aesop.TacticState\">Aesop.TacticState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L372-L373","name":"Aesop.TacticState.hasNoVisibleGoals","line":372,"kind":"def","docLink":"./Aesop/Script.html#Aesop.TacticState.hasNoVisibleGoals","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.TacticState.hasNoVisibleGoals\"><span class=\"name\">Aesop</span>.<span class=\"name\">TacticState</span>.<span class=\"name\">hasNoVisibleGoals</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ts : <a href=\"./Aesop/Script.html#Aesop.TacticState\">Aesop.TacticState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L369-L370","name":"Aesop.TacticState.getMainGoal?","line":369,"kind":"def","docLink":"./Aesop/Script.html#Aesop.TacticState.getMainGoal?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.TacticState.getMainGoal?\"><span class=\"name\">Aesop</span>.<span class=\"name\">TacticState</span>.<span class=\"name\">getMainGoal?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ts : <a href=\"./Aesop/Script.html#Aesop.TacticState\">Aesop.TacticState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L363-L367","name":"Aesop.TacticState.getVisibleGoalIndex","line":363,"kind":"def","docLink":"./Aesop/Script.html#Aesop.TacticState.getVisibleGoalIndex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.TacticState.getVisibleGoalIndex\"><span class=\"name\">Aesop</span>.<span class=\"name\">TacticState</span>.<span class=\"name\">getVisibleGoalIndex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ts : <a href=\"./Aesop/Script.html#Aesop.TacticState\">Aesop.TacticState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(goal : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L360-L361","name":"Aesop.TacticState.getVisibleGoalIndex?","line":360,"kind":"def","docLink":"./Aesop/Script.html#Aesop.TacticState.getVisibleGoalIndex?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.TacticState.getVisibleGoalIndex?\"><span class=\"name\">Aesop</span>.<span class=\"name\">TacticState</span>.<span class=\"name\">getVisibleGoalIndex?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ts : <a href=\"./Aesop/Script.html#Aesop.TacticState\">Aesop.TacticState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(goal : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L354-L354","name":"Aesop.instInhabitedTacticState","line":354,"kind":"instance","docLink":"./Aesop/Script.html#Aesop.instInhabitedTacticState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.instInhabitedTacticState\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedTacticState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Aesop/Script.html#Aesop.TacticState\">Aesop.TacticState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L353-L353","name":"Aesop.TacticState.invisibleGoals","line":353,"kind":"def","docLink":"./Aesop/Script.html#Aesop.TacticState.invisibleGoals","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.TacticState.invisibleGoals\"><span class=\"name\">Aesop</span>.<span class=\"name\">TacticState</span>.<span class=\"name\">invisibleGoals</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Aesop/Script.html#Aesop.TacticState\">Aesop.TacticState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/HashSet.html#Lean.HashSet\">Lean.HashSet</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L352-L352","name":"Aesop.TacticState.visibleGoals","line":352,"kind":"def","docLink":"./Aesop/Script.html#Aesop.TacticState.visibleGoals","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.TacticState.visibleGoals\"><span class=\"name\">Aesop</span>.<span class=\"name\">TacticState</span>.<span class=\"name\">visibleGoals</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Aesop/Script.html#Aesop.TacticState\">Aesop.TacticState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Script.html#Aesop.GoalWithMVars\">Aesop.GoalWithMVars</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L351-L351","name":"Aesop.TacticState.mk","line":351,"kind":"ctor","docLink":"./Aesop/Script.html#Aesop.TacticState.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.TacticState.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">TacticState</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(visibleGoals : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Script.html#Aesop.GoalWithMVars\">Aesop.GoalWithMVars</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(invisibleGoals : <span class=\"fn\"><a href=\"./Lean/Data/HashSet.html#Lean.HashSet\">Lean.HashSet</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Script.html#Aesop.TacticState\">Aesop.TacticState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L351-L354","name":"Aesop.TacticState","line":351,"kind":"structure","docLink":"./Aesop/Script.html#Aesop.TacticState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.TacticState\"><span class=\"name\">Aesop</span>.<span class=\"name\">TacticState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L338-L344","name":"Aesop.unfoldManyStarWithScript","line":338,"kind":"def","docLink":"./Aesop/Script.html#Aesop.unfoldManyStarWithScript","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.unfoldManyStarWithScript\"><span class=\"name\">Aesop</span>.<span class=\"name\">unfoldManyStarWithScript</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(goal : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(unfold? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(generateScript : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Aesop/Util/Tactic.html#Aesop.UnfoldResult\">Aesop.UnfoldResult</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.ScriptBuilder\">Aesop.ScriptBuilder</a> <a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a></span>)</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L331-L336","name":"Aesop.renameInaccessibleFVarsWithScript","line":331,"kind":"def","docLink":"./Aesop/Script.html#Aesop.renameInaccessibleFVarsWithScript","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.renameInaccessibleFVarsWithScript\"><span class=\"name\">Aesop</span>.<span class=\"name\">renameInaccessibleFVarsWithScript</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(goal : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(generateScript : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.ScriptBuilder\">Aesop.ScriptBuilder</a> <a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a></span>)</span></span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L323-L329","name":"Aesop.unhygienicCasesWithScript","line":323,"kind":"def","docLink":"./Aesop/Script.html#Aesop.unhygienicCasesWithScript","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.unhygienicCasesWithScript\"><span class=\"name\">Aesop</span>.<span class=\"name\">unhygienicCasesWithScript</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(goal : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fvarId : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(generateScript : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Tactic/Cases.html#Lean.Meta.CasesSubgoal\">Lean.Meta.CasesSubgoal</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.ScriptBuilder\">Aesop.ScriptBuilder</a> <a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a></span>)</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L316-L321","name":"Aesop.tryClearManyWithScript","line":316,"kind":"def","docLink":"./Aesop/Script.html#Aesop.tryClearManyWithScript","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.tryClearManyWithScript\"><span class=\"name\">Aesop</span>.<span class=\"name\">tryClearManyWithScript</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(goal : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fvarIds : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(generateScript : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.ScriptBuilder\">Aesop.ScriptBuilder</a> <a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a></span>)</span></span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L306-L314","name":"Aesop.tryClearWithScript","line":306,"kind":"def","docLink":"./Aesop/Script.html#Aesop.tryClearWithScript","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.tryClearWithScript\"><span class=\"name\">Aesop</span>.<span class=\"name\">tryClearWithScript</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(goal : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fvarId : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(generateScript : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.ScriptBuilder\">Aesop.ScriptBuilder</a> <a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a></span>)</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L301-L304","name":"Aesop.clearWithScript","line":301,"kind":"def","docLink":"./Aesop/Script.html#Aesop.clearWithScript","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.clearWithScript\"><span class=\"name\">Aesop</span>.<span class=\"name\">clearWithScript</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(goal : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fvarId : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(generateScript : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.ScriptBuilder\">Aesop.ScriptBuilder</a> <a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a></span>)</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L294-L299","name":"Aesop.assertHypothesesWithScript","line":294,"kind":"def","docLink":"./Aesop/Script.html#Aesop.assertHypothesesWithScript","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.assertHypothesesWithScript\"><span class=\"name\">Aesop</span>.<span class=\"name\">assertHypothesesWithScript</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(goal : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Tactic/Assert.html#Lean.Meta.Hypothesis\">Lean.Meta.Hypothesis</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(generateScript : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.ScriptBuilder\">Aesop.ScriptBuilder</a> <a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a></span>)</span></span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L287-L292","name":"Aesop.mkScriptBuilder?","line":287,"kind":"def","docLink":"./Aesop/Script.html#Aesop.mkScriptBuilder?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.mkScriptBuilder?\"><span class=\"name\">Aesop</span>.<span class=\"name\">mkScriptBuilder?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(generateScript : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(builder : <span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.ScriptBuilder\">Aesop.ScriptBuilder</a> <a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.ScriptBuilder\">Aesop.ScriptBuilder</a> <a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L284-L284","name":"Aesop.RuleTacScriptBuilder","line":284,"kind":"def","docLink":"./Aesop/Script.html#Aesop.RuleTacScriptBuilder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.RuleTacScriptBuilder\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleTacScriptBuilder</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L277-L280","name":"Aesop.ScriptBuilder.withAllTransparency","line":277,"kind":"def","docLink":"./Aesop/Script.html#Aesop.ScriptBuilder.withAllTransparency","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.ScriptBuilder.withAllTransparency\"><span class=\"name\">Aesop</span>.<span class=\"name\">ScriptBuilder</span>.<span class=\"name\">withAllTransparency</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.MonadQuotation\">Lean.MonadQuotation</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(md : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.ScriptBuilder\">Aesop.ScriptBuilder</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.ScriptBuilder\">Aesop.ScriptBuilder</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L272-L275","name":"Aesop.ScriptBuilder.withTransparency","line":272,"kind":"def","docLink":"./Aesop/Script.html#Aesop.ScriptBuilder.withTransparency","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.ScriptBuilder.withTransparency\"><span class=\"name\">Aesop</span>.<span class=\"name\">ScriptBuilder</span>.<span class=\"name\">withTransparency</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.MonadQuotation\">Lean.MonadQuotation</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(md : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.ScriptBuilder\">Aesop.ScriptBuilder</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.ScriptBuilder\">Aesop.ScriptBuilder</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L260-L270","name":"Aesop.ScriptBuilder.withPrefix","line":260,"kind":"def","docLink":"./Aesop/Script.html#Aesop.ScriptBuilder.withPrefix","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.ScriptBuilder.withPrefix\"><span class=\"name\">Aesop</span>.<span class=\"name\">ScriptBuilder</span>.<span class=\"name\">withPrefix</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.MonadQuotation\">Lean.MonadQuotation</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`Lean.Parser.Tactic.tacticSeq</span></span> → <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`tactic</span></span>)</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.ScriptBuilder\">Aesop.ScriptBuilder</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.ScriptBuilder\">Aesop.ScriptBuilder</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L256-L257","name":"Aesop.ScriptBuilder.unhygienicExt","line":256,"kind":"def","docLink":"./Aesop/Script.html#Aesop.ScriptBuilder.unhygienicExt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.ScriptBuilder.unhygienicExt\"><span class=\"name\">Aesop</span>.<span class=\"name\">ScriptBuilder</span>.<span class=\"name\">unhygienicExt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(subgoals : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.ScriptBuilder\">Aesop.ScriptBuilder</a> <a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L250-L254","name":"Aesop.ScriptBuilder.unfoldManyStar","line":250,"kind":"def","docLink":"./Aesop/Script.html#Aesop.ScriptBuilder.unfoldManyStar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.ScriptBuilder.unfoldManyStar\"><span class=\"name\">Aesop</span>.<span class=\"name\">ScriptBuilder</span>.<span class=\"name\">unfoldManyStar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(usedDecls : <span class=\"fn\"><a href=\"./Lean/Data/HashSet.html#Lean.HashSet\">Lean.HashSet</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.ScriptBuilder\">Aesop.ScriptBuilder</a> <a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L239-L248","name":"Aesop.ScriptBuilder.renameInaccessibleFVars","line":239,"kind":"def","docLink":"./Aesop/Script.html#Aesop.ScriptBuilder.renameInaccessibleFVars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.ScriptBuilder.renameInaccessibleFVars\"><span class=\"name\">Aesop</span>.<span class=\"name\">ScriptBuilder</span>.<span class=\"name\">renameInaccessibleFVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(goal : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(renamedFVars : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.ScriptBuilder\">Aesop.ScriptBuilder</a> <a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L233-L237","name":"Aesop.ScriptBuilder.unhygienicAesopCases","line":233,"kind":"def","docLink":"./Aesop/Script.html#Aesop.ScriptBuilder.unhygienicAesopCases","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.ScriptBuilder.unhygienicAesopCases\"><span class=\"name\">Aesop</span>.<span class=\"name\">ScriptBuilder</span>.<span class=\"name\">unhygienicAesopCases</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(goal : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fvarId : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(subgoals : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.ScriptBuilder\">Aesop.ScriptBuilder</a> <a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L227-L231","name":"Aesop.ScriptBuilder.clear","line":227,"kind":"def","docLink":"./Aesop/Script.html#Aesop.ScriptBuilder.clear","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.ScriptBuilder.clear\"><span class=\"name\">Aesop</span>.<span class=\"name\">ScriptBuilder</span>.<span class=\"name\">clear</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(goal : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fvarIds : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.ScriptBuilder\">Aesop.ScriptBuilder</a> <a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L222-L225","name":"Aesop.ScriptBuilder.assertHypotheses","line":222,"kind":"def","docLink":"./Aesop/Script.html#Aesop.ScriptBuilder.assertHypotheses","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.ScriptBuilder.assertHypotheses\"><span class=\"name\">Aesop</span>.<span class=\"name\">ScriptBuilder</span>.<span class=\"name\">assertHypotheses</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(goal : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Tactic/Assert.html#Lean.Meta.Hypothesis\">Lean.Meta.Hypothesis</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.ScriptBuilder\">Aesop.ScriptBuilder</a> <a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L217-L220","name":"Aesop.ScriptBuilder.seq","line":217,"kind":"def","docLink":"./Aesop/Script.html#Aesop.ScriptBuilder.seq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.ScriptBuilder.seq\"><span class=\"name\">Aesop</span>.<span class=\"name\">ScriptBuilder</span>.<span class=\"name\">seq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.MonadQuotation\">Lean.MonadQuotation</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.ScriptBuilder\">Aesop.ScriptBuilder</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(bs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.ScriptBuilder\">Aesop.ScriptBuilder</a> <span class=\"fn\">m</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.ScriptBuilder\">Aesop.ScriptBuilder</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L213-L215","name":"Aesop.ScriptBuilder.ofTactic","line":213,"kind":"def","docLink":"./Aesop/Script.html#Aesop.ScriptBuilder.ofTactic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.ScriptBuilder.ofTactic\"><span class=\"name\">Aesop</span>.<span class=\"name\">ScriptBuilder</span>.<span class=\"name\">ofTactic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.MonadQuotation\">Lean.MonadQuotation</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(subgoals : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Meta.html#Lean.Syntax.Tactic\">Lean.Syntax.Tactic</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.ScriptBuilder\">Aesop.ScriptBuilder</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L209-L211","name":"Aesop.ScriptBuilder.ofUnstructuredScriptBuilder","line":209,"kind":"def","docLink":"./Aesop/Script.html#Aesop.ScriptBuilder.ofUnstructuredScriptBuilder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.ScriptBuilder.ofUnstructuredScriptBuilder\"><span class=\"name\">Aesop</span>.<span class=\"name\">ScriptBuilder</span>.<span class=\"name\">ofUnstructuredScriptBuilder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.MonadQuotation\">Lean.MonadQuotation</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(subgoals : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.UnstructuredScriptBuilder\">Aesop.UnstructuredScriptBuilder</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.ScriptBuilder\">Aesop.ScriptBuilder</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L203-L206","name":"Aesop.ScriptBuilder.ofTactics","line":203,"kind":"def","docLink":"./Aesop/Script.html#Aesop.ScriptBuilder.ofTactics","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.ScriptBuilder.ofTactics\"><span class=\"name\">Aesop</span>.<span class=\"name\">ScriptBuilder</span>.<span class=\"name\">ofTactics</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.MonadQuotation\">Lean.MonadQuotation</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(subgoals : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ts : <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Meta.html#Lean.Syntax.Tactic\">Lean.Syntax.Tactic</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.ScriptBuilder\">Aesop.ScriptBuilder</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L199-L201","name":"Aesop.ScriptBuilder.id","line":199,"kind":"def","docLink":"./Aesop/Script.html#Aesop.ScriptBuilder.id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.ScriptBuilder.id\"><span class=\"name\">Aesop</span>.<span class=\"name\">ScriptBuilder</span>.<span class=\"name\">id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.ScriptBuilder\">Aesop.ScriptBuilder</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L194-L195","name":"Aesop.instInhabitedScriptBuilder","line":194,"kind":"instance","docLink":"./Aesop/Script.html#Aesop.instInhabitedScriptBuilder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.instInhabitedScriptBuilder\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedScriptBuilder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Pure\">Pure</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.ScriptBuilder\">Aesop.ScriptBuilder</a> <span class=\"fn\">m</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L192-L192","name":"Aesop.ScriptBuilder.structured","line":192,"kind":"def","docLink":"./Aesop/Script.html#Aesop.ScriptBuilder.structured","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.ScriptBuilder.structured\"><span class=\"name\">Aesop</span>.<span class=\"name\">ScriptBuilder</span>.<span class=\"name\">structured</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.ScriptBuilder\">Aesop.ScriptBuilder</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.StructuredScriptBuilder\">Aesop.StructuredScriptBuilder</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L191-L191","name":"Aesop.ScriptBuilder.unstructured","line":191,"kind":"def","docLink":"./Aesop/Script.html#Aesop.ScriptBuilder.unstructured","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.ScriptBuilder.unstructured\"><span class=\"name\">Aesop</span>.<span class=\"name\">ScriptBuilder</span>.<span class=\"name\">unstructured</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.ScriptBuilder\">Aesop.ScriptBuilder</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.UnstructuredScriptBuilder\">Aesop.UnstructuredScriptBuilder</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L190-L190","name":"Aesop.ScriptBuilder.mk","line":190,"kind":"ctor","docLink":"./Aesop/Script.html#Aesop.ScriptBuilder.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.ScriptBuilder.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">ScriptBuilder</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(unstructured : <span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.UnstructuredScriptBuilder\">Aesop.UnstructuredScriptBuilder</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(structured : <span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.StructuredScriptBuilder\">Aesop.StructuredScriptBuilder</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.ScriptBuilder\">Aesop.ScriptBuilder</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L190-L192","name":"Aesop.ScriptBuilder","line":190,"kind":"structure","docLink":"./Aesop/Script.html#Aesop.ScriptBuilder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.ScriptBuilder\"><span class=\"name\">Aesop</span>.<span class=\"name\">ScriptBuilder</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L170-L185","name":"Aesop.StructuredScriptBuilder.seq","line":170,"kind":"def","docLink":"./Aesop/Script.html#Aesop.StructuredScriptBuilder.seq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.StructuredScriptBuilder.seq\"><span class=\"name\">Aesop</span>.<span class=\"name\">StructuredScriptBuilder</span>.<span class=\"name\">seq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.StructuredScriptBuilder\">Aesop.StructuredScriptBuilder</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(bs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.StructuredScriptBuilder\">Aesop.StructuredScriptBuilder</a> <span class=\"fn\">m</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.StructuredScriptBuilder\">Aesop.StructuredScriptBuilder</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L166-L168","name":"Aesop.StructuredScriptBuilder.error","line":166,"kind":"def","docLink":"./Aesop/Script.html#Aesop.StructuredScriptBuilder.error","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.StructuredScriptBuilder.error\"><span class=\"name\">Aesop</span>.<span class=\"name\">StructuredScriptBuilder</span>.<span class=\"name\">error</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(msg : <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.StructuredScriptBuilder\">Aesop.StructuredScriptBuilder</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L163-L164","name":"Aesop.StructuredScriptBuilder.instInhabitedStructuredScriptBuilder","line":163,"kind":"instance","docLink":"./Aesop/Script.html#Aesop.StructuredScriptBuilder.instInhabitedStructuredScriptBuilder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.StructuredScriptBuilder.instInhabitedStructuredScriptBuilder\"><span class=\"name\">Aesop</span>.<span class=\"name\">StructuredScriptBuilder</span>.<span class=\"name\">instInhabitedStructuredScriptBuilder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.StructuredScriptBuilder\">Aesop.StructuredScriptBuilder</a> <span class=\"fn\">m</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L160-L161","name":"Aesop.StructuredScriptBuilder.done","line":160,"kind":"def","docLink":"./Aesop/Script.html#Aesop.StructuredScriptBuilder.done","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.StructuredScriptBuilder.done\"><span class=\"name\">Aesop</span>.<span class=\"name\">StructuredScriptBuilder</span>.<span class=\"name\">done</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.MonadQuotation\">Lean.MonadQuotation</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.StructuredScriptBuilder\">Aesop.StructuredScriptBuilder</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L155-L157","name":"Aesop.StructuredScriptBuilder.ofTactic","line":155,"kind":"def","docLink":"./Aesop/Script.html#Aesop.StructuredScriptBuilder.ofTactic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.StructuredScriptBuilder.ofTactic\"><span class=\"name\">Aesop</span>.<span class=\"name\">StructuredScriptBuilder</span>.<span class=\"name\">ofTactic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.MonadQuotation\">Lean.MonadQuotation</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(subgoals : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Meta.html#Lean.Syntax.Tactic\">Lean.Syntax.Tactic</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.StructuredScriptBuilder\">Aesop.StructuredScriptBuilder</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L150-L152","name":"Aesop.StructuredScriptBuilder.ofUnstructuredScriptBuilder","line":150,"kind":"def","docLink":"./Aesop/Script.html#Aesop.StructuredScriptBuilder.ofUnstructuredScriptBuilder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.StructuredScriptBuilder.ofUnstructuredScriptBuilder\"><span class=\"name\">Aesop</span>.<span class=\"name\">StructuredScriptBuilder</span>.<span class=\"name\">ofUnstructuredScriptBuilder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.MonadQuotation\">Lean.MonadQuotation</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(subgoals : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.UnstructuredScriptBuilder\">Aesop.UnstructuredScriptBuilder</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.StructuredScriptBuilder\">Aesop.StructuredScriptBuilder</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L137-L147","name":"Aesop.StructuredScriptBuilder.ofTactics","line":137,"kind":"def","docLink":"./Aesop/Script.html#Aesop.StructuredScriptBuilder.ofTactics","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.StructuredScriptBuilder.ofTactics\"><span class=\"name\">Aesop</span>.<span class=\"name\">StructuredScriptBuilder</span>.<span class=\"name\">ofTactics</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.MonadQuotation\">Lean.MonadQuotation</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(subgoals : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ts : <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Meta.html#Lean.Syntax.Tactic\">Lean.Syntax.Tactic</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.StructuredScriptBuilder\">Aesop.StructuredScriptBuilder</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L131-L135","name":"Aesop.StructuredScriptBuilder.id","line":131,"kind":"def","docLink":"./Aesop/Script.html#Aesop.StructuredScriptBuilder.id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.StructuredScriptBuilder.id\"><span class=\"name\">Aesop</span>.<span class=\"name\">StructuredScriptBuilder</span>.<span class=\"name\">id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.StructuredScriptBuilder\">Aesop.StructuredScriptBuilder</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L121-L122","name":"Aesop.StructuredScriptBuilder.run","line":121,"kind":"def","docLink":"./Aesop/Script.html#Aesop.StructuredScriptBuilder.run","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.StructuredScriptBuilder.run\"><span class=\"name\">Aesop</span>.<span class=\"name\">StructuredScriptBuilder</span>.<span class=\"name\">run</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.StructuredScriptBuilder\">Aesop.StructuredScriptBuilder</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Meta.html#Lean.Syntax.Tactic\">Lean.Syntax.Tactic</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L116-L116","name":"Aesop.StructuredScriptBuilder.elim","line":116,"kind":"def","docLink":"./Aesop/Script.html#Aesop.StructuredScriptBuilder.elim","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.StructuredScriptBuilder.elim\"><span class=\"name\">Aesop</span>.<span class=\"name\">StructuredScriptBuilder</span>.<span class=\"name\">elim</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.StructuredScriptBuilder\">Aesop.StructuredScriptBuilder</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Array/Subarray.html#Subarray\">Subarray</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.UnstructuredScriptBuilder\">Aesop.UnstructuredScriptBuilder</a> <span class=\"fn\">m</span></span>)</span></span> → <span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.UnstructuredScriptBuilder\">Aesop.UnstructuredScriptBuilder</a> <span class=\"fn\">m</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L115-L115","name":"Aesop.StructuredScriptBuilder.subgoals","line":115,"kind":"def","docLink":"./Aesop/Script.html#Aesop.StructuredScriptBuilder.subgoals","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.StructuredScriptBuilder.subgoals\"><span class=\"name\">Aesop</span>.<span class=\"name\">StructuredScriptBuilder</span>.<span class=\"name\">subgoals</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.StructuredScriptBuilder\">Aesop.StructuredScriptBuilder</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L114-L114","name":"Aesop.StructuredScriptBuilder.mk","line":114,"kind":"ctor","docLink":"./Aesop/Script.html#Aesop.StructuredScriptBuilder.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.StructuredScriptBuilder.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">StructuredScriptBuilder</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(subgoals : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(elim : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Array/Subarray.html#Subarray\">Subarray</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.UnstructuredScriptBuilder\">Aesop.UnstructuredScriptBuilder</a> <span class=\"fn\">m</span></span>)</span></span> → <span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.UnstructuredScriptBuilder\">Aesop.UnstructuredScriptBuilder</a> <span class=\"fn\">m</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.StructuredScriptBuilder\">Aesop.StructuredScriptBuilder</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L114-L116","name":"Aesop.StructuredScriptBuilder","line":114,"kind":"structure","docLink":"./Aesop/Script.html#Aesop.StructuredScriptBuilder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.StructuredScriptBuilder\"><span class=\"name\">Aesop</span>.<span class=\"name\">StructuredScriptBuilder</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L108-L109","name":"Aesop.UnstructuredScriptBuilder.instInhabitedUnstructuredScriptBuilder","line":108,"kind":"instance","docLink":"./Aesop/Script.html#Aesop.UnstructuredScriptBuilder.instInhabitedUnstructuredScriptBuilder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.UnstructuredScriptBuilder.instInhabitedUnstructuredScriptBuilder\"><span class=\"name\">Aesop</span>.<span class=\"name\">UnstructuredScriptBuilder</span>.<span class=\"name\">instInhabitedUnstructuredScriptBuilder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Pure\">Pure</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.UnstructuredScriptBuilder\">Aesop.UnstructuredScriptBuilder</a> <span class=\"fn\">m</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L105-L106","name":"Aesop.UnstructuredScriptBuilder.id","line":105,"kind":"def","docLink":"./Aesop/Script.html#Aesop.UnstructuredScriptBuilder.id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.UnstructuredScriptBuilder.id\"><span class=\"name\">Aesop</span>.<span class=\"name\">UnstructuredScriptBuilder</span>.<span class=\"name\">id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.UnstructuredScriptBuilder\">Aesop.UnstructuredScriptBuilder</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L81-L102","name":"Aesop.UnstructuredScriptBuilder.seqFocus","line":81,"kind":"def","docLink":"./Aesop/Script.html#Aesop.UnstructuredScriptBuilder.seqFocus","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.UnstructuredScriptBuilder.seqFocus\"><span class=\"name\">Aesop</span>.<span class=\"name\">UnstructuredScriptBuilder</span>.<span class=\"name\">seqFocus</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.MonadQuotation\">Lean.MonadQuotation</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.UnstructuredScriptBuilder\">Aesop.UnstructuredScriptBuilder</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(bs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.UnstructuredScriptBuilder\">Aesop.UnstructuredScriptBuilder</a> <span class=\"fn\">m</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.UnstructuredScriptBuilder\">Aesop.UnstructuredScriptBuilder</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L76-L78","name":"Aesop.UnstructuredScriptBuilder.seqFocusAndDone","line":76,"kind":"def","docLink":"./Aesop/Script.html#Aesop.UnstructuredScriptBuilder.seqFocusAndDone","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.UnstructuredScriptBuilder.seqFocusAndDone\"><span class=\"name\">Aesop</span>.<span class=\"name\">UnstructuredScriptBuilder</span>.<span class=\"name\">seqFocusAndDone</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.MonadQuotation\">Lean.MonadQuotation</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.UnstructuredScriptBuilder\">Aesop.UnstructuredScriptBuilder</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(bs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.UnstructuredScriptBuilder\">Aesop.UnstructuredScriptBuilder</a> <span class=\"fn\">m</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.UnstructuredScriptBuilder\">Aesop.UnstructuredScriptBuilder</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L71-L73","name":"Aesop.UnstructuredScriptBuilder.focusAndDoneEach","line":71,"kind":"def","docLink":"./Aesop/Script.html#Aesop.UnstructuredScriptBuilder.focusAndDoneEach","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.UnstructuredScriptBuilder.focusAndDoneEach\"><span class=\"name\">Aesop</span>.<span class=\"name\">UnstructuredScriptBuilder</span>.<span class=\"name\">focusAndDoneEach</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.MonadQuotation\">Lean.MonadQuotation</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(bs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.UnstructuredScriptBuilder\">Aesop.UnstructuredScriptBuilder</a> <span class=\"fn\">m</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.UnstructuredScriptBuilder\">Aesop.UnstructuredScriptBuilder</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L67-L68","name":"Aesop.UnstructuredScriptBuilder.seq","line":67,"kind":"def","docLink":"./Aesop/Script.html#Aesop.UnstructuredScriptBuilder.seq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.UnstructuredScriptBuilder.seq\"><span class=\"name\">Aesop</span>.<span class=\"name\">UnstructuredScriptBuilder</span>.<span class=\"name\">seq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b₁ : <span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.UnstructuredScriptBuilder\">Aesop.UnstructuredScriptBuilder</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b₂ : <span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.UnstructuredScriptBuilder\">Aesop.UnstructuredScriptBuilder</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.UnstructuredScriptBuilder\">Aesop.UnstructuredScriptBuilder</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L63-L64","name":"Aesop.UnstructuredScriptBuilder.ofTactic","line":63,"kind":"def","docLink":"./Aesop/Script.html#Aesop.UnstructuredScriptBuilder.ofTactic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.UnstructuredScriptBuilder.ofTactic\"><span class=\"name\">Aesop</span>.<span class=\"name\">UnstructuredScriptBuilder</span>.<span class=\"name\">ofTactic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Meta.html#Lean.Syntax.Tactic\">Lean.Syntax.Tactic</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.UnstructuredScriptBuilder\">Aesop.UnstructuredScriptBuilder</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L59-L60","name":"Aesop.UnstructuredScriptBuilder.ofTactics","line":59,"kind":"def","docLink":"./Aesop/Script.html#Aesop.UnstructuredScriptBuilder.ofTactics","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.UnstructuredScriptBuilder.ofTactics\"><span class=\"name\">Aesop</span>.<span class=\"name\">UnstructuredScriptBuilder</span>.<span class=\"name\">ofTactics</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ts : <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Meta.html#Lean.Syntax.Tactic\">Lean.Syntax.Tactic</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.UnstructuredScriptBuilder\">Aesop.UnstructuredScriptBuilder</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L55-L56","name":"Aesop.UnstructuredScriptBuilder.run","line":55,"kind":"def","docLink":"./Aesop/Script.html#Aesop.UnstructuredScriptBuilder.run","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.UnstructuredScriptBuilder.run\"><span class=\"name\">Aesop</span>.<span class=\"name\">UnstructuredScriptBuilder</span>.<span class=\"name\">run</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Aesop/Script.html#Aesop.UnstructuredScriptBuilder\">Aesop.UnstructuredScriptBuilder</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Meta.html#Lean.Syntax.Tactic\">Lean.Syntax.Tactic</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L49-L49","name":"Aesop.UnstructuredScriptBuilder","line":49,"kind":"def","docLink":"./Aesop/Script.html#Aesop.UnstructuredScriptBuilder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.UnstructuredScriptBuilder\"><span class=\"name\">Aesop</span>.<span class=\"name\">UnstructuredScriptBuilder</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L41-L42","name":"Aesop.GoalWithMVars.ofMVarId","line":41,"kind":"def","docLink":"./Aesop/Script.html#Aesop.GoalWithMVars.ofMVarId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.GoalWithMVars.ofMVarId\"><span class=\"name\">Aesop</span>.<span class=\"name\">GoalWithMVars</span>.<span class=\"name\">ofMVarId</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(goal : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Aesop/Script.html#Aesop.GoalWithMVars\">Aesop.GoalWithMVars</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L37-L38","name":"Aesop.instBEqGoalWithMVars","line":37,"kind":"instance","docLink":"./Aesop/Script.html#Aesop.instBEqGoalWithMVars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.instBEqGoalWithMVars\"><span class=\"name\">Aesop</span>.<span class=\"name\">instBEqGoalWithMVars</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Aesop/Script.html#Aesop.GoalWithMVars\">Aesop.GoalWithMVars</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L33-L35","name":"Aesop.instReprGoalWithMVars","line":33,"kind":"instance","docLink":"./Aesop/Script.html#Aesop.instReprGoalWithMVars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.instReprGoalWithMVars\"><span class=\"name\">Aesop</span>.<span class=\"name\">instReprGoalWithMVars</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Aesop/Script.html#Aesop.GoalWithMVars\">Aesop.GoalWithMVars</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L31-L31","name":"Aesop.instInhabitedGoalWithMVars","line":31,"kind":"instance","docLink":"./Aesop/Script.html#Aesop.instInhabitedGoalWithMVars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.instInhabitedGoalWithMVars\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedGoalWithMVars</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Aesop/Script.html#Aesop.GoalWithMVars\">Aesop.GoalWithMVars</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L30-L30","name":"Aesop.GoalWithMVars.mvars","line":30,"kind":"def","docLink":"./Aesop/Script.html#Aesop.GoalWithMVars.mvars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.GoalWithMVars.mvars\"><span class=\"name\">Aesop</span>.<span class=\"name\">GoalWithMVars</span>.<span class=\"name\">mvars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Aesop/Script.html#Aesop.GoalWithMVars\">Aesop.GoalWithMVars</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/HashSet.html#Lean.HashSet\">Lean.HashSet</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L29-L29","name":"Aesop.GoalWithMVars.goal","line":29,"kind":"def","docLink":"./Aesop/Script.html#Aesop.GoalWithMVars.goal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.GoalWithMVars.goal\"><span class=\"name\">Aesop</span>.<span class=\"name\">GoalWithMVars</span>.<span class=\"name\">goal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Aesop/Script.html#Aesop.GoalWithMVars\">Aesop.GoalWithMVars</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L28-L28","name":"Aesop.GoalWithMVars.mk","line":28,"kind":"ctor","docLink":"./Aesop/Script.html#Aesop.GoalWithMVars.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.GoalWithMVars.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">GoalWithMVars</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(goal : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mvars : <span class=\"fn\"><a href=\"./Lean/Data/HashSet.html#Lean.HashSet\">Lean.HashSet</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Script.html#Aesop.GoalWithMVars\">Aesop.GoalWithMVars</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/8be30c25e3caa06937feeb62f7ca898370f80ee9/Aesop/Script.lean#L28-L31","name":"Aesop.GoalWithMVars","line":28,"kind":"structure","docLink":"./Aesop/Script.html#Aesop.GoalWithMVars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script.html#Aesop.GoalWithMVars\"><span class=\"name\">Aesop</span>.<span class=\"name\">GoalWithMVars</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}