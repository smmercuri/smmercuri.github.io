{"name":"Lean.Attributes","instances":[{"typeNames":["Lean.AttributeApplicationTime"],"name":"Lean.instInhabitedAttributeApplicationTime","className":"Inhabited"},{"typeNames":["Lean.AttributeApplicationTime"],"name":"Lean.instBEqAttributeApplicationTime","className":"BEq"},{"typeNames":["Lean.ImportM","Lean.AttrM"],"name":"Lean.instMonadLiftImportMAttrM","className":"MonadLift"},{"typeNames":["Lean.AttributeImplCore"],"name":"Lean.instInhabitedAttributeImplCore","className":"Inhabited"},{"typeNames":["Lean.AttributeKind"],"name":"Lean.instBEqAttributeKind","className":"BEq"},{"typeNames":["Lean.AttributeKind"],"name":"Lean.instInhabitedAttributeKind","className":"Inhabited"},{"typeNames":["Lean.AttributeKind"],"name":"Lean.instToStringAttributeKind","className":"ToString"},{"typeNames":["Lean.AttributeImpl"],"name":"Lean.instInhabitedAttributeImpl","className":"Inhabited"},{"typeNames":["Lean.TagAttribute"],"name":"Lean.instInhabitedTagAttribute","className":"Inhabited"},{"typeNames":["Lean.ParametricAttribute"],"name":"Lean.instInhabitedParametricAttribute","className":"Inhabited"},{"typeNames":["Lean.EnumAttributes"],"name":"Lean.instInhabitedEnumAttributes","className":"Inhabited"},{"typeNames":["Lean.AttributeExtensionState"],"name":"Lean.instInhabitedAttributeExtensionState","className":"Inhabited"}],"imports":["Lean.CoreM","Lean.MonadEnv"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L441-L442","name":"Lean.getNumBuiltinAttributesImpl","line":441,"kind":"def","docLink":"./Lean/Attributes.html#Lean.getNumBuiltinAttributesImpl","doc":"`getNumBuiltinAttributes` implementation "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.getNumBuiltinAttributesImpl\"><span class=\"name\">Lean</span>.<span class=\"name\">getNumBuiltinAttributesImpl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L430-L438","name":"Lean.updateEnvAttributesImpl","line":430,"kind":"def","docLink":"./Lean/Attributes.html#Lean.updateEnvAttributesImpl","doc":"`updateEnvAttributes` implementation "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.updateEnvAttributesImpl\"><span class=\"name\">Lean</span>.<span class=\"name\">updateEnvAttributesImpl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L424-L426","name":"Lean.Attribute.erase","line":424,"kind":"def","docLink":"./Lean/Attributes.html#Lean.Attribute.erase","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.Attribute.erase\"><span class=\"name\">Lean</span>.<span class=\"name\">Attribute</span>.<span class=\"name\">erase</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(attrName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">Lean.AttrM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L420-L422","name":"Lean.Attribute.add","line":420,"kind":"def","docLink":"./Lean/Attributes.html#Lean.Attribute.add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.Attribute.add\"><span class=\"name\">Lean</span>.<span class=\"name\">Attribute</span>.<span class=\"name\">add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(attrName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(kind : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Lean/Attributes.html#Lean.AttributeKind\">Lean.AttributeKind</a> <a href=\"./Lean/Attributes.html#Lean.AttributeKind.global\">Lean.AttributeKind.global</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">Lean.AttrM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L413-L418","name":"Lean.registerAttributeOfBuilder","line":413,"kind":"def","docLink":"./Lean/Attributes.html#Lean.registerAttributeOfBuilder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.registerAttributeOfBuilder\"><span class=\"name\">Lean</span>.<span class=\"name\">registerAttributeOfBuilder</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(builderId : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ref : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(args : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Data/KVMap.html#Lean.DataValue\">Lean.DataValue</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L406-L411","name":"Lean.registerAttributeOfDecl","line":406,"kind":"def","docLink":"./Lean/Attributes.html#Lean.registerAttributeOfDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.registerAttributeOfDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">registerAttributeOfDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(opts : <a href=\"./Lean/Data/Options.html#Lean.Options\">Lean.Options</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(attrDeclName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L400-L404","name":"Lean.getAttributeImpl","line":400,"kind":"def","docLink":"./Lean/Attributes.html#Lean.getAttributeImpl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.getAttributeImpl\"><span class=\"name\">Lean</span>.<span class=\"name\">getAttributeImpl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(attrName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">Lean.AttributeImpl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L396-L398","name":"Lean.getAttributeNames","line":396,"kind":"def","docLink":"./Lean/Attributes.html#Lean.getAttributeNames","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.getAttributeNames\"><span class=\"name\">Lean</span>.<span class=\"name\">getAttributeNames</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L393-L394","name":"Lean.isAttribute","line":393,"kind":"def","docLink":"./Lean/Attributes.html#Lean.isAttribute","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.isAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">isAttribute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(attrName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L389-L391","name":"Lean.getBuiltinAttributeApplicationTime","line":389,"kind":"def","docLink":"./Lean/Attributes.html#Lean.getBuiltinAttributeApplicationTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.getBuiltinAttributeApplicationTime\"><span class=\"name\">Lean</span>.<span class=\"name\">getBuiltinAttributeApplicationTime</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Attributes.html#Lean.AttributeApplicationTime\">Lean.AttributeApplicationTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L382-L386","name":"Lean.getBuiltinAttributeImpl","line":382,"kind":"def","docLink":"./Lean/Attributes.html#Lean.getBuiltinAttributeImpl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.getBuiltinAttributeImpl\"><span class=\"name\">Lean</span>.<span class=\"name\">getBuiltinAttributeImpl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(attrName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">Lean.AttributeImpl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L379-L380","name":"Lean.getBuiltinAttributeNames","line":379,"kind":"def","docLink":"./Lean/Attributes.html#Lean.getBuiltinAttributeNames","doc":"Return the name of all registered attributes. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.getBuiltinAttributeNames\"><span class=\"name\">Lean</span>.<span class=\"name\">getBuiltinAttributeNames</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L375-L376","name":"Lean.isBuiltinAttribute","line":375,"kind":"def","docLink":"./Lean/Attributes.html#Lean.isBuiltinAttribute","doc":"Return true iff `n` is the name of a registered attribute. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.isBuiltinAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">isBuiltinAttribute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L364-L371","name":"Lean.attributeExtension","line":364,"kind":"opaque","docLink":"./Lean/Attributes.html#Lean.attributeExtension","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.attributeExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">attributeExtension</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Attributes.html#Lean.AttributeExtension\">Lean.AttributeExtension</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L343-L346","name":"Lean.mkAttributeImplOfEntry","line":343,"kind":"def","docLink":"./Lean/Attributes.html#Lean.mkAttributeImplOfEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.mkAttributeImplOfEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">mkAttributeImplOfEntry</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(opts : <a href=\"./Lean/Data/Options.html#Lean.Options\">Lean.Options</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Attributes.html#Lean.AttributeExtensionOLeanEntry\">Lean.AttributeExtensionOLeanEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">Lean.AttributeImpl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L341-L341","name":"Lean.mkAttributeImplOfConstant","line":341,"kind":"opaque","docLink":"./Lean/Attributes.html#Lean.mkAttributeImplOfConstant","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.mkAttributeImplOfConstant\"><span class=\"name\">Lean</span>.<span class=\"name\">mkAttributeImplOfConstant</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(opts : <a href=\"./Lean/Data/Options.html#Lean.Options\">Lean.Options</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">Lean.AttributeImpl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L332-L338","name":"Lean.mkAttributeImplOfConstantUnsafe","line":332,"kind":"def","docLink":"./Lean/Attributes.html#Lean.mkAttributeImplOfConstantUnsafe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.mkAttributeImplOfConstantUnsafe\"><span class=\"name\">Lean</span>.<span class=\"name\">mkAttributeImplOfConstantUnsafe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(opts : <a href=\"./Lean/Data/Options.html#Lean.Options\">Lean.Options</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">Lean.AttributeImpl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L326-L326","name":"Lean.AttributeExtension","line":326,"kind":"def","docLink":"./Lean/Attributes.html#Lean.AttributeExtension","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeExtension</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L324-L324","name":"Lean.instInhabitedAttributeExtensionState","line":324,"kind":"instance","docLink":"./Lean/Attributes.html#Lean.instInhabitedAttributeExtensionState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.instInhabitedAttributeExtensionState\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedAttributeExtensionState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Attributes.html#Lean.AttributeExtensionState\">Lean.AttributeExtensionState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L323-L323","name":"Lean.AttributeExtensionState.map","line":323,"kind":"def","docLink":"./Lean/Attributes.html#Lean.AttributeExtensionState.map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeExtensionState.map\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeExtensionState</span>.<span class=\"name\">map</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Attributes.html#Lean.AttributeExtensionState\">Lean.AttributeExtensionState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap\">Lean.PersistentHashMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">Lean.AttributeImpl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L322-L322","name":"Lean.AttributeExtensionState.newEntries","line":322,"kind":"def","docLink":"./Lean/Attributes.html#Lean.AttributeExtensionState.newEntries","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeExtensionState.newEntries\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeExtensionState</span>.<span class=\"name\">newEntries</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Attributes.html#Lean.AttributeExtensionState\">Lean.AttributeExtensionState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Attributes.html#Lean.AttributeExtensionOLeanEntry\">Lean.AttributeExtensionOLeanEntry</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L321-L321","name":"Lean.AttributeExtensionState.mk","line":321,"kind":"ctor","docLink":"./Lean/Attributes.html#Lean.AttributeExtensionState.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeExtensionState.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeExtensionState</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(newEntries : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Attributes.html#Lean.AttributeExtensionOLeanEntry\">Lean.AttributeExtensionOLeanEntry</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(map : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap\">Lean.PersistentHashMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">Lean.AttributeImpl</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Attributes.html#Lean.AttributeExtensionState\">Lean.AttributeExtensionState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L321-L324","name":"Lean.AttributeExtensionState","line":321,"kind":"structure","docLink":"./Lean/Attributes.html#Lean.AttributeExtensionState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeExtensionState\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeExtensionState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L319-L319","name":"Lean.AttributeExtensionOLeanEntry.builder","line":319,"kind":"ctor","docLink":"./Lean/Attributes.html#Lean.AttributeExtensionOLeanEntry.builder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeExtensionOLeanEntry.builder\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeExtensionOLeanEntry</span>.<span class=\"name\">builder</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(builderId : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ref : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(args : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Data/KVMap.html#Lean.DataValue\">Lean.DataValue</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Attributes.html#Lean.AttributeExtensionOLeanEntry\">Lean.AttributeExtensionOLeanEntry</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L318-L318","name":"Lean.AttributeExtensionOLeanEntry.decl","line":318,"kind":"ctor","docLink":"./Lean/Attributes.html#Lean.AttributeExtensionOLeanEntry.decl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeExtensionOLeanEntry.decl\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeExtensionOLeanEntry</span>.<span class=\"name\">decl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Attributes.html#Lean.AttributeExtensionOLeanEntry\">Lean.AttributeExtensionOLeanEntry</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L317-L319","name":"Lean.AttributeExtensionOLeanEntry","line":317,"kind":"inductive","docLink":"./Lean/Attributes.html#Lean.AttributeExtensionOLeanEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeExtensionOLeanEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeExtensionOLeanEntry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L311-L315","name":"Lean.mkAttributeImplOfBuilder","line":311,"kind":"def","docLink":"./Lean/Attributes.html#Lean.mkAttributeImplOfBuilder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.mkAttributeImplOfBuilder\"><span class=\"name\">Lean</span>.<span class=\"name\">mkAttributeImplOfBuilder</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(builderId : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ref : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(args : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Data/KVMap.html#Lean.DataValue\">Lean.DataValue</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">Lean.AttributeImpl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L306-L309","name":"Lean.registerAttributeImplBuilder","line":306,"kind":"def","docLink":"./Lean/Attributes.html#Lean.registerAttributeImplBuilder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.registerAttributeImplBuilder\"><span class=\"name\">Lean</span>.<span class=\"name\">registerAttributeImplBuilder</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(builderId : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(builder : <a href=\"./Lean/Attributes.html#Lean.AttributeImplBuilder\">Lean.AttributeImplBuilder</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L304-L304","name":"Lean.attributeImplBuilderTableRef","line":304,"kind":"opaque","docLink":"./Lean/Attributes.html#Lean.attributeImplBuilderTableRef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.attributeImplBuilderTableRef\"><span class=\"name\">Lean</span>.<span class=\"name\">attributeImplBuilderTableRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <a href=\"./Lean/Attributes.html#Lean.AttributeImplBuilderTable\">Lean.AttributeImplBuilderTable</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L302-L302","name":"Lean.AttributeImplBuilderTable","line":302,"kind":"def","docLink":"./Lean/Attributes.html#Lean.AttributeImplBuilderTable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeImplBuilderTable\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeImplBuilderTable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L301-L301","name":"Lean.AttributeImplBuilder","line":301,"kind":"def","docLink":"./Lean/Attributes.html#Lean.AttributeImplBuilder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeImplBuilder\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeImplBuilder</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L287-L293","name":"Lean.EnumAttributes.setValue","line":287,"kind":"def","docLink":"./Lean/Attributes.html#Lean.EnumAttributes.setValue","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.EnumAttributes.setValue\"><span class=\"name\">Lean</span>.<span class=\"name\">EnumAttributes</span>.<span class=\"name\">setValue</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(attrs : <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.EnumAttributes\">Lean.EnumAttributes</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(decl : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(val : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L279-L285","name":"Lean.EnumAttributes.getValue","line":279,"kind":"def","docLink":"./Lean/Attributes.html#Lean.EnumAttributes.getValue","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.EnumAttributes.getValue\"><span class=\"name\">Lean</span>.<span class=\"name\">EnumAttributes</span>.<span class=\"name\">getValue</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(attr : <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.EnumAttributes\">Lean.EnumAttributes</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(decl : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L245-L275","name":"Lean.registerEnumAttributes","line":245,"kind":"def","docLink":"./Lean/Attributes.html#Lean.registerEnumAttributes","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.registerEnumAttributes\"><span class=\"name\">Lean</span>.<span class=\"name\">registerEnumAttributes</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(attrDescrs : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">α</span></span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(validate : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">Lean.AttrM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>) (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Pure.pure\">pure</a> <a href=\"./Init/Prelude.html#Unit.unit\">()</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(applicationTime : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Lean/Attributes.html#Lean.AttributeApplicationTime\">Lean.AttributeApplicationTime</a> <a href=\"./Lean/Attributes.html#Lean.AttributeApplicationTime.afterTypeChecking\">Lean.AttributeApplicationTime.afterTypeChecking</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ref : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Lean/Attributes.html#_auto._@.Lean.Attributes._hyg.2546\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.EnumAttributes\">Lean.EnumAttributes</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L243-L243","name":"Lean.instInhabitedEnumAttributes","line":243,"kind":"instance","docLink":"./Lean/Attributes.html#Lean.instInhabitedEnumAttributes","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.instInhabitedEnumAttributes\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedEnumAttributes</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./foundational_types.html\">Type</a>} → <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.EnumAttributes\">Lean.EnumAttributes</a> <span class=\"fn\">a</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L242-L242","name":"Lean.EnumAttributes.ext","line":242,"kind":"def","docLink":"./Lean/Attributes.html#Lean.EnumAttributes.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.EnumAttributes.ext\"><span class=\"name\">Lean</span>.<span class=\"name\">EnumAttributes</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.EnumAttributes\">Lean.EnumAttributes</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">Lean.PersistentEnvExtension</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">α</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">α</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">Lake.NameMap</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L241-L241","name":"Lean.EnumAttributes.attrs","line":241,"kind":"def","docLink":"./Lean/Attributes.html#Lean.EnumAttributes.attrs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.EnumAttributes.attrs\"><span class=\"name\">Lean</span>.<span class=\"name\">EnumAttributes</span>.<span class=\"name\">attrs</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.EnumAttributes\">Lean.EnumAttributes</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">Lean.AttributeImpl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L240-L240","name":"Lean.EnumAttributes.mk","line":240,"kind":"ctor","docLink":"./Lean/Attributes.html#Lean.EnumAttributes.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.EnumAttributes.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">EnumAttributes</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(attrs : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">Lean.AttributeImpl</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">Lean.PersistentEnvExtension</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">α</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">α</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">Lake.NameMap</a> <span class=\"fn\">α</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.EnumAttributes\">Lean.EnumAttributes</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L240-L243","name":"Lean.EnumAttributes","line":240,"kind":"structure","docLink":"./Lean/Attributes.html#Lean.EnumAttributes","doc":"Given a list `[a₁, ..., a_n]` of elements of type `α`, `EnumAttributes` provides an attribute `Attr_i` for\nassociating a value `a_i` with an declaration. `α` is usually an enumeration type.\nNote that whenever we register an `EnumAttributes`, we create `n` attributes, but only one environment extension. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.EnumAttributes\"><span class=\"name\">Lean</span>.<span class=\"name\">EnumAttributes</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L226-L232","name":"Lean.ParametricAttribute.setParam","line":226,"kind":"def","docLink":"./Lean/Attributes.html#Lean.ParametricAttribute.setParam","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.ParametricAttribute.setParam\"><span class=\"name\">Lean</span>.<span class=\"name\">ParametricAttribute</span>.<span class=\"name\">setParam</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(attr : <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.ParametricAttribute\">Lean.ParametricAttribute</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(decl : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(param : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L218-L224","name":"Lean.ParametricAttribute.getParam?","line":218,"kind":"def","docLink":"./Lean/Attributes.html#Lean.ParametricAttribute.getParam?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.ParametricAttribute.getParam?\"><span class=\"name\">Lean</span>.<span class=\"name\">ParametricAttribute</span>.<span class=\"name\">getParam?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(attr : <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.ParametricAttribute\">Lean.ParametricAttribute</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(decl : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L191-L214","name":"Lean.registerParametricAttribute","line":191,"kind":"def","docLink":"./Lean/Attributes.html#Lean.registerParametricAttribute","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.registerParametricAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">registerParametricAttribute</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(impl : <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.ParametricAttributeImpl\">Lean.ParametricAttributeImpl</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.ParametricAttribute\">Lean.ParametricAttribute</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L189-L189","name":"Lean.ParametricAttributeImpl.afterImport","line":189,"kind":"def","docLink":"./Lean/Attributes.html#Lean.ParametricAttributeImpl.afterImport","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.ParametricAttributeImpl.afterImport\"><span class=\"name\">Lean</span>.<span class=\"name\">ParametricAttributeImpl</span>.<span class=\"name\">afterImport</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.ParametricAttributeImpl\">Lean.ParametricAttributeImpl</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">α</span></span>)</span></span>)</span></span> → <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.ImportM\">Lean.ImportM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L188-L188","name":"Lean.ParametricAttributeImpl.afterSet","line":188,"kind":"def","docLink":"./Lean/Attributes.html#Lean.ParametricAttributeImpl.afterSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.ParametricAttributeImpl.afterSet\"><span class=\"name\">Lean</span>.<span class=\"name\">ParametricAttributeImpl</span>.<span class=\"name\">afterSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.ParametricAttributeImpl\">Lean.ParametricAttributeImpl</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">Lean.AttrM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L187-L187","name":"Lean.ParametricAttributeImpl.getParam","line":187,"kind":"def","docLink":"./Lean/Attributes.html#Lean.ParametricAttributeImpl.getParam","doc":"This is used as the target for go-to-definition queries for simple attributes "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.ParametricAttributeImpl.getParam\"><span class=\"name\">Lean</span>.<span class=\"name\">ParametricAttributeImpl</span>.<span class=\"name\">getParam</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.ParametricAttributeImpl\">Lean.ParametricAttributeImpl</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a> → <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">Lean.AttrM</a> <span class=\"fn\">α</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L185-L185","name":"Lean.ParametricAttributeImpl.mk","line":185,"kind":"ctor","docLink":"./Lean/Attributes.html#Lean.ParametricAttributeImpl.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.ParametricAttributeImpl.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">ParametricAttributeImpl</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(toAttributeImplCore : <a href=\"./Lean/Attributes.html#Lean.AttributeImplCore\">Lean.AttributeImplCore</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(getParam : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a> → <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">Lean.AttrM</a> <span class=\"fn\">α</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(afterSet : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">Lean.AttrM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(afterImport : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">α</span></span>)</span></span>)</span></span> → <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.ImportM\">Lean.ImportM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.ParametricAttributeImpl\">Lean.ParametricAttributeImpl</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L185-L189","name":"Lean.ParametricAttributeImpl","line":185,"kind":"structure","docLink":"./Lean/Attributes.html#Lean.ParametricAttributeImpl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.ParametricAttributeImpl\"><span class=\"name\">Lean</span>.<span class=\"name\">ParametricAttributeImpl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeImplCore\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeImplCore</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L183-L183","name":"Lean.instInhabitedParametricAttribute","line":183,"kind":"instance","docLink":"./Lean/Attributes.html#Lean.instInhabitedParametricAttribute","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.instInhabitedParametricAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedParametricAttribute</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./foundational_types.html\">Type</a>} → <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.ParametricAttribute\">Lean.ParametricAttribute</a> <span class=\"fn\">a</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L182-L182","name":"Lean.ParametricAttribute.ext","line":182,"kind":"def","docLink":"./Lean/Attributes.html#Lean.ParametricAttribute.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.ParametricAttribute.ext\"><span class=\"name\">Lean</span>.<span class=\"name\">ParametricAttribute</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.ParametricAttribute\">Lean.ParametricAttribute</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">Lean.PersistentEnvExtension</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">α</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">α</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">Lake.NameMap</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L181-L181","name":"Lean.ParametricAttribute.attr","line":181,"kind":"def","docLink":"./Lean/Attributes.html#Lean.ParametricAttribute.attr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.ParametricAttribute.attr\"><span class=\"name\">Lean</span>.<span class=\"name\">ParametricAttribute</span>.<span class=\"name\">attr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.ParametricAttribute\">Lean.ParametricAttribute</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">Lean.AttributeImpl</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L180-L180","name":"Lean.ParametricAttribute.mk","line":180,"kind":"ctor","docLink":"./Lean/Attributes.html#Lean.ParametricAttribute.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.ParametricAttribute.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">ParametricAttribute</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(attr : <a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">Lean.AttributeImpl</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">Lean.PersistentEnvExtension</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">α</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">α</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Data/NameMap.html#Lean.NameMap\">Lake.NameMap</a> <span class=\"fn\">α</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.ParametricAttribute\">Lean.ParametricAttribute</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L180-L183","name":"Lean.ParametricAttribute","line":180,"kind":"structure","docLink":"./Lean/Attributes.html#Lean.ParametricAttribute","doc":"A `TagAttribute` variant where we can attach parameters to attributes.\nIt is slightly more expensive and consumes a little bit more memory than `TagAttribute`.\n\nThey provide the function `pAttr.getParam env decl` which returns `some p` iff declaration `decl`\ncontains the attribute `pAttr` with parameter `p`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.ParametricAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">ParametricAttribute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L167-L170","name":"Lean.TagAttribute.hasTag","line":167,"kind":"def","docLink":"./Lean/Attributes.html#Lean.TagAttribute.hasTag","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.TagAttribute.hasTag\"><span class=\"name\">Lean</span>.<span class=\"name\">TagAttribute</span>.<span class=\"name\">hasTag</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(attr : <a href=\"./Lean/Attributes.html#Lean.TagAttribute\">Lean.TagAttribute</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(decl : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L139-L163","name":"Lean.registerTagAttribute","line":139,"kind":"def","docLink":"./Lean/Attributes.html#Lean.registerTagAttribute","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.registerTagAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">registerTagAttribute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(name : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(descr : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(validate : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> → <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">Lean.AttrM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Pure.pure\">pure</a> <a href=\"./Init/Prelude.html#Unit.unit\">()</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ref : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Lean/Attributes.html#_auto._@.Lean.Attributes._hyg.1283\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(applicationTime : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Lean/Attributes.html#Lean.AttributeApplicationTime\">Lean.AttributeApplicationTime</a> <a href=\"./Lean/Attributes.html#Lean.AttributeApplicationTime.afterTypeChecking\">Lean.AttributeApplicationTime.afterTypeChecking</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Attributes.html#Lean.TagAttribute\">Lean.TagAttribute</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L137-L137","name":"Lean.instInhabitedTagAttribute","line":137,"kind":"instance","docLink":"./Lean/Attributes.html#Lean.instInhabitedTagAttribute","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.instInhabitedTagAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedTagAttribute</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Attributes.html#Lean.TagAttribute\">Lean.TagAttribute</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L136-L136","name":"Lean.TagAttribute.ext","line":136,"kind":"def","docLink":"./Lean/Attributes.html#Lean.TagAttribute.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.TagAttribute.ext\"><span class=\"name\">Lean</span>.<span class=\"name\">TagAttribute</span>.<span class=\"name\">ext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Attributes.html#Lean.TagAttribute\">Lean.TagAttribute</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">Lean.PersistentEnvExtension</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">Lean.NameSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L135-L135","name":"Lean.TagAttribute.attr","line":135,"kind":"def","docLink":"./Lean/Attributes.html#Lean.TagAttribute.attr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.TagAttribute.attr\"><span class=\"name\">Lean</span>.<span class=\"name\">TagAttribute</span>.<span class=\"name\">attr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Attributes.html#Lean.TagAttribute\">Lean.TagAttribute</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">Lean.AttributeImpl</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L134-L134","name":"Lean.TagAttribute.mk","line":134,"kind":"ctor","docLink":"./Lean/Attributes.html#Lean.TagAttribute.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.TagAttribute.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">TagAttribute</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(attr : <a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">Lean.AttributeImpl</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">Lean.PersistentEnvExtension</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">Lean.NameSet</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Attributes.html#Lean.TagAttribute\">Lean.TagAttribute</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L134-L137","name":"Lean.TagAttribute","line":134,"kind":"structure","docLink":"./Lean/Attributes.html#Lean.TagAttribute","doc":"Tag attributes are simple and efficient. They are useful for marking declarations in the modules where\nthey were defined.\n\nThe startup cost for this kind of attribute is very small since `addImportedFn` is a constant function.\n\nThey provide the predicate `tagAttr.hasTag env decl` which returns true iff declaration `decl`\nis tagged in the environment `env`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.TagAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">TagAttribute</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L119-L123","name":"Lean.Attribute.Builtin.getPrio","line":119,"kind":"def","docLink":"./Lean/Attributes.html#Lean.Attribute.Builtin.getPrio","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.Attribute.Builtin.getPrio\"><span class=\"name\">Lean</span>.<span class=\"name\">Attribute</span>.<span class=\"name\">Builtin</span>.<span class=\"name\">getPrio</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">Lean.AttrM</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L112-L117","name":"Lean.getAttrParamOptPrio","line":112,"kind":"def","docLink":"./Lean/Attributes.html#Lean.getAttrParamOptPrio","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.getAttrParamOptPrio\"><span class=\"name\">Lean</span>.<span class=\"name\">getAttrParamOptPrio</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(optPrioStx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">Lean.AttrM</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L109-L110","name":"Lean.Attribute.Builtin.getId","line":109,"kind":"def","docLink":"./Lean/Attributes.html#Lean.Attribute.Builtin.getId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.Attribute.Builtin.getId\"><span class=\"name\">Lean</span>.<span class=\"name\">Attribute</span>.<span class=\"name\">Builtin</span>.<span class=\"name\">getId</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">Lean.AttrM</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L105-L107","name":"Lean.Attribute.Builtin.getId?","line":105,"kind":"def","docLink":"./Lean/Attributes.html#Lean.Attribute.Builtin.getId?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.Attribute.Builtin.getId?\"><span class=\"name\">Lean</span>.<span class=\"name\">Attribute</span>.<span class=\"name\">Builtin</span>.<span class=\"name\">getId?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">Lean.AttrM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L100-L103","name":"Lean.Attribute.Builtin.getIdent","line":100,"kind":"def","docLink":"./Lean/Attributes.html#Lean.Attribute.Builtin.getIdent","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.Attribute.Builtin.getIdent\"><span class=\"name\">Lean</span>.<span class=\"name\">Attribute</span>.<span class=\"name\">Builtin</span>.<span class=\"name\">getIdent</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">Lean.AttrM</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L88-L98","name":"Lean.Attribute.Builtin.getIdent?","line":88,"kind":"def","docLink":"./Lean/Attributes.html#Lean.Attribute.Builtin.getIdent?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.Attribute.Builtin.getIdent?\"><span class=\"name\">Lean</span>.<span class=\"name\">Attribute</span>.<span class=\"name\">Builtin</span>.<span class=\"name\">getIdent?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">Lean.AttrM</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L79-L86","name":"Lean.Attribute.Builtin.ensureNoArgs","line":79,"kind":"def","docLink":"./Lean/Attributes.html#Lean.Attribute.Builtin.ensureNoArgs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.Attribute.Builtin.ensureNoArgs\"><span class=\"name\">Lean</span>.<span class=\"name\">Attribute</span>.<span class=\"name\">Builtin</span>.<span class=\"name\">ensureNoArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">Lean.AttrM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L59-L64","name":"Lean.registerBuiltinAttribute","line":59,"kind":"def","docLink":"./Lean/Attributes.html#Lean.registerBuiltinAttribute","doc":"Low level attribute registration function. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.registerBuiltinAttribute\"><span class=\"name\">Lean</span>.<span class=\"name\">registerBuiltinAttribute</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(attr : <a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">Lean.AttributeImpl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L56-L56","name":"Lean.attributeMapRef","line":56,"kind":"opaque","docLink":"./Lean/Attributes.html#Lean.attributeMapRef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.attributeMapRef\"><span class=\"name\">Lean</span>.<span class=\"name\">attributeMapRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap\">Lean.PersistentHashMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">Lean.AttributeImpl</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L54-L54","name":"Lean.instInhabitedAttributeImpl","line":54,"kind":"instance","docLink":"./Lean/Attributes.html#Lean.instInhabitedAttributeImpl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.instInhabitedAttributeImpl\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedAttributeImpl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">Lean.AttributeImpl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L53-L53","name":"Lean.AttributeImpl.erase","line":53,"kind":"def","docLink":"./Lean/Attributes.html#Lean.AttributeImpl.erase","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeImpl.erase\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeImpl</span>.<span class=\"name\">erase</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">Lean.AttributeImpl</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(decl : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">Lean.AttrM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L52-L52","name":"Lean.AttributeImpl.add","line":52,"kind":"def","docLink":"./Lean/Attributes.html#Lean.AttributeImpl.add","doc":"This is run when the attribute is applied to a declaration `decl`. `stx` is the syntax of the attribute including arguments. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeImpl.add\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeImpl</span>.<span class=\"name\">add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">Lean.AttributeImpl</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(decl : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(kind : <a href=\"./Lean/Attributes.html#Lean.AttributeKind\">Lean.AttributeKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">Lean.AttrM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L50-L50","name":"Lean.AttributeImpl.mk","line":50,"kind":"ctor","docLink":"./Lean/Attributes.html#Lean.AttributeImpl.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeImpl.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeImpl</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(toAttributeImplCore : <a href=\"./Lean/Attributes.html#Lean.AttributeImplCore\">Lean.AttributeImplCore</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(add : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a> → <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttributeKind\">Lean.AttributeKind</a> → <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">Lean.AttrM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(erase : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> → <span class=\"fn\"><a href=\"./Lean/Attributes.html#Lean.AttrM\">Lean.AttrM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Attributes.html#Lean.AttributeImpl\">Lean.AttributeImpl</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L50-L54","name":"Lean.AttributeImpl","line":50,"kind":"structure","docLink":"./Lean/Attributes.html#Lean.AttributeImpl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeImpl\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeImpl</span></a></span><span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeImplCore\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeImplCore</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L44-L48","name":"Lean.instToStringAttributeKind","line":44,"kind":"instance","docLink":"./Lean/Attributes.html#Lean.instToStringAttributeKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.instToStringAttributeKind\"><span class=\"name\">Lean</span>.<span class=\"name\">instToStringAttributeKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Lean/Attributes.html#Lean.AttributeKind\">Lean.AttributeKind</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L42-L42","name":"Lean.instInhabitedAttributeKind","line":42,"kind":"instance","docLink":"./Lean/Attributes.html#Lean.instInhabitedAttributeKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.instInhabitedAttributeKind\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedAttributeKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Attributes.html#Lean.AttributeKind\">Lean.AttributeKind</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L42-L42","name":"Lean.instBEqAttributeKind","line":42,"kind":"instance","docLink":"./Lean/Attributes.html#Lean.instBEqAttributeKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.instBEqAttributeKind\"><span class=\"name\">Lean</span>.<span class=\"name\">instBEqAttributeKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/Attributes.html#Lean.AttributeKind\">Lean.AttributeKind</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L41-L41","name":"Lean.AttributeKind.scoped","line":41,"kind":"ctor","docLink":"./Lean/Attributes.html#Lean.AttributeKind.scoped","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeKind.scoped\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeKind</span>.<span class=\"name\">scoped</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Attributes.html#Lean.AttributeKind\">Lean.AttributeKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L41-L41","name":"Lean.AttributeKind.local","line":41,"kind":"ctor","docLink":"./Lean/Attributes.html#Lean.AttributeKind.local","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeKind.local\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeKind</span>.<span class=\"name\">local</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Attributes.html#Lean.AttributeKind\">Lean.AttributeKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L41-L41","name":"Lean.AttributeKind.global","line":41,"kind":"ctor","docLink":"./Lean/Attributes.html#Lean.AttributeKind.global","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeKind.global\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeKind</span>.<span class=\"name\">global</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Attributes.html#Lean.AttributeKind\">Lean.AttributeKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L40-L42","name":"Lean.AttributeKind","line":40,"kind":"inductive","docLink":"./Lean/Attributes.html#Lean.AttributeKind","doc":"You can tag attributes with the 'local' or 'scoped' kind.\nFor example: `attribute [local myattr, scoped yourattr, theirattr]`.\n\nThis is used to indicate how an attribute should be scoped.\n- local means that the attribute should only be applied in the current scope and forgotten once the current section, namespace, or file is closed.\n- scoped means that the attribute should only be applied while the namespace is open.\n- global means that the attribute should always be applied.\n\nNote that the attribute handler (`AttributeImpl.add`) is responsible for interpreting the kind and\nmaking sure that these kinds are respected.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeKind\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L27-L27","name":"Lean.instInhabitedAttributeImplCore","line":27,"kind":"instance","docLink":"./Lean/Attributes.html#Lean.instInhabitedAttributeImplCore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.instInhabitedAttributeImplCore\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedAttributeImplCore</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Attributes.html#Lean.AttributeImplCore\">Lean.AttributeImplCore</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L26-L26","name":"Lean.AttributeImplCore.applicationTime","line":26,"kind":"def","docLink":"./Lean/Attributes.html#Lean.AttributeImplCore.applicationTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeImplCore.applicationTime\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeImplCore</span>.<span class=\"name\">applicationTime</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Attributes.html#Lean.AttributeImplCore\">Lean.AttributeImplCore</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Attributes.html#Lean.AttributeApplicationTime\">Lean.AttributeApplicationTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L25-L25","name":"Lean.AttributeImplCore.descr","line":25,"kind":"def","docLink":"./Lean/Attributes.html#Lean.AttributeImplCore.descr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeImplCore.descr\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeImplCore</span>.<span class=\"name\">descr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Attributes.html#Lean.AttributeImplCore\">Lean.AttributeImplCore</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L24-L24","name":"Lean.AttributeImplCore.name","line":24,"kind":"def","docLink":"./Lean/Attributes.html#Lean.AttributeImplCore.name","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeImplCore.name\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeImplCore</span>.<span class=\"name\">name</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Attributes.html#Lean.AttributeImplCore\">Lean.AttributeImplCore</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L23-L23","name":"Lean.AttributeImplCore.ref","line":23,"kind":"def","docLink":"./Lean/Attributes.html#Lean.AttributeImplCore.ref","doc":"This is used as the target for go-to-definition queries for simple attributes "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeImplCore.ref\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeImplCore</span>.<span class=\"name\">ref</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Attributes.html#Lean.AttributeImplCore\">Lean.AttributeImplCore</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L21-L21","name":"Lean.AttributeImplCore.mk","line":21,"kind":"ctor","docLink":"./Lean/Attributes.html#Lean.AttributeImplCore.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeImplCore.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeImplCore</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ref : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Lean/Attributes.html#_auto._@.Lean.Attributes._hyg.98\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(name : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(descr : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(applicationTime : <a href=\"./Lean/Attributes.html#Lean.AttributeApplicationTime\">Lean.AttributeApplicationTime</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Attributes.html#Lean.AttributeImplCore\">Lean.AttributeImplCore</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L21-L27","name":"Lean.AttributeImplCore","line":21,"kind":"structure","docLink":"./Lean/Attributes.html#Lean.AttributeImplCore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeImplCore\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeImplCore</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L18-L19","name":"Lean.instMonadLiftImportMAttrM","line":18,"kind":"instance","docLink":"./Lean/Attributes.html#Lean.instMonadLiftImportMAttrM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.instMonadLiftImportMAttrM\"><span class=\"name\">Lean</span>.<span class=\"name\">instMonadLiftImportMAttrM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLift\">MonadLift</a> <a href=\"./Lean/Environment.html#Lean.ImportM\">Lean.ImportM</a> <a href=\"./Lean/Attributes.html#Lean.AttrM\">Lean.AttrM</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L16-L16","name":"Lean.AttrM","line":16,"kind":"def","docLink":"./Lean/Attributes.html#Lean.AttrM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttrM\"><span class=\"name\">Lean</span>.<span class=\"name\">AttrM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L14-L14","name":"Lean.instBEqAttributeApplicationTime","line":14,"kind":"instance","docLink":"./Lean/Attributes.html#Lean.instBEqAttributeApplicationTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.instBEqAttributeApplicationTime\"><span class=\"name\">Lean</span>.<span class=\"name\">instBEqAttributeApplicationTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/Attributes.html#Lean.AttributeApplicationTime\">Lean.AttributeApplicationTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L14-L14","name":"Lean.instInhabitedAttributeApplicationTime","line":14,"kind":"instance","docLink":"./Lean/Attributes.html#Lean.instInhabitedAttributeApplicationTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.instInhabitedAttributeApplicationTime\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedAttributeApplicationTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Attributes.html#Lean.AttributeApplicationTime\">Lean.AttributeApplicationTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L13-L13","name":"Lean.AttributeApplicationTime.beforeElaboration","line":13,"kind":"ctor","docLink":"./Lean/Attributes.html#Lean.AttributeApplicationTime.beforeElaboration","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeApplicationTime.beforeElaboration\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeApplicationTime</span>.<span class=\"name\">beforeElaboration</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Attributes.html#Lean.AttributeApplicationTime\">Lean.AttributeApplicationTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L13-L13","name":"Lean.AttributeApplicationTime.afterCompilation","line":13,"kind":"ctor","docLink":"./Lean/Attributes.html#Lean.AttributeApplicationTime.afterCompilation","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeApplicationTime.afterCompilation\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeApplicationTime</span>.<span class=\"name\">afterCompilation</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Attributes.html#Lean.AttributeApplicationTime\">Lean.AttributeApplicationTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L13-L13","name":"Lean.AttributeApplicationTime.afterTypeChecking","line":13,"kind":"ctor","docLink":"./Lean/Attributes.html#Lean.AttributeApplicationTime.afterTypeChecking","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeApplicationTime.afterTypeChecking\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeApplicationTime</span>.<span class=\"name\">afterTypeChecking</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Attributes.html#Lean.AttributeApplicationTime\">Lean.AttributeApplicationTime</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Attributes.lean#L12-L14","name":"Lean.AttributeApplicationTime","line":12,"kind":"inductive","docLink":"./Lean/Attributes.html#Lean.AttributeApplicationTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Attributes.html#Lean.AttributeApplicationTime\"><span class=\"name\">Lean</span>.<span class=\"name\">AttributeApplicationTime</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}