{"name":"Lean.Util.Heartbeats","instances":[],"imports":["Lean.CoreM"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Util/Heartbeats.lean#L53-L57","name":"Lean.reportOutOfHeartbeats","line":53,"kind":"def","docLink":"./Lean/Util/Heartbeats.html#Lean.reportOutOfHeartbeats","doc":"Log a message if it looks like we ran out of time. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Heartbeats.html#Lean.reportOutOfHeartbeats\"><span class=\"name\">Lean</span>.<span class=\"name\">reportOutOfHeartbeats</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(tac : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(threshold : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a> <span class=\"fn\">90</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Util/Heartbeats.lean#L49-L50","name":"Lean.heartbeatsPercent","line":49,"kind":"def","docLink":"./Lean/Util/Heartbeats.html#Lean.heartbeatsPercent","doc":"Returns the percentage of the max heartbeats allowed\nthat have been consumed so far in this computation.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Heartbeats.html#Lean.heartbeatsPercent\"><span class=\"name\">Lean</span>.<span class=\"name\">heartbeatsPercent</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Util/Heartbeats.lean#L42-L43","name":"Lean.getRemainingHeartbeats","line":42,"kind":"def","docLink":"./Lean/Util/Heartbeats.html#Lean.getRemainingHeartbeats","doc":"Returns the remaining heartbeats available in this computation. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Heartbeats.html#Lean.getRemainingHeartbeats\"><span class=\"name\">Lean</span>.<span class=\"name\">getRemainingHeartbeats</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Util/Heartbeats.lean#L39-L39","name":"Lean.getInitHeartbeats","line":39,"kind":"def","docLink":"./Lean/Util/Heartbeats.html#Lean.getInitHeartbeats","doc":"Returns the current `initHeartbeats`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Heartbeats.html#Lean.getInitHeartbeats\"><span class=\"name\">Lean</span>.<span class=\"name\">getInitHeartbeats</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Util/Heartbeats.lean#L36-L36","name":"Lean.getMaxHeartbeats","line":36,"kind":"def","docLink":"./Lean/Util/Heartbeats.html#Lean.getMaxHeartbeats","doc":"Returns the current `maxHeartbeats`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Heartbeats.html#Lean.getMaxHeartbeats\"><span class=\"name\">Lean</span>.<span class=\"name\">getMaxHeartbeats</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/6fce8f7d5cd18a4419bca7fd51780c71c9b1cc5a/src/Lean/Util/Heartbeats.lean#L29-L33","name":"Lean.withHeartbeats","line":29,"kind":"def","docLink":"./Lean/Util/Heartbeats.html#Lean.withHeartbeats","doc":"Counts the number of heartbeats used during a monadic function.\n\nRemember that user facing heartbeats (e.g. as used in `set_option maxHeartbeats`)\ndiffer from the internally tracked heartbeats by a factor of 1000,\nso you need to divide the results here by 1000 before comparing with user facing numbers.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Util/Heartbeats.html#Lean.withHeartbeats\"><span class=\"name\">Lean</span>.<span class=\"name\">withHeartbeats</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span></div></div>"}]}