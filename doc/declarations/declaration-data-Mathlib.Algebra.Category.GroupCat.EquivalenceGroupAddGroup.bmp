{"name":"Mathlib.Algebra.Category.GroupCat.EquivalenceGroupAddGroup","instances":[],"imports":["Init","Mathlib.Algebra.Category.GroupCat.Basic","Mathlib.Algebra.Group.Equiv.TypeTags"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.lean#L90-L93","name":"commGroupAddCommGroupEquivalence","line":90,"kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.html#commGroupAddCommGroupEquivalence","doc":"The equivalence of categories between `CommGroup` and `AddCommGroup`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.html#commGroupAddCommGroupEquivalence\"><span class=\"name\">commGroupAddCommGroupEquivalence</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#CommGroupCat\">CommGroupCat</a> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.lean#L82-L85","name":"groupAddGroupEquivalence","line":82,"kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.html#groupAddGroupEquivalence","doc":"The equivalence of categories between `Group` and `AddGroup`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.html#groupAddGroupEquivalence\"><span class=\"name\">groupAddGroupEquivalence</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#GroupCat\">GroupCat</a> <a href=\"./Mathlib/CategoryTheory/Equivalence.html#CategoryTheory.Equivalence\">≌</a> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddGroupCat\">AddGroupCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.lean#L73-L75","name":"AddCommGroupCat.toCommGroupCat","line":73,"kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.html#AddCommGroupCat.toCommGroupCat","doc":"The functor `AddCommGroup ⥤ CommGroup` by sending `X ↦ multiplicative Y` and `f ↦ f`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.html#AddCommGroupCat.toCommGroupCat\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">toCommGroupCat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#CommGroupCat\">CommGroupCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.lean#L72-L72","name":"AddCommGroupCat.toCommGroupCat_obj","line":72,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.html#AddCommGroupCat.toCommGroupCat_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.html#AddCommGroupCat.toCommGroupCat_obj\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">toCommGroupCat_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.html#AddCommGroupCat.toCommGroupCat\">AddCommGroupCat.toCommGroupCat</a>.obj</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#CommGroupCat.of\">CommGroupCat.of</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/TypeTags.html#Multiplicative\">Multiplicative</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.lean#L72-L72","name":"AddCommGroupCat.toCommGroupCat_map","line":72,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.html#AddCommGroupCat.toCommGroupCat_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.html#AddCommGroupCat.toCommGroupCat_map\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">toCommGroupCat_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.html#AddCommGroupCat.toCommGroupCat\">AddCommGroupCat.toCommGroupCat</a>.map</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">AddMonoidHom.toMultiplicative</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.lean#L61-L63","name":"AddGroupCat.toGroupCat","line":61,"kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.html#AddGroupCat.toGroupCat","doc":"The functor `AddGroup ⥤ Group` by sending `X ↦ multiplicative Y` and `f ↦ f`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.html#AddGroupCat.toGroupCat\"><span class=\"name\">AddGroupCat</span>.<span class=\"name\">toGroupCat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddGroupCat\">AddGroupCat</a> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#GroupCat\">GroupCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.lean#L60-L60","name":"AddGroupCat.toGroupCat_map","line":60,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.html#AddGroupCat.toGroupCat_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.html#AddGroupCat.toGroupCat_map\"><span class=\"name\">AddGroupCat</span>.<span class=\"name\">toGroupCat_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddGroupCat\">AddGroupCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddGroupCat\">AddGroupCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.html#AddGroupCat.toGroupCat\">AddGroupCat.toGroupCat</a>.map</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">AddMonoidHom.toMultiplicative</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.lean#L60-L60","name":"AddGroupCat.toGroupCat_obj","line":60,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.html#AddGroupCat.toGroupCat_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.html#AddGroupCat.toGroupCat_obj\"><span class=\"name\">AddGroupCat</span>.<span class=\"name\">toGroupCat_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddGroupCat\">AddGroupCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.html#AddGroupCat.toGroupCat\">AddGroupCat.toGroupCat</a>.obj</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#GroupCat.of\">GroupCat.of</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/TypeTags.html#Multiplicative\">Multiplicative</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.lean#L49-L51","name":"CommGroupCat.toAddCommGroupCat","line":49,"kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.html#CommGroupCat.toAddCommGroupCat","doc":"The functor `CommGroup ⥤ AddCommGroup` by sending `X ↦ additive X` and `f ↦ f`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.html#CommGroupCat.toAddCommGroupCat\"><span class=\"name\">CommGroupCat</span>.<span class=\"name\">toAddCommGroupCat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#CommGroupCat\">CommGroupCat</a> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat\">AddCommGroupCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.lean#L48-L48","name":"CommGroupCat.toAddCommGroupCat_obj","line":48,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.html#CommGroupCat.toAddCommGroupCat_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.html#CommGroupCat.toAddCommGroupCat_obj\"><span class=\"name\">CommGroupCat</span>.<span class=\"name\">toAddCommGroupCat_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#CommGroupCat\">CommGroupCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.html#CommGroupCat.toAddCommGroupCat\">CommGroupCat.toAddCommGroupCat</a>.obj</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat.of\">AddCommGroupCat.of</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/TypeTags.html#Additive\">Additive</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.lean#L48-L48","name":"CommGroupCat.toAddCommGroupCat_map","line":48,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.html#CommGroupCat.toAddCommGroupCat_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.html#CommGroupCat.toAddCommGroupCat_map\"><span class=\"name\">CommGroupCat</span>.<span class=\"name\">toAddCommGroupCat_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#CommGroupCat\">CommGroupCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#CommGroupCat\">CommGroupCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.html#CommGroupCat.toAddCommGroupCat\">CommGroupCat.toAddCommGroupCat</a>.map</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">MonoidHom.toAdditive</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.lean#L37-L39","name":"GroupCat.toAddGroupCat","line":37,"kind":"def","docLink":"./Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.html#GroupCat.toAddGroupCat","doc":"The functor `Group ⥤ AddGroup` by sending `X ↦ additive X` and `f ↦ f`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.html#GroupCat.toAddGroupCat\"><span class=\"name\">GroupCat</span>.<span class=\"name\">toAddGroupCat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Functor/Basic.html#CategoryTheory.Functor\">CategoryTheory.Functor</a> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#GroupCat\">GroupCat</a> <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddGroupCat\">AddGroupCat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.lean#L36-L36","name":"GroupCat.toAddGroupCat_map","line":36,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.html#GroupCat.toAddGroupCat_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.html#GroupCat.toAddGroupCat_map\"><span class=\"name\">GroupCat</span>.<span class=\"name\">toAddGroupCat_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#GroupCat\">GroupCat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#GroupCat\">GroupCat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">X</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">↑<span class=\"fn\">Y</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.html#GroupCat.toAddGroupCat\">GroupCat.toAddGroupCat</a>.map</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">MonoidHom.toAdditive</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.lean#L36-L36","name":"GroupCat.toAddGroupCat_obj","line":36,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.html#GroupCat.toAddGroupCat_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.html#GroupCat.toAddGroupCat_obj\"><span class=\"name\">GroupCat</span>.<span class=\"name\">toAddGroupCat_obj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#GroupCat\">GroupCat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/EquivalenceGroupAddGroup.html#GroupCat.toAddGroupCat\">GroupCat.toAddGroupCat</a>.obj</span> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddGroupCat.of\">AddGroupCat.of</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/TypeTags.html#Additive\">Additive</a> <span class=\"fn\">↑<span class=\"fn\">X</span></span></span>)</span></span></span></div></div>"}]}