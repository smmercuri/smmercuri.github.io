{"name":"Mathlib.Algebra.Category.GroupCat.Injective","instances":[{"typeNames":["CategoryTheory.Bundled.mk"],"name":"AddCommGroupCat.injective_of_divisible","className":"CategoryTheory.Injective"},{"typeNames":["AddCommGroupCat.of"],"name":"AddCommGroupCat.injective_ratCircle","className":"CategoryTheory.Injective"}],"imports":["Init","Mathlib.Algebra.Category.GroupCat.ZModuleEquivalence","Mathlib.Algebra.Module.Injective","Mathlib.Topology.Instances.AddCircle","Mathlib.Topology.Instances.Rat"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Category/GroupCat/Injective.lean#L73-L75","name":"AddCommGroupCat.injective_ratCircle","line":73,"kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Injective.html#AddCommGroupCat.injective_ratCircle","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Injective.html#AddCommGroupCat.injective_ratCircle\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">injective_ratCircle</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Injective.html#CategoryTheory.Injective\">CategoryTheory.Injective</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/GroupCat/Basic.html#AddCommGroupCat.of\">AddCommGroupCat.of</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#ULift\">ULift.{u, 0}</a>    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Instances/AddCircle.html#AddCircle\">AddCircle</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Category/GroupCat/Injective.lean#L67-L70","name":"AddCommGroupCat.injective_of_divisible","line":67,"kind":"instance","docLink":"./Mathlib/Algebra/Category/GroupCat/Injective.html#AddCommGroupCat.injective_of_divisible","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Injective.html#AddCommGroupCat.injective_of_divisible\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">injective_of_divisible</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Divisible.html#DivisibleBy\">DivisibleBy</a> <span class=\"fn\">A</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Injective.html#CategoryTheory.Injective\">CategoryTheory.Injective</a> <span class=\"fn\">{ <span class=\"fn\">α</span> := <span class=\"fn\">A</span>, <span class=\"fn\">str</span> := <span class=\"fn\">inferInstance</span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Category/GroupCat/Injective.lean#L61-L63","name":"AddCommGroupCat.injective_as_module_iff","line":61,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/GroupCat/Injective.html#AddCommGroupCat.injective_as_module_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Injective.html#AddCommGroupCat.injective_as_module_iff\"><span class=\"name\">AddCommGroupCat</span>.<span class=\"name\">injective_as_module_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Injective.html#CategoryTheory.Injective\">CategoryTheory.Injective</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Category/ModuleCat/Basic.html#ModuleCat.mk\">ModuleCat.mk</a> <span class=\"fn\">A</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Preadditive/Injective.html#CategoryTheory.Injective\">CategoryTheory.Injective</a> <span class=\"fn\">{ <span class=\"fn\">α</span> := <span class=\"fn\">A</span>, <span class=\"fn\">str</span> := <span class=\"fn\">inferInstance</span> }</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Algebra/Category/GroupCat/Injective.lean#L46-L57","name":"Module.Baer.of_divisible","line":46,"kind":"theorem","docLink":"./Mathlib/Algebra/Category/GroupCat/Injective.html#Module.Baer.of_divisible","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Category/GroupCat/Injective.html#Module.Baer.of_divisible\"><span class=\"name\">Module</span>.<span class=\"name\">Baer</span>.<span class=\"name\">of_divisible</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Divisible.html#DivisibleBy\">DivisibleBy</a> <span class=\"fn\">A</span> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Injective.html#Module.Baer\">Module.Baer</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> <span class=\"fn\">A</span></span></div></div>"}]}