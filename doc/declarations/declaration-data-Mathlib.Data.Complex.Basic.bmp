{"name":"Mathlib.Data.Complex.Basic","instances":[{"typeNames":["Eq"],"name":"Complex.instDecidableEqComplex","className":"Decidable"},{"typeNames":["Real","Complex"],"name":"Complex.instCoeRealComplex","className":"Coe"},{"typeNames":["Complex","Real","Complex.ofReal'"],"name":"Complex.canLift","className":"CanLift"},{"typeNames":["Complex"],"name":"Complex.instZeroComplex","className":"Zero"},{"typeNames":["Complex"],"name":"Complex.instInhabitedComplex","className":"Inhabited"},{"typeNames":["Complex"],"name":"Complex.instOneComplex","className":"One"},{"typeNames":["Complex"],"name":"Complex.instAddComplex","className":"Add"},{"typeNames":["Complex"],"name":"Complex.instNegComplex","className":"Neg"},{"typeNames":["Complex"],"name":"Complex.instSubComplex","className":"Sub"},{"typeNames":["Complex"],"name":"Complex.instMulComplex","className":"Mul"},{"typeNames":["Complex"],"name":"Complex.instNontrivialComplex","className":"Nontrivial"},{"typeNames":["Complex"],"name":"Complex.instSMulRealComplex","className":"SMul"},{"typeNames":["Complex"],"name":"Complex.addCommGroup","className":"AddCommGroup"},{"typeNames":["Complex"],"name":"Complex.addGroupWithOne","className":"AddGroupWithOne"},{"typeNames":["Complex"],"name":"Complex.commRing","className":"CommRing"},{"typeNames":["Complex"],"name":"Complex.instRingComplex","className":"Ring"},{"typeNames":["Complex"],"name":"Complex.instCommSemiringComplex","className":"CommSemiring"},{"typeNames":["Complex"],"name":"Complex.instSemiringComplex","className":"Semiring"},{"typeNames":["Complex"],"name":"Complex.instRatCastComplex","className":"RatCast"},{"typeNames":["Complex"],"name":"Complex.instStarRingComplexToNonUnitalNonAssocSemiringToNonUnitalNonAssocCommSemiringToNonUnitalNonAssocCommRingToNonUnitalCommRingCommRing","className":"StarRing"},{"typeNames":["Complex"],"name":"Complex.instInvComplex","className":"Inv"},{"typeNames":["Complex"],"name":"Complex.instField","className":"Field"},{"typeNames":["Complex"],"name":"Complex.charZero","className":"CharZero"}],"imports":["Init","Mathlib.Algebra.CharZero.Lemmas","Mathlib.Algebra.GroupPower.Ring","Mathlib.Algebra.GroupWithZero.Bitwise","Mathlib.Data.Real.Basic","Mathlib.Data.Set.Image"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L966-L968","name":"Complex.im_eq_sub_conj","line":966,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.im_eq_sub_conj","doc":"A complex number `z` minus its conjugate `conj z` is `2i` times its imaginary part. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.im_eq_sub_conj\"><span class=\"name\">Complex</span>.<span class=\"name\">im_eq_sub_conj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">z</span>.im</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#starRingEnd\">starRingEnd</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span> <span class=\"fn\">z</span></span></span>)</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">Complex.I</a></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L961-L962","name":"Complex.re_eq_add_conj","line":961,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.re_eq_add_conj","doc":"A complex number `z` plus its conjugate `conj z` is `2` times its real part. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.re_eq_add_conj\"><span class=\"name\">Complex</span>.<span class=\"name\">re_eq_add_conj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">z</span>.re</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#starRingEnd\">starRingEnd</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span> <span class=\"fn\">z</span></span></span>)</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L955-L957","name":"Complex.charZero","line":955,"kind":"instance","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.charZero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.charZero\"><span class=\"name\">Complex</span>.<span class=\"name\">charZero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CharZero/Defs.html#CharZero\">CharZero</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L949-L950","name":"Complex.div_ofNat_im","line":949,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.div_ofNat_im","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.div_ofNat_im\"><span class=\"name\">Complex</span>.<span class=\"name\">div_ofNat_im</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Cast/Defs.html#Nat.AtLeastTwo\">Nat.AtLeastTwo</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span></span>)</span>.im</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.im</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L945-L946","name":"Complex.div_ofNat_re","line":945,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.div_ofNat_re","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.div_ofNat_re\"><span class=\"name\">Complex</span>.<span class=\"name\">div_ofNat_re</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Cast/Defs.html#Nat.AtLeastTwo\">Nat.AtLeastTwo</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span></span>)</span>.re</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.re</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L942-L942","name":"Complex.div_rat_cast_im","line":942,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.div_rat_cast_im","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.div_rat_cast_im\"><span class=\"name\">Complex</span>.<span class=\"name\">div_rat_cast_im</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span>)</span>.im</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.im</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L941-L941","name":"Complex.div_rat_cast_re","line":941,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.div_rat_cast_re","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.div_rat_cast_re\"><span class=\"name\">Complex</span>.<span class=\"name\">div_rat_cast_re</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span>)</span>.re</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.re</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L940-L940","name":"Complex.div_int_cast_im","line":940,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.div_int_cast_im","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.div_int_cast_im\"><span class=\"name\">Complex</span>.<span class=\"name\">div_int_cast_im</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span>)</span>.im</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.im</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L939-L939","name":"Complex.div_int_cast_re","line":939,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.div_int_cast_re","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.div_int_cast_re\"><span class=\"name\">Complex</span>.<span class=\"name\">div_int_cast_re</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span>)</span>.re</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.re</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L938-L938","name":"Complex.div_nat_cast_im","line":938,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.div_nat_cast_im","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.div_nat_cast_im\"><span class=\"name\">Complex</span>.<span class=\"name\">div_nat_cast_im</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span>)</span>.im</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.im</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L937-L937","name":"Complex.div_nat_cast_re","line":937,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.div_nat_cast_re","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.div_nat_cast_re\"><span class=\"name\">Complex</span>.<span class=\"name\">div_nat_cast_re</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span>)</span>.re</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.re</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L936-L936","name":"Complex.div_ofReal_im","line":936,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.div_ofReal_im","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.div_ofReal_im\"><span class=\"name\">Complex</span>.<span class=\"name\">div_ofReal_im</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span>)</span>.im</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.im</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L935-L935","name":"Complex.div_ofReal_re","line":935,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.div_ofReal_re","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.div_ofReal_re\"><span class=\"name\">Complex</span>.<span class=\"name\">div_ofReal_re</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span>)</span>.re</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.re</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L931-L933","name":"Complex.div_ofNat","line":931,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.div_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.div_ofNat\"><span class=\"name\">Complex</span>.<span class=\"name\">div_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Cast/Defs.html#Nat.AtLeastTwo\">Nat.AtLeastTwo</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">re</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.re</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span></span>, <span class=\"fn\">im</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.im</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span></span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L928-L929","name":"Complex.div_rat_cast","line":928,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.div_rat_cast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.div_rat_cast\"><span class=\"name\">Complex</span>.<span class=\"name\">div_rat_cast</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">re</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.re</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span>, <span class=\"fn\">im</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.im</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L925-L926","name":"Complex.div_int_cast","line":925,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.div_int_cast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.div_int_cast\"><span class=\"name\">Complex</span>.<span class=\"name\">div_int_cast</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">re</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.re</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span>, <span class=\"fn\">im</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.im</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L922-L923","name":"Complex.div_nat_cast","line":922,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.div_nat_cast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.div_nat_cast\"><span class=\"name\">Complex</span>.<span class=\"name\">div_nat_cast</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">re</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.re</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span>, <span class=\"fn\">im</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.im</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L919-L920","name":"Complex.div_ofReal","line":919,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.div_ofReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.div_ofReal\"><span class=\"name\">Complex</span>.<span class=\"name\">div_ofReal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">re</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.re</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">x</span></span>, <span class=\"fn\">im</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.im</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">x</span></span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L915-L916","name":"Complex.normSq_div","line":915,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.normSq_div","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.normSq_div\"><span class=\"name\">Complex</span>.<span class=\"name\">normSq_div</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Complex.normSq</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">w</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Complex.normSq</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">Complex.normSq</span> <span class=\"fn\">w</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L908-L909","name":"Complex.normSq_inv","line":908,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.normSq_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.normSq_inv\"><span class=\"name\">Complex</span>.<span class=\"name\">normSq_inv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Complex.normSq</span> <span class=\"fn\"><span class=\"fn\">z</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Complex.normSq</span> <span class=\"fn\">z</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L900-L901","name":"Complex.inv_I","line":900,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.inv_I","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.inv_I\"><span class=\"name\">Complex</span>.<span class=\"name\">inv_I</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">Complex.I</a><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">Complex.I</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L894-L895","name":"Complex.div_I","line":894,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.div_I","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.div_I\"><span class=\"name\">Complex</span>.<span class=\"name\">div_I</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">Complex.I</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">Complex.I</a></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L889-L890","name":"Complex.ofReal_zpow","line":889,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_zpow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_zpow\"><span class=\"name\">Complex</span>.<span class=\"name\">ofReal_zpow</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L884-L885","name":"Complex.ofReal_div","line":884,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_div","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_div\"><span class=\"name\">Complex</span>.<span class=\"name\">ofReal_div</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L879-L880","name":"Complex.conj_inv","line":879,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.conj_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.conj_inv\"><span class=\"name\">Complex</span>.<span class=\"name\">conj_inv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#starRingEnd\">starRingEnd</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span> <span class=\"fn\"><span class=\"fn\">x</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#starRingEnd\">starRingEnd</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span> <span class=\"fn\">x</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L875-L876","name":"Complex.div_im","line":875,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.div_im","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.div_im\"><span class=\"name\">Complex</span>.<span class=\"name\">div_im</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">w</span></span>)</span>.im</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.im</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">w</span>.re</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">Complex.normSq</span> <span class=\"fn\">w</span></span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.re</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">w</span>.im</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">Complex.normSq</span> <span class=\"fn\">w</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L871-L872","name":"Complex.div_re","line":871,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.div_re","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.div_re\"><span class=\"name\">Complex</span>.<span class=\"name\">div_re</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">w</span></span>)</span>.re</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.re</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">w</span>.re</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">Complex.normSq</span> <span class=\"fn\">w</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.im</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">w</span>.im</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">Complex.normSq</span> <span class=\"fn\">w</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L865-L865","name":"Complex.I_zpow_bit1","line":865,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.I_zpow_bit1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.I_zpow_bit1\"><span class=\"name\">Complex</span>.<span class=\"name\">I_zpow_bit1</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">Complex.I</a> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#bit1\">bit1</a> <span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">-<span class=\"fn\">1</span></span>)</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">Complex.I</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L860-L860","name":"Complex.I_zpow_bit0","line":860,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.I_zpow_bit0","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.I_zpow_bit0\"><span class=\"name\">Complex</span>.<span class=\"name\">I_zpow_bit0</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">Complex.I</a> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#bit0\">bit0</a> <span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">-<span class=\"fn\">1</span></span>)</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L848-L854","name":"Complex.instField","line":848,"kind":"instance","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.instField","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.instField\"><span class=\"name\">Complex</span>.<span class=\"name\">instField</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L844-L844","name":"Complex.ofReal_zsmul","line":844,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_zsmul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_zsmul\"><span class=\"name\">Complex</span>.<span class=\"name\">ofReal_zsmul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">r</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L843-L843","name":"Complex.ofReal_nsmul","line":843,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_nsmul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_nsmul\"><span class=\"name\">Complex</span>.<span class=\"name\">ofReal_nsmul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">r</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L840-L840","name":"Complex.rat_cast_im","line":840,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.rat_cast_im","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.rat_cast_im\"><span class=\"name\">Complex</span>.<span class=\"name\">rat_cast_im</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(q : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">q</span></span>)</span>.im</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L836-L836","name":"Complex.rat_cast_re","line":836,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.rat_cast_re","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.rat_cast_re\"><span class=\"name\">Complex</span>.<span class=\"name\">rat_cast_re</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(q : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">q</span></span>)</span>.re</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">q</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L832-L832","name":"Complex.ofReal_rat_cast","line":832,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_rat_cast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_rat_cast\"><span class=\"name\">Complex</span>.<span class=\"name\">ofReal_rat_cast</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(q : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">q</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">q</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L828-L828","name":"Complex.int_cast_im","line":828,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.int_cast_im","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.int_cast_im\"><span class=\"name\">Complex</span>.<span class=\"name\">int_cast_im</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">n</span></span>)</span>.im</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L824-L824","name":"Complex.int_cast_re","line":824,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.int_cast_re","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.int_cast_re\"><span class=\"name\">Complex</span>.<span class=\"name\">int_cast_re</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">n</span></span>)</span>.re</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L820-L820","name":"Complex.ofReal_int_cast","line":820,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_int_cast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_int_cast\"><span class=\"name\">Complex</span>.<span class=\"name\">ofReal_int_cast</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L816-L816","name":"Complex.nat_cast_im","line":816,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.nat_cast_im","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.nat_cast_im\"><span class=\"name\">Complex</span>.<span class=\"name\">nat_cast_im</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">n</span></span>)</span>.im</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L812-L812","name":"Complex.nat_cast_re","line":812,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.nat_cast_re","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.nat_cast_re\"><span class=\"name\">Complex</span>.<span class=\"name\">nat_cast_re</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">n</span></span>)</span>.re</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L808-L808","name":"Complex.ofReal_nat_cast","line":808,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_nat_cast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_nat_cast\"><span class=\"name\">Complex</span>.<span class=\"name\">ofReal_nat_cast</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L800-L802","name":"Complex.mul_inv_cancel","line":800,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.mul_inv_cancel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.mul_inv_cancel\"><span class=\"name\">Complex</span>.<span class=\"name\">mul_inv_cancel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">z</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L796-L797","name":"Complex.inv_zero","line":796,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.inv_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.inv_zero\"><span class=\"name\">Complex</span>.<span class=\"name\">inv_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L792-L793","name":"Complex.ofReal_inv","line":792,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_inv\"><span class=\"name\">Complex</span>.<span class=\"name\">ofReal_inv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">r</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">r</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L788-L788","name":"Complex.inv_im","line":788,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.inv_im","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.inv_im\"><span class=\"name\">Complex</span>.<span class=\"name\">inv_im</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span>.im</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">z</span>.im</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">Complex.normSq</span> <span class=\"fn\">z</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L784-L784","name":"Complex.inv_re","line":784,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.inv_re","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.inv_re\"><span class=\"name\">Complex</span>.<span class=\"name\">inv_re</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span>.re</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.re</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">Complex.normSq</span> <span class=\"fn\">z</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L779-L780","name":"Complex.inv_def","line":779,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.inv_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.inv_def\"><span class=\"name\">Complex</span>.<span class=\"name\">inv_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#starRingEnd\">starRingEnd</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Complex.normSq</span> <span class=\"fn\">z</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L776-L777","name":"Complex.instInvComplex","line":776,"kind":"instance","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.instInvComplex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.instInvComplex\"><span class=\"name\">Complex</span>.<span class=\"name\">instInvComplex</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv\">Inv</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L767-L770","name":"Complex.normSq_sub","line":767,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.normSq_sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.normSq_sub\"><span class=\"name\">Complex</span>.<span class=\"name\">normSq_sub</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Complex.normSq</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">w</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Complex.normSq</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">Complex.normSq</span> <span class=\"fn\">w</span></span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#starRingEnd\">starRingEnd</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span> <span class=\"fn\">w</span></span></span>)</span>.re</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L763-L764","name":"Complex.sub_conj","line":763,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.sub_conj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.sub_conj\"><span class=\"name\">Complex</span>.<span class=\"name\">sub_conj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#starRingEnd\">starRingEnd</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span> <span class=\"fn\">z</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">z</span>.im</span></span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">Complex.I</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L759-L760","name":"Complex.ofReal_pow","line":759,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_pow\"><span class=\"name\">Complex</span>.<span class=\"name\">ofReal_pow</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L754-L755","name":"Complex.ofReal_sub","line":754,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_sub\"><span class=\"name\">Complex</span>.<span class=\"name\">ofReal_sub</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L749-L750","name":"Complex.sub_im","line":749,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.sub_im","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.sub_im\"><span class=\"name\">Complex</span>.<span class=\"name\">sub_im</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">w</span></span>)</span>.im</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.im</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">w</span>.im</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L744-L745","name":"Complex.sub_re","line":744,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.sub_re","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.sub_re\"><span class=\"name\">Complex</span>.<span class=\"name\">sub_re</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">w</span></span>)</span>.re</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.re</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">w</span>.re</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L741-L741","name":"Complex.I_pow_four","line":741,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.I_pow_four","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.I_pow_four\"><span class=\"name\">Complex</span>.<span class=\"name\">I_pow_four</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">Complex.I</a> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">4</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L736-L736","name":"Complex.I_sq","line":736,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.I_sq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.I_sq\"><span class=\"name\">Complex</span>.<span class=\"name\">I_sq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">Complex.I</a> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L731-L732","name":"Complex.ofReal_eq_coe","line":731,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_eq_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_eq_coe\"><span class=\"name\">Complex</span>.<span class=\"name\">ofReal_eq_coe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Complex.ofReal</span> <span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L722-L727","name":"Complex.ofReal","line":722,"kind":"def","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.ofReal","doc":"The coercion `ℝ → ℂ` as a `RingHom`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.ofReal\"><span class=\"name\">Complex</span>.<span class=\"name\">ofReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L717-L718","name":"Complex.add_conj","line":717,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.add_conj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.add_conj\"><span class=\"name\">Complex</span>.<span class=\"name\">add_conj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#starRingEnd\">starRingEnd</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span> <span class=\"fn\">z</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">z</span>.re</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L713-L714","name":"Complex.mul_conj","line":713,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.mul_conj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.mul_conj\"><span class=\"name\">Complex</span>.<span class=\"name\">mul_conj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#starRingEnd\">starRingEnd</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span> <span class=\"fn\">z</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Complex.normSq</span> <span class=\"fn\">z</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L709-L710","name":"Complex.im_sq_le_normSq","line":709,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.im_sq_le_normSq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.im_sq_le_normSq\"><span class=\"name\">Complex</span>.<span class=\"name\">im_sq_le_normSq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.im</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">z</span>.im</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">Complex.normSq</span> <span class=\"fn\">z</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L705-L706","name":"Complex.re_sq_le_normSq","line":705,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.re_sq_le_normSq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.re_sq_le_normSq\"><span class=\"name\">Complex</span>.<span class=\"name\">re_sq_le_normSq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.re</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">z</span>.re</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">Complex.normSq</span> <span class=\"fn\">z</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L701-L702","name":"Complex.normSq_add","line":701,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.normSq_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.normSq_add\"><span class=\"name\">Complex</span>.<span class=\"name\">normSq_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Complex.normSq</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">w</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Complex.normSq</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">Complex.normSq</span> <span class=\"fn\">w</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#starRingEnd\">starRingEnd</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span> <span class=\"fn\">w</span></span></span>)</span>.re</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L697-L698","name":"Complex.normSq_mul","line":697,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.normSq_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.normSq_mul\"><span class=\"name\">Complex</span>.<span class=\"name\">normSq_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Complex.normSq</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">w</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Complex.normSq</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">Complex.normSq</span> <span class=\"fn\">w</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L694-L694","name":"Complex.normSq_conj","line":694,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.normSq_conj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.normSq_conj\"><span class=\"name\">Complex</span>.<span class=\"name\">normSq_conj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Complex.normSq</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#starRingEnd\">starRingEnd</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span> <span class=\"fn\">z</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Complex.normSq</span> <span class=\"fn\">z</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L690-L690","name":"Complex.normSq_neg","line":690,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.normSq_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.normSq_neg\"><span class=\"name\">Complex</span>.<span class=\"name\">normSq_neg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Complex.normSq</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">z</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Complex.normSq</span> <span class=\"fn\">z</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L685-L686","name":"Complex.normSq_pos","line":685,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.normSq_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.normSq_pos\"><span class=\"name\">Complex</span>.<span class=\"name\">normSq_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">Complex.normSq</span> <span class=\"fn\">z</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L677-L681","name":"Complex.normSq_eq_zero","line":677,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.normSq_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.normSq_eq_zero\"><span class=\"name\">Complex</span>.<span class=\"name\">normSq_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Complex.normSq</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L673-L674","name":"Complex.normSq_nonneg","line":673,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.normSq_nonneg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.normSq_nonneg\"><span class=\"name\">Complex</span>.<span class=\"name\">normSq_nonneg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">Complex.normSq</span> <span class=\"fn\">z</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L669-L669","name":"Complex.normSq_I","line":669,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.normSq_I","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.normSq_I\"><span class=\"name\">Complex</span>.<span class=\"name\">normSq_I</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Complex.normSq</span> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">Complex.I</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L664-L665","name":"Complex.normSq_one","line":664,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.normSq_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.normSq_one\"><span class=\"name\">Complex</span>.<span class=\"name\">normSq_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Complex.normSq</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L657-L658","name":"Complex.normSq_zero","line":657,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.normSq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.normSq_zero\"><span class=\"name\">Complex</span>.<span class=\"name\">normSq_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Complex.normSq</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L650-L651","name":"Complex.normSq_eq_conj_mul_self","line":650,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.normSq_eq_conj_mul_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.normSq_eq_conj_mul_self\"><span class=\"name\">Complex</span>.<span class=\"name\">normSq_eq_conj_mul_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Complex.normSq</span> <span class=\"fn\">z</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#starRingEnd\">starRingEnd</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">z</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L645-L646","name":"Complex.normSq_add_mul_I","line":645,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.normSq_add_mul_I","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.normSq_add_mul_I\"><span class=\"name\">Complex</span>.<span class=\"name\">normSq_add_mul_I</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Complex.normSq</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">Complex.I</a></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">2</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L641-L642","name":"Complex.normSq_mk","line":641,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.normSq_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.normSq_mk\"><span class=\"name\">Complex</span>.<span class=\"name\">normSq_mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Complex.normSq</span> <span class=\"fn\">{ <span class=\"fn\">re</span> := <span class=\"fn\">x</span>, <span class=\"fn\">im</span> := <span class=\"fn\">y</span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L636-L638","name":"Complex.normSq_ofNat","line":636,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.normSq_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.normSq_ofNat\"><span class=\"name\">Complex</span>.<span class=\"name\">normSq_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Cast/Defs.html#Nat.AtLeastTwo\">Nat.AtLeastTwo</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Complex.normSq</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L632-L632","name":"Complex.normSq_rat_cast","line":632,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.normSq_rat_cast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.normSq_rat_cast\"><span class=\"name\">Complex</span>.<span class=\"name\">normSq_rat_cast</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(q : <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Complex.normSq</span> <span class=\"fn\">↑<span class=\"fn\">q</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">q</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">q</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L629-L629","name":"Complex.normSq_int_cast","line":629,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.normSq_int_cast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.normSq_int_cast\"><span class=\"name\">Complex</span>.<span class=\"name\">normSq_int_cast</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Complex.normSq</span> <span class=\"fn\">↑<span class=\"fn\">z</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">z</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L626-L626","name":"Complex.normSq_nat_cast","line":626,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.normSq_nat_cast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.normSq_nat_cast\"><span class=\"name\">Complex</span>.<span class=\"name\">normSq_nat_cast</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Complex.normSq</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L621-L622","name":"Complex.normSq_ofReal","line":621,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.normSq_ofReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.normSq_ofReal\"><span class=\"name\">Complex</span>.<span class=\"name\">normSq_ofReal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Complex.normSq</span> <span class=\"fn\">↑<span class=\"fn\">r</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">r</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L616-L617","name":"Complex.normSq_apply","line":616,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.normSq_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.normSq_apply\"><span class=\"name\">Complex</span>.<span class=\"name\">normSq_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Complex.normSq</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.re</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">z</span>.re</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.im</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">z</span>.im</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L607-L613","name":"Complex.normSq","line":607,"kind":"def","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.normSq","doc":"The norm squared function. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.normSq\"><span class=\"name\">Complex</span>.<span class=\"name\">normSq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <a href=\"./Mathlib/Algebra/GroupWithZero/Hom.html#MonoidWithZeroHom\">→*₀</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L597-L598","name":"Complex.star_def","line":597,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.star_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.star_def\"><span class=\"name\">Complex</span>.<span class=\"name\">star_def</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">star</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#starRingEnd\">starRingEnd</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L588-L590","name":"Complex.conj_eq_iff_im","line":588,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.conj_eq_iff_im","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.conj_eq_iff_im\"><span class=\"name\">Complex</span>.<span class=\"name\">conj_eq_iff_im</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#starRingEnd\">starRingEnd</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">z</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.im</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L584-L585","name":"Complex.conj_eq_iff_re","line":584,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.conj_eq_iff_re","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.conj_eq_iff_re\"><span class=\"name\">Complex</span>.<span class=\"name\">conj_eq_iff_re</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#starRingEnd\">starRingEnd</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">z</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">z</span>.re</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">z</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L579-L581","name":"Complex.conj_eq_iff_real","line":579,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.conj_eq_iff_real","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.conj_eq_iff_real\"><span class=\"name\">Complex</span>.<span class=\"name\">conj_eq_iff_real</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#starRingEnd\">starRingEnd</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">z</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L574-L575","name":"Complex.conj_neg_I","line":574,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.conj_neg_I","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.conj_neg_I\"><span class=\"name\">Complex</span>.<span class=\"name\">conj_neg_I</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#starRingEnd\">starRingEnd</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">Complex.I</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">Complex.I</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L566-L567","name":"Complex.conj_bit1","line":566,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.conj_bit1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.conj_bit1\"><span class=\"name\">Complex</span>.<span class=\"name\">conj_bit1</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#starRingEnd\">starRingEnd</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#bit1\">bit1</a> <span class=\"fn\">z</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#bit1\">bit1</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#starRingEnd\">starRingEnd</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span> <span class=\"fn\">z</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L562-L563","name":"Complex.conj_bit0","line":562,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.conj_bit0","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.conj_bit0\"><span class=\"name\">Complex</span>.<span class=\"name\">conj_bit0</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#starRingEnd\">starRingEnd</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#bit0\">bit0</a> <span class=\"fn\">z</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#bit0\">bit0</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#starRingEnd\">starRingEnd</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span> <span class=\"fn\">z</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L554-L555","name":"Complex.conj_I","line":554,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.conj_I","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.conj_I\"><span class=\"name\">Complex</span>.<span class=\"name\">conj_I</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#starRingEnd\">starRingEnd</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">Complex.I</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">Complex.I</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L549-L550","name":"Complex.conj_ofReal","line":549,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.conj_ofReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.conj_ofReal\"><span class=\"name\">Complex</span>.<span class=\"name\">conj_ofReal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#starRingEnd\">starRingEnd</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span> <span class=\"fn\">↑<span class=\"fn\">r</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L545-L546","name":"Complex.conj_im","line":545,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.conj_im","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.conj_im\"><span class=\"name\">Complex</span>.<span class=\"name\">conj_im</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#starRingEnd\">starRingEnd</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span> <span class=\"fn\">z</span></span>)</span>.im</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">z</span>.im</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L540-L541","name":"Complex.conj_re","line":540,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.conj_re","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.conj_re\"><span class=\"name\">Complex</span>.<span class=\"name\">conj_re</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#starRingEnd\">starRingEnd</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span>)</span> <span class=\"fn\">z</span></span>)</span>.re</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">z</span>.re</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L533-L537","name":"Complex.instStarRingComplexToNonUnitalNonAssocSemiringToNonUnitalNonAssocCommSemiringToNonUnitalNonAssocCommRingToNonUnitalCommRingCommRing","line":533,"kind":"instance","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.instStarRingComplexToNonUnitalNonAssocSemiringToNonUnitalNonAssocCommSemiringToNonUnitalNonAssocCommRingToNonUnitalCommRingCommRing","doc":"This defines the complex conjugate as the `star` operation of the `StarRing ℂ`. It\nis recommended to use the ring endomorphism version `starRingEnd`, available under the\nnotation `conj` in the locale `ComplexConjugate`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.instStarRingComplexToNonUnitalNonAssocSemiringToNonUnitalNonAssocCommSemiringToNonUnitalNonAssocCommRingToNonUnitalCommRingCommRing\"><span class=\"name\">Complex</span>.<span class=\"name\">instStarRingComplexToNonUnitalNonAssocSemiringToNonUnitalNonAssocCommSemiringToNonUnitalNonAssocCommRingToNonUnitalCommRingCommRing</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Star/Basic.html#StarRing\">StarRing</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L522-L523","name":"Complex.instRatCastComplex","line":522,"kind":"instance","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.instRatCastComplex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.instRatCastComplex\"><span class=\"name\">Complex</span>.<span class=\"name\">instRatCastComplex</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Classes/RatCast.html#RatCast\">RatCast</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L519-L520","name":"Complex.im_ofNat","line":519,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.im_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.im_ofNat\"><span class=\"name\">Complex</span>.<span class=\"name\">im_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Cast/Defs.html#Nat.AtLeastTwo\">Nat.AtLeastTwo</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span>)</span>.im</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L514-L515","name":"Complex.re_ofNat","line":514,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.re_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.re_ofNat\"><span class=\"name\">Complex</span>.<span class=\"name\">re_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Cast/Defs.html#Nat.AtLeastTwo\">Nat.AtLeastTwo</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span>)</span>.re</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L508-L510","name":"Complex.ofReal_ofNat","line":508,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_ofNat\"><span class=\"name\">Complex</span>.<span class=\"name\">ofReal_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Cast/Defs.html#Nat.AtLeastTwo\">Nat.AtLeastTwo</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L501-L501","name":"Complex.I_pow_bit1","line":501,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.I_pow_bit1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.I_pow_bit1\"><span class=\"name\">Complex</span>.<span class=\"name\">I_pow_bit1</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">Complex.I</a> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#bit1\">bit1</a> <span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">-<span class=\"fn\">1</span></span>)</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">Complex.I</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L496-L496","name":"Complex.I_pow_bit0","line":496,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.I_pow_bit0","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.I_pow_bit0\"><span class=\"name\">Complex</span>.<span class=\"name\">I_pow_bit0</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">Complex.I</a> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#bit0\">bit0</a> <span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">-<span class=\"fn\">1</span></span>)</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L489-L490","name":"Complex.coe_imAddGroupHom","line":489,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.coe_imAddGroupHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.coe_imAddGroupHom\"><span class=\"name\">Complex</span>.<span class=\"name\">coe_imAddGroupHom</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.imAddGroupHom\">Complex.imAddGroupHom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex.im\">Complex.im</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L482-L485","name":"Complex.imAddGroupHom","line":482,"kind":"def","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.imAddGroupHom","doc":"The \"imaginary part\" map, considered as an additive group homomorphism. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.imAddGroupHom\"><span class=\"name\">Complex</span>.<span class=\"name\">imAddGroupHom</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L477-L478","name":"Complex.coe_reAddGroupHom","line":477,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.coe_reAddGroupHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.coe_reAddGroupHom\"><span class=\"name\">Complex</span>.<span class=\"name\">coe_reAddGroupHom</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<a href=\"./Mathlib/Data/Complex/Basic.html#Complex.reAddGroupHom\">Complex.reAddGroupHom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">Complex.re</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L470-L473","name":"Complex.reAddGroupHom","line":470,"kind":"def","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.reAddGroupHom","doc":"The \"real part\" map, considered as an additive group homomorphism. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.reAddGroupHom\"><span class=\"name\">Complex</span>.<span class=\"name\">reAddGroupHom</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L466-L467","name":"Complex.instSemiringComplex","line":466,"kind":"instance","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.instSemiringComplex","doc":"This shortcut instance ensures we do not find `Semiring` via the noncomputable\n`Complex.field` instance. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.instSemiringComplex\"><span class=\"name\">Complex</span>.<span class=\"name\">instSemiringComplex</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L460-L461","name":"Complex.instCommSemiringComplex","line":460,"kind":"instance","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.instCommSemiringComplex","doc":"This shortcut instance ensures we do not find `CommSemiring` via the noncomputable\n`Complex.field` instance. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.instCommSemiringComplex\"><span class=\"name\">Complex</span>.<span class=\"name\">instCommSemiringComplex</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L456-L456","name":"Complex.instRingComplex","line":456,"kind":"instance","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.instRingComplex","doc":"This shortcut instance ensures we do not find `Ring` via the noncomputable `Complex.field`\ninstance. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.instRingComplex\"><span class=\"name\">Complex</span>.<span class=\"name\">instRingComplex</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Ring\">Ring</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L438-L452","name":"Complex.commRing","line":438,"kind":"instance","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.commRing","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.commRing\"><span class=\"name\">Complex</span>.<span class=\"name\">commRing</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L419-L435","name":"Complex.addGroupWithOne","line":419,"kind":"instance","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.addGroupWithOne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.addGroupWithOne\"><span class=\"name\">Complex</span>.<span class=\"name\">addGroupWithOne</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Int/Cast/Defs.html#AddGroupWithOne\">AddGroupWithOne</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L395-L416","name":"Complex.addCommGroup","line":395,"kind":"instance","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.addCommGroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.addCommGroup\"><span class=\"name\">Complex</span>.<span class=\"name\">addCommGroup</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L388-L389","name":"Complex.real_smul","line":388,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.real_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.real_smul\"><span class=\"name\">Complex</span>.<span class=\"name\">real_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">z</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L384-L384","name":"Complex.smul_im","line":384,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.smul_im","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.smul_im\"><span class=\"name\">Complex</span>.<span class=\"name\">smul_im</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">z</span></span>)</span>.im</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">z</span>.im</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L381-L381","name":"Complex.smul_re","line":381,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.smul_re","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.smul_re\"><span class=\"name\">Complex</span>.<span class=\"name\">smul_re</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">z</span></span>)</span>.re</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">z</span>.re</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L378-L379","name":"Complex.instSMulRealComplex","line":378,"kind":"instance","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.instSMulRealComplex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.instSMulRealComplex\"><span class=\"name\">Complex</span>.<span class=\"name\">instSMulRealComplex</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L368-L369","name":"Complex.instNontrivialComplex","line":368,"kind":"instance","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.instNontrivialComplex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.instNontrivialComplex\"><span class=\"name\">Complex</span>.<span class=\"name\">instNontrivialComplex</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L358-L359","name":"Complex.equivRealProd_symm_apply","line":358,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.equivRealProd_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.equivRealProd_symm_apply\"><span class=\"name\">Complex</span>.<span class=\"name\">equivRealProd_symm_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex.equivRealProd\">Complex.equivRealProd</a>.symm</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">p</span>.1</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">p</span>.2</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">Complex.I</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L353-L353","name":"Complex.I_mul_im","line":353,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.I_mul_im","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.I_mul_im\"><span class=\"name\">Complex</span>.<span class=\"name\">I_mul_im</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">Complex.I</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">z</span></span>)</span>.im</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">z</span>.re</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L349-L349","name":"Complex.I_mul_re","line":349,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.I_mul_re","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.I_mul_re\"><span class=\"name\">Complex</span>.<span class=\"name\">I_mul_re</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">Complex.I</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">z</span></span>)</span>.re</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">z</span>.im</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L345-L345","name":"Complex.mul_I_im","line":345,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.mul_I_im","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.mul_I_im\"><span class=\"name\">Complex</span>.<span class=\"name\">mul_I_im</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">Complex.I</a></span>)</span>.im</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">z</span>.re</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L341-L341","name":"Complex.mul_I_re","line":341,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.mul_I_re","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.mul_I_re\"><span class=\"name\">Complex</span>.<span class=\"name\">mul_I_re</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">Complex.I</a></span>)</span>.re</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">z</span>.im</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L337-L338","name":"Complex.re_add_im","line":337,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.re_add_im","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.re_add_im\"><span class=\"name\">Complex</span>.<span class=\"name\">re_add_im</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">z</span>.re</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">z</span>.im</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">Complex.I</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">z</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L331-L332","name":"Complex.mk_eq_add_mul_I","line":331,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.mk_eq_add_mul_I","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.mk_eq_add_mul_I\"><span class=\"name\">Complex</span>.<span class=\"name\">mk_eq_add_mul_I</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">re</span> := <span class=\"fn\">a</span>, <span class=\"fn\">im</span> := <span class=\"fn\">b</span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">Complex.I</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L327-L327","name":"Complex.I_ne_zero","line":327,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.I_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.I_ne_zero\"><span class=\"name\">Complex</span>.<span class=\"name\">I_ne_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">Complex.I</a> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L322-L323","name":"Complex.I_mul","line":322,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.I_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.I_mul\"><span class=\"name\">Complex</span>.<span class=\"name\">I_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">Complex.I</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">re</span> := <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">z</span>.im</span></span>, <span class=\"fn\">im</span> := <span class=\"fn\"><span class=\"fn\">z</span>.re</span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L317-L318","name":"Complex.I_mul_I","line":317,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.I_mul_I","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.I_mul_I\"><span class=\"name\">Complex</span>.<span class=\"name\">I_mul_I</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">Complex.I</a> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">Complex.I</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L311-L312","name":"Complex.I_im","line":311,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.I_im","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.I_im\"><span class=\"name\">Complex</span>.<span class=\"name\">I_im</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">Complex.I</a>.im</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L305-L306","name":"Complex.I_re","line":305,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.I_re","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.I_re\"><span class=\"name\">Complex</span>.<span class=\"name\">I_re</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\">Complex.I</a>.re</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L299-L300","name":"Complex.I","line":299,"kind":"def","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.I","doc":"The imaginary unit. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.I\"><span class=\"name\">Complex</span>.<span class=\"name\">I</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L291-L292","name":"Complex.ofReal_mul'","line":291,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_mul'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_mul'\"><span class=\"name\">Complex</span>.<span class=\"name\">ofReal_mul'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">re</span> := <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">z</span>.re</span></span>, <span class=\"fn\">im</span> := <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">z</span>.im</span></span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L289-L289","name":"Complex.im_mul_ofReal","line":289,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.im_mul_ofReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.im_mul_ofReal\"><span class=\"name\">Complex</span>.<span class=\"name\">im_mul_ofReal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span></span>)</span>.im</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.im</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">r</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L288-L288","name":"Complex.re_mul_ofReal","line":288,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.re_mul_ofReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.re_mul_ofReal\"><span class=\"name\">Complex</span>.<span class=\"name\">re_mul_ofReal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span></span>)</span>.re</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.re</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">r</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L285-L285","name":"Complex.im_ofReal_mul","line":285,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.im_ofReal_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.im_ofReal_mul\"><span class=\"name\">Complex</span>.<span class=\"name\">im_ofReal_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">z</span></span>)</span>.im</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">z</span>.im</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L282-L282","name":"Complex.re_ofReal_mul","line":282,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.re_ofReal_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.re_ofReal_mul\"><span class=\"name\">Complex</span>.<span class=\"name\">re_ofReal_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">z</span></span>)</span>.re</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">z</span>.re</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L278-L279","name":"Complex.ofReal_mul","line":278,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_mul\"><span class=\"name\">Complex</span>.<span class=\"name\">ofReal_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L273-L274","name":"Complex.mul_im","line":273,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.mul_im","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.mul_im\"><span class=\"name\">Complex</span>.<span class=\"name\">mul_im</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">w</span></span>)</span>.im</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.re</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">w</span>.im</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.im</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">w</span>.re</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L268-L269","name":"Complex.mul_re","line":268,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.mul_re","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.mul_re\"><span class=\"name\">Complex</span>.<span class=\"name\">mul_re</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">w</span></span>)</span>.re</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.re</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">w</span>.re</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.im</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">w</span>.im</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L264-L265","name":"Complex.instMulComplex","line":264,"kind":"instance","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.instMulComplex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.instMulComplex\"><span class=\"name\">Complex</span>.<span class=\"name\">instMulComplex</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Mul\">Mul</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L261-L262","name":"Complex.instSubComplex","line":261,"kind":"instance","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.instSubComplex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.instSubComplex\"><span class=\"name\">Complex</span>.<span class=\"name\">instSubComplex</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L257-L258","name":"Complex.ofReal_neg","line":257,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_neg\"><span class=\"name\">Complex</span>.<span class=\"name\">ofReal_neg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">r</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑<span class=\"fn\">r</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L252-L253","name":"Complex.neg_im","line":252,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.neg_im","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.neg_im\"><span class=\"name\">Complex</span>.<span class=\"name\">neg_im</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">z</span></span>)</span>.im</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">z</span>.im</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L247-L248","name":"Complex.neg_re","line":247,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.neg_re","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.neg_re\"><span class=\"name\">Complex</span>.<span class=\"name\">neg_re</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">z</span></span>)</span>.re</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><span class=\"fn\">z</span>.re</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L243-L244","name":"Complex.instNegComplex","line":243,"kind":"instance","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.instNegComplex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.instNegComplex\"><span class=\"name\">Complex</span>.<span class=\"name\">instNegComplex</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg\">Neg</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L237-L238","name":"Complex.ofReal_bit1","line":237,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_bit1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_bit1\"><span class=\"name\">Complex</span>.<span class=\"name\">ofReal_bit1</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#bit1\">bit1</a> <span class=\"fn\">r</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#bit1\">bit1</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L232-L233","name":"Complex.ofReal_bit0","line":232,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_bit0","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_bit0\"><span class=\"name\">Complex</span>.<span class=\"name\">ofReal_bit0</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#bit0\">bit0</a> <span class=\"fn\">r</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#bit0\">bit0</a> <span class=\"fn\">↑<span class=\"fn\">r</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L227-L228","name":"Complex.ofReal_add","line":227,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_add\"><span class=\"name\">Complex</span>.<span class=\"name\">ofReal_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L222-L223","name":"Complex.bit1_im","line":222,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.bit1_im","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.bit1_im\"><span class=\"name\">Complex</span>.<span class=\"name\">bit1_im</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#bit1\">bit1</a> <span class=\"fn\">z</span></span>)</span>.im</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#bit0\">bit0</a> <span class=\"fn\"><span class=\"fn\">z</span>.im</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L217-L218","name":"Complex.bit0_im","line":217,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.bit0_im","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.bit0_im\"><span class=\"name\">Complex</span>.<span class=\"name\">bit0_im</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#bit0\">bit0</a> <span class=\"fn\">z</span></span>)</span>.im</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#bit0\">bit0</a> <span class=\"fn\"><span class=\"fn\">z</span>.im</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L212-L213","name":"Complex.bit1_re","line":212,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.bit1_re","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.bit1_re\"><span class=\"name\">Complex</span>.<span class=\"name\">bit1_re</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#bit1\">bit1</a> <span class=\"fn\">z</span></span>)</span>.re</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#bit1\">bit1</a> <span class=\"fn\"><span class=\"fn\">z</span>.re</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L207-L208","name":"Complex.bit0_re","line":207,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.bit0_re","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.bit0_re\"><span class=\"name\">Complex</span>.<span class=\"name\">bit0_re</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#bit0\">bit0</a> <span class=\"fn\">z</span></span>)</span>.re</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#bit0\">bit0</a> <span class=\"fn\"><span class=\"fn\">z</span>.re</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L200-L201","name":"Complex.add_im","line":200,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.add_im","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.add_im\"><span class=\"name\">Complex</span>.<span class=\"name\">add_im</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">w</span></span>)</span>.im</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.im</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">w</span>.im</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L195-L196","name":"Complex.add_re","line":195,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.add_re","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.add_re\"><span class=\"name\">Complex</span>.<span class=\"name\">add_re</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">w</span></span>)</span>.re</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.re</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">w</span>.re</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L191-L192","name":"Complex.instAddComplex","line":191,"kind":"instance","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.instAddComplex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.instAddComplex\"><span class=\"name\">Complex</span>.<span class=\"name\">instAddComplex</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L187-L188","name":"Complex.ofReal_ne_one","line":187,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_ne_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_ne_one\"><span class=\"name\">Complex</span>.<span class=\"name\">ofReal_ne_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">z</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L183-L184","name":"Complex.ofReal_eq_one","line":183,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_eq_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_eq_one\"><span class=\"name\">Complex</span>.<span class=\"name\">ofReal_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L178-L179","name":"Complex.ofReal_one","line":178,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_one\"><span class=\"name\">Complex</span>.<span class=\"name\">ofReal_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L173-L174","name":"Complex.one_im","line":173,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.one_im","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.one_im\"><span class=\"name\">Complex</span>.<span class=\"name\">one_im</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">1</span>.im</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L168-L169","name":"Complex.one_re","line":168,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.one_re","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.one_re\"><span class=\"name\">Complex</span>.<span class=\"name\">one_re</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">1</span>.re</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L164-L165","name":"Complex.instOneComplex","line":164,"kind":"instance","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.instOneComplex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.instOneComplex\"><span class=\"name\">Complex</span>.<span class=\"name\">instOneComplex</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#One\">One</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L160-L161","name":"Complex.ofReal_ne_zero","line":160,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_ne_zero\"><span class=\"name\">Complex</span>.<span class=\"name\">ofReal_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">z</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L156-L157","name":"Complex.ofReal_eq_zero","line":156,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_eq_zero\"><span class=\"name\">Complex</span>.<span class=\"name\">ofReal_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L151-L152","name":"Complex.ofReal_zero","line":151,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_zero\"><span class=\"name\">Complex</span>.<span class=\"name\">ofReal_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L146-L147","name":"Complex.zero_im","line":146,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.zero_im","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.zero_im\"><span class=\"name\">Complex</span>.<span class=\"name\">zero_im</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span>.im</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L141-L142","name":"Complex.zero_re","line":141,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.zero_re","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.zero_re\"><span class=\"name\">Complex</span>.<span class=\"name\">zero_re</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span>.re</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L137-L138","name":"Complex.instInhabitedComplex","line":137,"kind":"instance","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.instInhabitedComplex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.instInhabitedComplex\"><span class=\"name\">Complex</span>.<span class=\"name\">instInhabitedComplex</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L134-L135","name":"Complex.instZeroComplex","line":134,"kind":"instance","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.instZeroComplex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.instZeroComplex\"><span class=\"name\">Complex</span>.<span class=\"name\">instZeroComplex</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L130-L131","name":"Complex.mem_reProdIm","line":130,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.mem_reProdIm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.mem_reProdIm\"><span class=\"name\">Complex</span>.<span class=\"name\">mem_reProdIm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex.Set.reProdIm\">×ℂ</a> <span class=\"fn\">t</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.re</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.im</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">t</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L128-L128","name":"Complex.«term_×ℂ_»","line":128,"kind":"def","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.«term_×ℂ_»","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.«term_×ℂ_»\"><span class=\"name\">Complex</span>.<span class=\"name\">«term_×ℂ_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L124-L125","name":"Complex.Set.reProdIm","line":124,"kind":"def","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.Set.reProdIm","doc":"The product of a set on the real axis and a set on the imaginary axis of the complex plane,\ndenoted by `s ×ℂ t`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.Set.reProdIm\"><span class=\"name\">Complex</span>.<span class=\"name\">Set</span>.<span class=\"name\">reProdIm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L118-L119","name":"Complex.canLift","line":118,"kind":"instance","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.canLift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.canLift\"><span class=\"name\">Complex</span>.<span class=\"name\">canLift</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/Lift.html#CanLift\">CanLift</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex.ofReal'\">Complex.ofReal'</a> <span class=\"fn\">fun (<span class=\"fn\">z</span> : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.im</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L114-L114","name":"Complex.ofReal_injective","line":114,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_injective\"><span class=\"name\">Complex</span>.<span class=\"name\">ofReal_injective</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex.ofReal'\">Complex.ofReal'</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L109-L110","name":"Complex.ofReal_inj","line":109,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_inj\"><span class=\"name\">Complex</span>.<span class=\"name\">ofReal_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">w</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">w</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L104-L105","name":"Complex.ofReal_def","line":104,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_def\"><span class=\"name\">Complex</span>.<span class=\"name\">ofReal_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">r</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">re</span> := <span class=\"fn\">r</span>, <span class=\"fn\">im</span> := <span class=\"fn\">0</span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L100-L101","name":"Complex.ofReal_im","line":100,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_im","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_im\"><span class=\"name\">Complex</span>.<span class=\"name\">ofReal_im</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">r</span></span>)</span>.im</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L95-L96","name":"Complex.ofReal_re","line":95,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_re","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.ofReal_re\"><span class=\"name\">Complex</span>.<span class=\"name\">ofReal_re</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">r</span></span>)</span>.re</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">r</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L91-L92","name":"Complex.instCoeRealComplex","line":91,"kind":"instance","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.instCoeRealComplex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.instCoeRealComplex\"><span class=\"name\">Complex</span>.<span class=\"name\">instCoeRealComplex</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L89-L90","name":"Complex.ofReal'","line":89,"kind":"def","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.ofReal'","doc":"The natural inclusion of the real numbers into the complex numbers.\nThe name `Complex.ofReal` is reserved for the bundled homomorphism. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.ofReal'\"><span class=\"name\">Complex</span>.<span class=\"name\">ofReal'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L81-L82","name":"Complex.range_im","line":81,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.range_im","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.range_im\"><span class=\"name\">Complex</span>.<span class=\"name\">range_im</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex.im\">Complex.im</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Set.univ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L76-L77","name":"Complex.range_re","line":76,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.range_re","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.range_re\"><span class=\"name\">Complex</span>.<span class=\"name\">range_re</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.range\">Set.range</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">Complex.re</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Set.univ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L72-L72","name":"Complex.im_surjective","line":72,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.im_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.im_surjective\"><span class=\"name\">Complex</span>.<span class=\"name\">im_surjective</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex.im\">Complex.im</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L69-L69","name":"Complex.re_surjective","line":69,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.re_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.re_surjective\"><span class=\"name\">Complex</span>.<span class=\"name\">re_surjective</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\">Complex.re</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L65-L66","name":"Complex.ext_iff","line":65,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.ext_iff\"><span class=\"name\">Complex</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">w</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.re</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">w</span>.re</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.im</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">w</span>.im</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L59-L60","name":"Complex.ext","line":59,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.ext\"><span class=\"name\">Complex</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.re</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">w</span>.re</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span>.im</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">w</span>.im</span></span> → <span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">w</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L54-L55","name":"Complex.eta","line":54,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.eta","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.eta\"><span class=\"name\">Complex</span>.<span class=\"name\">eta</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">re</span> := <span class=\"fn\"><span class=\"fn\">z</span>.re</span>, <span class=\"fn\">im</span> := <span class=\"fn\"><span class=\"fn\">z</span>.im</span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">z</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L46-L50","name":"Complex.equivRealProd","line":46,"kind":"def","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.equivRealProd","doc":"The equivalence between the complex numbers and `ℝ × ℝ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.equivRealProd\"><span class=\"name\">Complex</span>.<span class=\"name\">equivRealProd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L45-L45","name":"Complex.equivRealProd_apply","line":45,"kind":"theorem","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.equivRealProd_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.equivRealProd_apply\"><span class=\"name\">Complex</span>.<span class=\"name\">equivRealProd_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Complex.equivRealProd</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">z</span>.re</span>, <span class=\"fn\"><span class=\"fn\">z</span>.im</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L41-L42","name":"Complex.instDecidableEqComplex","line":41,"kind":"instance","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.instDecidableEqComplex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.instDecidableEqComplex\"><span class=\"name\">Complex</span>.<span class=\"name\">instDecidableEqComplex</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L35-L35","name":"termℂ","line":35,"kind":"def","docLink":"./Mathlib/Data/Complex/Basic.html#termℂ","doc":"Complex numbers consist of two `Real`s: a real part `re` and an imaginary part `im`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#termℂ\"><span class=\"name\">termℂ</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L32-L32","name":"Complex.im","line":32,"kind":"def","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.im","doc":"The imaginary part of a complex number. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.im\"><span class=\"name\">Complex</span>.<span class=\"name\">im</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L30-L30","name":"Complex.re","line":30,"kind":"def","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.re","doc":"The real part of a complex number. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.re\"><span class=\"name\">Complex</span>.<span class=\"name\">re</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L28-L28","name":"Complex.mk","line":28,"kind":"ctor","docLink":"./Mathlib/Data/Complex/Basic.html#Complex.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex.mk\"><span class=\"name\">Complex</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(re : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(im : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Complex/Basic.html#Complex\">ℂ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Data/Complex/Basic.lean#L28-L32","name":"Complex","line":28,"kind":"structure","docLink":"./Mathlib/Data/Complex/Basic.html#Complex","doc":"Complex numbers consist of two `Real`s: a real part `re` and an imaginary part `im`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Complex/Basic.html#Complex\"><span class=\"name\">Complex</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}