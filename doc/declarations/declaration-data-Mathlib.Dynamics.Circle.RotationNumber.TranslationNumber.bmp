{"name":"Mathlib.Dynamics.Circle.RotationNumber.TranslationNumber","instances":[{"typeNames":["CircleDeg1Lift","Real","Real"],"name":"CircleDeg1Lift.instFunLikeCircleDeg1LiftReal","className":"DFunLike"},{"typeNames":["CircleDeg1Lift","Real","Real"],"name":"CircleDeg1Lift.instOrderHomClassCircleDeg1LiftRealInstLERealInstFunLikeCircleDeg1LiftReal","className":"RelHomClass"},{"typeNames":["CircleDeg1Lift"],"name":"CircleDeg1Lift.instMonoidCircleDeg1Lift","className":"Monoid"},{"typeNames":["CircleDeg1Lift"],"name":"CircleDeg1Lift.instInhabitedCircleDeg1Lift","className":"Inhabited"},{"typeNames":["Units"],"name":"CircleDeg1Lift.unitsHasCoeToFun","className":"CoeFun"},{"typeNames":["CircleDeg1Lift"],"name":"CircleDeg1Lift.instLatticeCircleDeg1Lift","className":"Lattice"}],"imports":["Init","Mathlib.Algebra.GroupPower.IterateHom","Mathlib.Analysis.SpecificLimits.Basic","Mathlib.Order.Iterate","Mathlib.Order.SemiconjSup","Mathlib.Tactic.Monotonicity","Mathlib.Topology.Order.MonotoneContinuity"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L1028-L1031","name":"CircleDeg1Lift.semiconj_of_bijective_of_translationNumber_eq","line":1028,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.semiconj_of_bijective_of_translationNumber_eq","doc":"If two lifts of circle homeomorphisms have the same translation number, then they are\nsemiconjugate by a `CircleDeg1Lift`. This version uses assumptions `bijective f₁` and\n`bijective f₂` to assume that `f₁` and `f₂` are homeomorphisms. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.semiconj_of_bijective_of_translationNumber_eq\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">semiconj_of_bijective_of_translationNumber_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f₁ : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f₂ : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Bijective\">Function.Bijective</a> <span class=\"fn\">⇑<span class=\"fn\">f₁</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Bijective\">Function.Bijective</a> <span class=\"fn\">⇑<span class=\"fn\">f₂</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">f₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">f₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (F : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>), <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Conjugate.html#Function.Semiconj\">Function.Semiconj</a> <span class=\"fn\">⇑<span class=\"fn\">F</span></span> <span class=\"fn\">⇑<span class=\"fn\">f₁</span></span> <span class=\"fn\">⇑<span class=\"fn\">f₂</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L1019-L1022","name":"CircleDeg1Lift.semiconj_of_isUnit_of_translationNumber_eq","line":1019,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.semiconj_of_isUnit_of_translationNumber_eq","doc":"If two lifts of circle homeomorphisms have the same translation number, then they are\nsemiconjugate by a `CircleDeg1Lift`. This version uses assumptions `IsUnit f₁` and `IsUnit f₂`\nto assume that `f₁` and `f₂` are homeomorphisms. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.semiconj_of_isUnit_of_translationNumber_eq\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">semiconj_of_isUnit_of_translationNumber_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f₁ : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f₂ : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">f₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">f₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">f₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">f₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (F : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>), <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Conjugate.html#Function.Semiconj\">Function.Semiconj</a> <span class=\"fn\">⇑<span class=\"fn\">F</span></span> <span class=\"fn\">⇑<span class=\"fn\">f₁</span></span> <span class=\"fn\">⇑<span class=\"fn\">f₂</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L1006-L1013","name":"CircleDeg1Lift.units_semiconj_of_translationNumber_eq","line":1006,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.units_semiconj_of_translationNumber_eq","doc":"If two lifts of circle homeomorphisms have the same translation number, then they are\nsemiconjugate by a `CircleDeg1Lift`. This version uses arguments `f₁ f₂ : CircleDeg1Liftˣ`\nto assume that `f₁` and `f₂` are homeomorphisms. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.units_semiconj_of_translationNumber_eq\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">units_semiconj_of_translationNumber_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f₁ : <span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a><a href=\"./Mathlib/Algebra/Group/Units.html#Units\">ˣ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f₂ : <span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a><a href=\"./Mathlib/Algebra/Group/Units.html#Units\">ˣ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">↑<span class=\"fn\">f₁</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">↑<span class=\"fn\">f₂</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (F : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>), <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Conjugate.html#Function.Semiconj\">Function.Semiconj</a> <span class=\"fn\">⇑<span class=\"fn\">F</span></span> <span class=\"fn\">⇑<span class=\"fn\">↑<span class=\"fn\">f₁</span></span></span> <span class=\"fn\">⇑<span class=\"fn\">↑<span class=\"fn\">f₂</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L969-L1000","name":"CircleDeg1Lift.semiconj_of_group_action_of_forall_translationNumber_eq","line":969,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.semiconj_of_group_action_of_forall_translationNumber_eq","doc":"Consider two actions `f₁ f₂ : G →* CircleDeg1Lift` of a group on the real line by lifts of\norientation preserving circle homeomorphisms. Suppose that for each `g : G` the homeomorphisms\n`f₁ g` and `f₂ g` have equal rotation numbers. Then there exists `F : CircleDeg1Lift` such that\n`F * f₁ g = f₂ g * F` for all `g : G`.\n\nThis is a version of Proposition 5.4 from [Étienne Ghys, Groupes d'homeomorphismes du cercle et\ncohomologie bornee][ghys87:groupes]. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.semiconj_of_group_action_of_forall_translationNumber_eq\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">semiconj_of_group_action_of_forall_translationNumber_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f₁ : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f₂ : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">g</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f₁</span> <span class=\"fn\">g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f₂</span> <span class=\"fn\">g</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (F : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>), <span class=\"fn\">∀ (<span class=\"fn\">g</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Conjugate.html#Function.Semiconj\">Function.Semiconj</a> <span class=\"fn\">⇑<span class=\"fn\">F</span></span> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f₁</span> <span class=\"fn\">g</span></span>)</span></span> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f₂</span> <span class=\"fn\">g</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L956-L959","name":"CircleDeg1Lift.translationNumber_eq_rat_iff","line":956,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_eq_rat_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_eq_rat_iff\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber_eq_rat_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L951-L953","name":"CircleDeg1Lift.continuous_pow","line":951,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.continuous_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.continuous_pow\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">continuous_pow</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L941-L948","name":"CircleDeg1Lift.translationNumber_eq_int_iff","line":941,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_eq_int_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_eq_int_iff\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber_eq_int_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L931-L938","name":"CircleDeg1Lift.exists_eq_add_translationNumber","line":931,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.exists_eq_add_translationNumber","doc":"If `f` is a continuous monotone map `ℝ → ℝ`, `f (x + 1) = f x + 1`, then there exists `x`\nsuch that `f x = x + τ f`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.exists_eq_add_translationNumber\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">exists_eq_add_translationNumber</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">f</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L918-L926","name":"CircleDeg1Lift.lt_translationNumber_of_forall_add_lt","line":918,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.lt_translationNumber_of_forall_add_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.lt_translationNumber_of_forall_add_lt\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">lt_translationNumber_of_forall_add_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hz : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L907-L915","name":"CircleDeg1Lift.translationNumber_lt_of_forall_lt_add","line":907,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_lt_of_forall_lt_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_lt_of_forall_lt_add\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber_lt_of_forall_lt_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hz : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">z</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">z</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L902-L904","name":"CircleDeg1Lift.forall_map_sub_of_Icc","line":902,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.forall_map_sub_of_Icc","doc":"If a predicate depends only on `f x - x` and holds for all `0 ≤ x ≤ 1`,\nthen it holds for all `x`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.forall_map_sub_of_Icc\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">forall_map_sub_of_Icc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(P : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Icc\">Set.Icc</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span></span>, <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L893-L897","name":"CircleDeg1Lift.translationNumber_of_map_pow_eq_add_int","line":893,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_of_map_pow_eq_add_int","doc":"If `f^n x - x`, `n > 0`, is an integer number `m` for some point `x`, then\n`τ f = m / n`. On the circle this means that a map with a periodic orbit has\na rational rotation number. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_of_map_pow_eq_add_int\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber_of_map_pow_eq_add_int</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L886-L887","name":"CircleDeg1Lift.lt_map_of_nat_lt_translationNumber","line":886,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.lt_map_of_nat_lt_translationNumber","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.lt_map_of_nat_lt_translationNumber\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">lt_map_of_nat_lt_translationNumber</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L882-L883","name":"CircleDeg1Lift.lt_map_of_int_lt_translationNumber","line":882,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.lt_map_of_int_lt_translationNumber","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.lt_map_of_int_lt_translationNumber\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">lt_map_of_int_lt_translationNumber</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L876-L879","name":"CircleDeg1Lift.map_lt_add_translationNumber_add_one","line":876,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_lt_add_translationNumber_add_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_lt_add_translationNumber_add_one\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">map_lt_add_translationNumber_add_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">f</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L868-L873","name":"CircleDeg1Lift.map_lt_add_floor_translationNumber_add_one","line":868,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_lt_add_floor_translationNumber_add_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_lt_add_floor_translationNumber_add_one\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">map_lt_add_floor_translationNumber_add_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌊</a><span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">f</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌋</a></span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L864-L865","name":"CircleDeg1Lift.map_lt_of_translationNumber_lt_nat","line":864,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_lt_of_translationNumber_lt_nat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_lt_of_translationNumber_lt_nat\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">map_lt_of_translationNumber_lt_nat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L860-L861","name":"CircleDeg1Lift.map_lt_of_translationNumber_lt_int","line":860,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_lt_of_translationNumber_lt_int","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_lt_of_translationNumber_lt_int\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">map_lt_of_translationNumber_lt_int</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L856-L857","name":"CircleDeg1Lift.translationNumber_le_ceil_sub","line":856,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_le_ceil_sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_le_ceil_sub\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber_le_ceil_sub</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌈</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌉</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L852-L853","name":"CircleDeg1Lift.floor_sub_le_translationNumber","line":852,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.floor_sub_le_translationNumber","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.floor_sub_le_translationNumber\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">floor_sub_le_translationNumber</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌊</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌋</a></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L847-L849","name":"CircleDeg1Lift.translationNumber_of_eq_add_int","line":847,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_of_eq_add_int","doc":"If `f x - x` is an integer number `m` for some point `x`, then `τ f = m`.\nOn the circle this means that a map with a fixed point has rotation number zero. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_of_eq_add_int\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber_of_eq_add_int</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L841-L842","name":"CircleDeg1Lift.le_translationNumber_of_add_nat_le","line":841,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.le_translationNumber_of_add_nat_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.le_translationNumber_of_add_nat_le\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">le_translationNumber_of_add_nat_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L835-L838","name":"CircleDeg1Lift.le_translationNumber_of_add_int_le","line":835,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.le_translationNumber_of_add_int_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.le_translationNumber_of_add_int_le\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">le_translationNumber_of_add_int_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L831-L832","name":"CircleDeg1Lift.translationNumber_le_of_le_add_nat","line":831,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_le_of_le_add_nat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_le_of_le_add_nat\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber_le_of_le_add_nat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L825-L828","name":"CircleDeg1Lift.translationNumber_le_of_le_add_int","line":825,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_le_of_le_add_int","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_le_of_le_add_int\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber_le_of_le_add_int</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L821-L822","name":"CircleDeg1Lift.le_translationNumber_of_add_le","line":821,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.le_translationNumber_of_add_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.le_translationNumber_of_add_le\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">le_translationNumber_of_add_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hz : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L817-L818","name":"CircleDeg1Lift.translationNumber_le_of_le_add","line":817,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_le_of_le_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_le_of_le_add\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber_le_of_le_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hz : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">z</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">z</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L811-L814","name":"CircleDeg1Lift.translationNumber_translate","line":811,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_translate","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_translate\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber_translate</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">CircleDeg1Lift.translate</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Multiplicative.ofAdd</span> <span class=\"fn\">x</span></span>)</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L806-L808","name":"CircleDeg1Lift.translationNumber_mono","line":806,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_mono\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber_mono</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Monotone\">Monotone</a> <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L801-L803","name":"CircleDeg1Lift.tendsto_translation_number'","line":801,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.tendsto_translation_number'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.tendsto_translation_number'\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">tendsto_translation_number'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x</span></span>)</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span></span>)</span> <span class=\"fn\">Filter.atTop</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">f</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L794-L798","name":"CircleDeg1Lift.tendsto_translationNumber","line":794,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.tendsto_translationNumber","doc":"For any `x : ℝ` the sequence $\\frac{f^n(x)-x}{n}$ tends to the translation number of `f`.\nIn particular, this limit does not depend on `x`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.tendsto_translationNumber\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">tendsto_translationNumber</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x</span></span>)</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span>)</span> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">f</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L788-L789","name":"CircleDeg1Lift.tendsto_translation_number₀","line":788,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.tendsto_translation_number₀","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.tendsto_translation_number₀\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">tendsto_translation_number₀</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span>)</span> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">f</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L775-L785","name":"CircleDeg1Lift.tendsto_translation_number₀'","line":775,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.tendsto_translation_number₀'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.tendsto_translation_number₀'\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">tendsto_translation_number₀'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span></span>)</span> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">f</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L770-L772","name":"CircleDeg1Lift.dist_pow_map_zero_mul_translationNumber_le","line":770,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.dist_pow_map_zero_mul_translationNumber_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.dist_pow_map_zero_mul_translationNumber_le\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">dist_pow_map_zero_mul_translationNumber_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Dist.dist\">dist</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">0</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">f</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L765-L767","name":"CircleDeg1Lift.translationNumber_conj_eq'","line":765,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_conj_eq'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_conj_eq'\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber_conj_eq'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a><a href=\"./Mathlib/Algebra/Group/Units.html#Units\">ˣ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">f</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">f</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">g</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L759-L761","name":"CircleDeg1Lift.translationNumber_conj_eq","line":759,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_conj_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_conj_eq\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber_conj_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a><a href=\"./Mathlib/Algebra/Group/Units.html#Units\">ˣ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">f</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">g</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L753-L755","name":"CircleDeg1Lift.translationNumber_zpow","line":753,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_zpow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_zpow\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber_zpow</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a><a href=\"./Mathlib/Algebra/Group/Units.html#Units\">ˣ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">↑<span class=\"fn\">f</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L745-L749","name":"CircleDeg1Lift.translationNumber_pow","line":745,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_pow\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber_pow</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L739-L741","name":"CircleDeg1Lift.translationNumber_units_inv","line":739,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_units_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_units_inv\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber_units_inv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a><a href=\"./Mathlib/Algebra/Group/Units.html#Units\">ˣ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">f</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">↑<span class=\"fn\">f</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L727-L735","name":"CircleDeg1Lift.translationNumber_mul_of_commute","line":727,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_mul_of_commute","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_mul_of_commute\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber_mul_of_commute</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Commute/Defs.html#Commute\">Commute</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">g</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L722-L724","name":"CircleDeg1Lift.translationNumber_eq_of_semiconj","line":722,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_eq_of_semiconj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_eq_of_semiconj\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber_eq_of_semiconj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g₁ : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g₂ : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Conjugate.html#Function.Semiconj\">Function.Semiconj</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span> <span class=\"fn\">⇑<span class=\"fn\">g₁</span></span> <span class=\"fn\">⇑<span class=\"fn\">g₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">g₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">g₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L716-L719","name":"CircleDeg1Lift.translationNumber_eq_of_semiconjBy","line":716,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_eq_of_semiconjBy","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_eq_of_semiconjBy\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber_eq_of_semiconjBy</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g₁ : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g₂ : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Semiconj/Defs.html#SemiconjBy\">SemiconjBy</a> <span class=\"fn\">f</span> <span class=\"fn\">g₁</span> <span class=\"fn\">g₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">g₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">g₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L712-L713","name":"CircleDeg1Lift.translationNumber_one","line":712,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_one\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L705-L708","name":"CircleDeg1Lift.translationNumber_eq_of_dist_bounded","line":705,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_eq_of_dist_bounded","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_eq_of_dist_bounded\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber_eq_of_dist_bounded</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Dist.dist\">dist</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">0</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">0</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">C</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">g</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L692-L702","name":"CircleDeg1Lift.tendsto_translationNumber_of_dist_bounded_aux","line":692,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.tendsto_translationNumber_of_dist_bounded_aux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.tendsto_translationNumber_of_dist_bounded_aux\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">tendsto_translationNumber_of_dist_bounded_aux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Dist.dist\">dist</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">0</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">C</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span></span></span>)</span> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">f</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L686-L689","name":"CircleDeg1Lift.dist_map_zero_translationNumber_le","line":686,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.dist_map_zero_translationNumber_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.dist_map_zero_translationNumber_le\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">dist_map_zero_translationNumber_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Dist.dist\">dist</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L682-L683","name":"CircleDeg1Lift.tendsto_translationNumber_aux","line":682,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.tendsto_translationNumber_aux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.tendsto_translationNumber_aux\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">tendsto_translationNumber_aux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.transnumAuxSeq\">CircleDeg1Lift.transnumAuxSeq</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">f</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L671-L679","name":"CircleDeg1Lift.transnumAuxSeq_dist_lt","line":671,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.transnumAuxSeq_dist_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.transnumAuxSeq_dist_lt\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">transnumAuxSeq_dist_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Dist.dist\">dist</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.transnumAuxSeq\">CircleDeg1Lift.transnumAuxSeq</a> <span class=\"fn\">f</span> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.transnumAuxSeq\">CircleDeg1Lift.transnumAuxSeq</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">1</span> / <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L668-L668","name":"CircleDeg1Lift.transnumAuxSeq_zero","line":668,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.transnumAuxSeq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.transnumAuxSeq_zero\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">transnumAuxSeq_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.transnumAuxSeq\">CircleDeg1Lift.transnumAuxSeq</a> <span class=\"fn\">f</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L663-L665","name":"CircleDeg1Lift.translationNumber_eq_of_tendsto₀'","line":663,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_eq_of_tendsto₀'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_eq_of_tendsto₀'\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber_eq_of_tendsto₀'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{τ' : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span></span>)</span> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">τ'</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">τ'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L656-L660","name":"CircleDeg1Lift.translationNumber_eq_of_tendsto₀","line":656,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_eq_of_tendsto₀","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_eq_of_tendsto₀\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber_eq_of_tendsto₀</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{τ' : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span>)</span> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">τ'</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">τ'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L651-L653","name":"CircleDeg1Lift.translationNumber_eq_of_tendsto_aux","line":651,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_eq_of_tendsto_aux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber_eq_of_tendsto_aux\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber_eq_of_tendsto_aux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{τ' : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.transnumAuxSeq\">CircleDeg1Lift.transnumAuxSeq</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">τ'</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\">CircleDeg1Lift.translationNumber</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">τ'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L647-L648","name":"CircleDeg1Lift.transnumAuxSeq_def","line":647,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.transnumAuxSeq_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.transnumAuxSeq_def\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">transnumAuxSeq_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.transnumAuxSeq\">CircleDeg1Lift.transnumAuxSeq</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">fun (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span></span>)</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L636-L637","name":"CircleDeg1Lift.translationNumber","line":636,"kind":"def","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber","doc":"The translation number of a `CircleDeg1Lift`, $τ(f)=\\lim_{n→∞}\\frac{f^n(x)-x}{n}$. We use\nan auxiliary sequence `\\frac{f^{2^n}(0)}{2^n}` to define `τ(f)` because some proofs are simpler\nthis way. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translationNumber\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translationNumber</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L629-L630","name":"CircleDeg1Lift.transnumAuxSeq","line":629,"kind":"def","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.transnumAuxSeq","doc":"An auxiliary sequence used to define the translation number. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.transnumAuxSeq\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">transnumAuxSeq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L616-L619","name":"CircleDeg1Lift.mul_floor_map_zero_le_floor_iterate_zero","line":616,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.mul_floor_map_zero_le_floor_iterate_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.mul_floor_map_zero_le_floor_iterate_zero\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">mul_floor_map_zero_le_floor_iterate_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌊</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌋</a></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌊</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a></span> <span class=\"fn\">0</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌋</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L611-L613","name":"CircleDeg1Lift.lt_iterate_pos_iff","line":611,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.lt_iterate_pos_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.lt_iterate_pos_iff\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">lt_iterate_pos_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a></span> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L606-L608","name":"CircleDeg1Lift.le_iterate_pos_iff","line":606,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.le_iterate_pos_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.le_iterate_pos_iff\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">le_iterate_pos_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a></span> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L600-L603","name":"CircleDeg1Lift.iterate_pos_eq_iff","line":600,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.iterate_pos_eq_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.iterate_pos_eq_iff\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">iterate_pos_eq_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L594-L597","name":"CircleDeg1Lift.iterate_pos_lt_iff","line":594,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.iterate_pos_lt_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.iterate_pos_lt_iff\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">iterate_pos_lt_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L588-L591","name":"CircleDeg1Lift.iterate_pos_le_iff","line":588,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.iterate_pos_le_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.iterate_pos_le_iff\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">iterate_pos_le_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L583-L585","name":"CircleDeg1Lift.iterate_eq_of_map_eq_add_int","line":583,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.iterate_eq_of_map_eq_add_int","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.iterate_eq_of_map_eq_add_int\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">iterate_eq_of_map_eq_add_int</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L577-L580","name":"CircleDeg1Lift.le_iterate_of_add_int_le_map","line":577,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.le_iterate_of_add_int_le_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.le_iterate_of_add_int_le_map\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">le_iterate_of_add_int_le_map</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a></span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L571-L574","name":"CircleDeg1Lift.iterate_le_of_map_le_add_int","line":571,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.iterate_le_of_map_le_add_int","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.iterate_le_of_map_le_add_int\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">iterate_le_of_map_le_add_int</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a></span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L556-L557","name":"CircleDeg1Lift.continuous_iff_surjective","line":556,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.continuous_iff_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.continuous_iff_surjective\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">continuous_iff_surjective</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L550-L553","name":"CircleDeg1Lift.tendsto_atTop","line":550,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.tendsto_atTop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.tendsto_atTop\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">tendsto_atTop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\">Filter.atTop</span> <span class=\"fn\">Filter.atTop</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L544-L547","name":"CircleDeg1Lift.tendsto_atBot","line":544,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.tendsto_atBot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.tendsto_atBot\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">tendsto_atBot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\">Filter.atBot</span> <span class=\"fn\">Filter.atBot</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L535-L537","name":"CircleDeg1Lift.dist_map_zero_lt_of_semiconjBy","line":535,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.dist_map_zero_lt_of_semiconjBy","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.dist_map_zero_lt_of_semiconjBy\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">dist_map_zero_lt_of_semiconjBy</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g₁ : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g₂ : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Semiconj/Defs.html#SemiconjBy\">SemiconjBy</a> <span class=\"fn\">f</span> <span class=\"fn\">g₁</span> <span class=\"fn\">g₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Dist.dist\">dist</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g₁</span> <span class=\"fn\">0</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g₂</span> <span class=\"fn\">0</span></span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">2</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L524-L532","name":"CircleDeg1Lift.dist_map_zero_lt_of_semiconj","line":524,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.dist_map_zero_lt_of_semiconj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.dist_map_zero_lt_of_semiconj\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">dist_map_zero_lt_of_semiconj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g₁ : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g₂ : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Conjugate.html#Function.Semiconj\">Function.Semiconj</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span> <span class=\"fn\">⇑<span class=\"fn\">g₁</span></span> <span class=\"fn\">⇑<span class=\"fn\">g₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Dist.dist\">dist</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g₁</span> <span class=\"fn\">0</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g₂</span> <span class=\"fn\">0</span></span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">2</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L519-L521","name":"CircleDeg1Lift.dist_map_map_zero_lt","line":519,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.dist_map_map_zero_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.dist_map_map_zero_lt\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">dist_map_map_zero_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/PseudoMetric.html#Dist.dist\">dist</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">0</span></span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">0</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L512-L516","name":"CircleDeg1Lift.lt_map_map_zero","line":512,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.lt_map_map_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.lt_map_map_zero\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">lt_map_map_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">0</span></span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">0</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L506-L509","name":"CircleDeg1Lift.le_ceil_map_map_zero","line":506,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.le_ceil_map_map_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.le_ceil_map_map_zero\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">le_ceil_map_map_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌈</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌉</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌊</a><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">0</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌋</a></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌈</a><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">0</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌉</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L500-L503","name":"CircleDeg1Lift.le_floor_map_map_zero","line":500,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.le_floor_map_map_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.le_floor_map_map_zero\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">le_floor_map_map_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌊</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌋</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌊</a><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">0</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌋</a></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌊</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">0</span></span>)</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌋</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L496-L497","name":"CircleDeg1Lift.le_map_map_zero","line":496,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.le_map_map_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.le_map_map_zero\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">le_map_map_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌊</a><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">0</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌋</a></span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">0</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L490-L493","name":"CircleDeg1Lift.le_map_of_map_zero","line":490,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.le_map_of_map_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.le_map_of_map_zero\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">le_map_of_map_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌊</a><span class=\"fn\">x</span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌋</a></span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L483-L487","name":"CircleDeg1Lift.map_map_zero_lt","line":483,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_map_zero_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_map_zero_lt\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">map_map_zero_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">0</span></span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">0</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L477-L480","name":"CircleDeg1Lift.ceil_map_map_zero_le","line":477,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.ceil_map_map_zero_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.ceil_map_map_zero_le\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">ceil_map_map_zero_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌈</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">0</span></span>)</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌉</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌈</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌉</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌈</a><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">0</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌉</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L471-L474","name":"CircleDeg1Lift.floor_map_map_zero_le","line":471,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.floor_map_map_zero_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.floor_map_map_zero_le\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">floor_map_map_zero_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌊</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">0</span></span>)</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌋</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌊</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.floor\">⌋</a></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌈</a><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">0</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌉</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L467-L468","name":"CircleDeg1Lift.map_map_zero_le","line":467,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_map_zero_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_map_zero_le\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">map_map_zero_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">0</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌈</a><span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">0</span></span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌉</a></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L461-L464","name":"CircleDeg1Lift.map_le_of_map_zero","line":461,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_le_of_map_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_le_of_map_zero\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">map_le_of_map_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌈</a><span class=\"fn\">x</span><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.ceil\">⌉</a></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L448-L448","name":"CircleDeg1Lift.pow_monotone","line":448,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.pow_monotone","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.pow_monotone\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">pow_monotone</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Monotone\">Monotone</a> <span class=\"fn\">fun (<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L444-L445","name":"CircleDeg1Lift.pow_mono","line":444,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.pow_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.pow_mono\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">pow_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L440-L441","name":"CircleDeg1Lift.iterate_mono","line":440,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.iterate_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.iterate_mono\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">iterate_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">g</span></span>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L436-L437","name":"CircleDeg1Lift.iterate_monotone","line":436,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.iterate_monotone","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.iterate_monotone\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">iterate_monotone</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Monotone\">Monotone</a> <span class=\"fn\">fun (<span class=\"fn\">f</span> : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L432-L433","name":"CircleDeg1Lift.inf_apply","line":432,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.inf_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.inf_apply\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">inf_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Mathlib/Order/Notation.html#Inf.inf\">⊓</a> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Min.min\">min</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L427-L428","name":"CircleDeg1Lift.sup_apply","line":427,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.sup_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.sup_apply\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">sup_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Mathlib/Order/Notation.html#Sup.sup\">⊔</a> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Max.max\">max</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L405-L424","name":"CircleDeg1Lift.instLatticeCircleDeg1Lift","line":405,"kind":"instance","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.instLatticeCircleDeg1Lift","doc":"Monotone circle maps form a lattice with respect to the pointwise order "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.instLatticeCircleDeg1Lift\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">instLatticeCircleDeg1Lift</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L395-L396","name":"CircleDeg1Lift.map_fract_sub_fract_eq","line":395,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_fract_sub_fract_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_fract_sub_fract_eq\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">map_fract_sub_fract_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.fract\">Int.fract</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Floor.html#Int.fract\">Int.fract</a> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L391-L391","name":"CircleDeg1Lift.map_int_of_map_zero","line":391,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_int_of_map_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_int_of_map_zero\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">map_int_of_map_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L387-L388","name":"CircleDeg1Lift.map_sub_nat","line":387,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_sub_nat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_sub_nat\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">map_sub_nat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L382-L383","name":"CircleDeg1Lift.map_nat_add","line":382,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_nat_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_nat_add\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">map_nat_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L377-L378","name":"CircleDeg1Lift.map_add_nat","line":377,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_add_nat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_add_nat\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">map_add_nat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L372-L373","name":"CircleDeg1Lift.map_sub_int","line":372,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_sub_int","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_sub_int\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">map_sub_int</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L367-L368","name":"CircleDeg1Lift.map_add_int","line":367,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_add_int","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_add_int\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">map_add_int</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L362-L363","name":"CircleDeg1Lift.map_int_add","line":362,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_int_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_int_add\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">map_int_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L356-L358","name":"CircleDeg1Lift.commute_sub_int","line":356,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.commute_sub_int","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.commute_sub_int\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">commute_sub_int</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Conjugate.html#Function.Commute\">Function.Commute</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L352-L353","name":"CircleDeg1Lift.commute_int_add","line":352,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.commute_int_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.commute_int_add\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">commute_int_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Conjugate.html#Function.Commute\">Function.Commute</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L347-L349","name":"CircleDeg1Lift.commute_add_int","line":347,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.commute_add_int","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.commute_add_int\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">commute_add_int</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Conjugate.html#Function.Commute\">Function.Commute</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L342-L344","name":"CircleDeg1Lift.commute_sub_nat","line":342,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.commute_sub_nat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.commute_sub_nat\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">commute_sub_nat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Conjugate.html#Function.Commute\">Function.Commute</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L338-L339","name":"CircleDeg1Lift.commute_add_nat","line":338,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.commute_add_nat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.commute_add_nat\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">commute_add_nat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Conjugate.html#Function.Commute\">Function.Commute</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L334-L335","name":"CircleDeg1Lift.commute_nat_add","line":334,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.commute_nat_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.commute_nat_add\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">commute_nat_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Conjugate.html#Function.Commute\">Function.Commute</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L320-L322","name":"CircleDeg1Lift.translate_iterate","line":320,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translate_iterate","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translate_iterate\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translate_iterate</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">CircleDeg1Lift.translate</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Multiplicative.ofAdd</span> <span class=\"fn\">x</span></span>)</span></span>)</span></span></span>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">⇑<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">CircleDeg1Lift.translate</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Multiplicative.ofAdd</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span>)</span></span>)</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L314-L316","name":"CircleDeg1Lift.translate_pow","line":314,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translate_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translate_pow\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translate_pow</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">CircleDeg1Lift.translate</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Multiplicative.ofAdd</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">CircleDeg1Lift.translate</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Multiplicative.ofAdd</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L308-L310","name":"CircleDeg1Lift.translate_zpow","line":308,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translate_zpow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translate_zpow\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translate_zpow</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">CircleDeg1Lift.translate</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Multiplicative.ofAdd</span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">CircleDeg1Lift.translate</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Multiplicative.ofAdd</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L303-L304","name":"CircleDeg1Lift.translate_inv_apply","line":303,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translate_inv_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translate_inv_apply\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translate_inv_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">CircleDeg1Lift.translate</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Multiplicative.ofAdd</span> <span class=\"fn\">x</span></span>)</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L298-L299","name":"CircleDeg1Lift.translate_apply","line":298,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translate_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translate_apply\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translate_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">CircleDeg1Lift.translate</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Multiplicative.ofAdd</span> <span class=\"fn\">x</span></span>)</span></span>)</span></span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L289-L294","name":"CircleDeg1Lift.translate","line":289,"kind":"def","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translate","doc":"The map `y ↦ x + y` as a `CircleDeg1Lift`. More precisely, we define a homomorphism from\n`Multiplicative ℝ` to `CircleDeg1Liftˣ`, so the translation by `x` is\n`translation (Multiplicative.ofAdd x)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.translate\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">translate</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/TypeTags.html#Multiplicative\">Multiplicative</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a><a href=\"./Mathlib/Algebra/Group/Units.html#Units\">ˣ</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L277-L278","name":"CircleDeg1Lift.commute_iff_commute","line":277,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.commute_iff_commute","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.commute_iff_commute\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">commute_iff_commute</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Commute/Defs.html#Commute\">Commute</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Conjugate.html#Function.Commute\">Function.Commute</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span> <span class=\"fn\">⇑<span class=\"fn\">g</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L272-L274","name":"CircleDeg1Lift.semiconjBy_iff_semiconj","line":272,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.semiconjBy_iff_semiconj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.semiconjBy_iff_semiconj\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">semiconjBy_iff_semiconj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g₁ : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g₂ : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Semiconj/Defs.html#SemiconjBy\">SemiconjBy</a> <span class=\"fn\">f</span> <span class=\"fn\">g₁</span> <span class=\"fn\">g₂</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Conjugate.html#Function.Semiconj\">Function.Semiconj</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span> <span class=\"fn\">⇑<span class=\"fn\">g₁</span></span> <span class=\"fn\">⇑<span class=\"fn\">g₂</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L265-L269","name":"CircleDeg1Lift.coe_pow","line":265,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.coe_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.coe_pow\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">coe_pow</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L250-L262","name":"CircleDeg1Lift.isUnit_iff_bijective","line":250,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.isUnit_iff_bijective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.isUnit_iff_bijective\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">isUnit_iff_bijective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units.html#IsUnit\">IsUnit</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Bijective\">Function.Bijective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L246-L247","name":"CircleDeg1Lift.coe_toOrderIso_inv","line":246,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.coe_toOrderIso_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.coe_toOrderIso_inv\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">coe_toOrderIso_inv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a><a href=\"./Mathlib/Algebra/Group/Units.html#Units\">ˣ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">CircleDeg1Lift.toOrderIso</span> <span class=\"fn\">f</span></span>)</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">f</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L240-L242","name":"CircleDeg1Lift.coe_toOrderIso_symm","line":240,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.coe_toOrderIso_symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.coe_toOrderIso_symm\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">coe_toOrderIso_symm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a><a href=\"./Mathlib/Algebra/Group/Units.html#Units\">ˣ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso.symm\">OrderIso.symm</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">CircleDeg1Lift.toOrderIso</span> <span class=\"fn\">f</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">f</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L235-L236","name":"CircleDeg1Lift.coe_toOrderIso","line":235,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.coe_toOrderIso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.coe_toOrderIso\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">coe_toOrderIso</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a><a href=\"./Mathlib/Algebra/Group/Units.html#Units\">ˣ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">CircleDeg1Lift.toOrderIso</span> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">↑<span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L223-L231","name":"CircleDeg1Lift.toOrderIso","line":223,"kind":"def","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.toOrderIso","doc":"If a lift of a circle map is bijective, then it is an order automorphism of the line. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.toOrderIso\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">toOrderIso</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a><a href=\"./Mathlib/Algebra/Group/Units.html#Units\">ˣ</a></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L218-L219","name":"CircleDeg1Lift.units_apply_inv_apply","line":218,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.units_apply_inv_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.units_apply_inv_apply\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">units_apply_inv_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a><a href=\"./Mathlib/Algebra/Group/Units.html#Units\">ˣ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">f</span></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">f</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L213-L214","name":"CircleDeg1Lift.units_inv_apply_apply","line":213,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.units_inv_apply_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.units_inv_apply_apply\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">units_inv_apply_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a><a href=\"./Mathlib/Algebra/Group/Units.html#Units\">ˣ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">f</span><a href=\"./Mathlib/Algebra/Group/Defs.html#Inv.inv\">⁻¹</a></span></span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">f</span></span> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L206-L207","name":"CircleDeg1Lift.unitsHasCoeToFun","line":206,"kind":"instance","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.unitsHasCoeToFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.unitsHasCoeToFun\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">unitsHasCoeToFun</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeFun\">CoeFun</a> <span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a><a href=\"./Mathlib/Algebra/Group/Units.html#Units\">ˣ</a></span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a><a href=\"./Mathlib/Algebra/Group/Units.html#Units\">ˣ</a></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> → <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L202-L203","name":"CircleDeg1Lift.coe_one","line":202,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.coe_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.coe_one\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">coe_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">id</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L197-L198","name":"CircleDeg1Lift.mul_apply","line":197,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.mul_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.mul_apply\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">mul_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L193-L194","name":"CircleDeg1Lift.coe_mul","line":193,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.coe_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.coe_mul\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">coe_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">⇑<span class=\"fn\">g</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L190-L190","name":"CircleDeg1Lift.instInhabitedCircleDeg1Lift","line":190,"kind":"instance","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.instInhabitedCircleDeg1Lift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.instInhabitedCircleDeg1Lift\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">instInhabitedCircleDeg1Lift</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L181-L188","name":"CircleDeg1Lift.instMonoidCircleDeg1Lift","line":181,"kind":"instance","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.instMonoidCircleDeg1Lift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.instMonoidCircleDeg1Lift\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">instMonoidCircleDeg1Lift</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L177-L178","name":"CircleDeg1Lift.ext_iff","line":177,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.ext_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.ext_iff\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">ext_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L173-L174","name":"CircleDeg1Lift.ext","line":173,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.ext\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃g : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L167-L167","name":"CircleDeg1Lift.map_one_add","line":167,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_one_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_one_add\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">map_one_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L162-L163","name":"CircleDeg1Lift.map_add_one","line":162,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_add_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_add_one\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">map_add_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L157-L158","name":"CircleDeg1Lift.strictMono_iff_injective","line":157,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.strictMono_iff_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.strictMono_iff_injective\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">strictMono_iff_injective</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#StrictMono\">StrictMono</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L154-L154","name":"CircleDeg1Lift.mono","line":154,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.mono\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">mono</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L151-L151","name":"CircleDeg1Lift.monotone","line":151,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.monotone","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.monotone\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">monotone</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Monotone\">Monotone</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L149-L149","name":"CircleDeg1Lift.coe_toOrderHom","line":149,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.coe_toOrderHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.coe_toOrderHom\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">coe_toOrderHom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\"><span class=\"fn\">f</span>.toOrderHom</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L144-L144","name":"CircleDeg1Lift.coe_mk","line":144,"kind":"theorem","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.coe_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.coe_mk\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">coe_mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.toFun</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span>.toFun</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">{ <span class=\"fn\">toOrderHom</span> := <span class=\"fn\">f</span>, <span class=\"fn\">map_add_one'</span> := <span class=\"fn\">h</span> }</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L141-L142","name":"CircleDeg1Lift.instOrderHomClassCircleDeg1LiftRealInstLERealInstFunLikeCircleDeg1LiftReal","line":141,"kind":"instance","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.instOrderHomClassCircleDeg1LiftRealInstLERealInstFunLikeCircleDeg1LiftReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.instOrderHomClassCircleDeg1LiftRealInstLERealInstFunLikeCircleDeg1LiftReal\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">instOrderHomClassCircleDeg1LiftRealInstLERealInstFunLikeCircleDeg1LiftReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Hom/Basic.html#OrderHomClass\">OrderHomClass</a> <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L137-L139","name":"CircleDeg1Lift.instFunLikeCircleDeg1LiftReal","line":137,"kind":"instance","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.instFunLikeCircleDeg1LiftReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.instFunLikeCircleDeg1LiftReal\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">instFunLikeCircleDeg1LiftReal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/FunLike/Basic.html#FunLike\">FunLike</a> <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L132-L132","name":"CircleDeg1Lift.map_add_one'","line":132,"kind":"def","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_add_one'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.map_add_one'\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">map_add_one'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.toFun</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.toFun</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L131-L131","name":"CircleDeg1Lift.mk","line":131,"kind":"ctor","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift.mk\"><span class=\"name\">CircleDeg1Lift</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(toOrderHom : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\">→o</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(map_add_one' : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">toOrderHom</span>.toFun</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">toOrderHom</span>.toFun</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\">CircleDeg1Lift</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.lean#L131-L132","name":"CircleDeg1Lift","line":131,"kind":"structure","docLink":"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift","doc":"A lift of a monotone degree one map `S¹ → S¹`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Dynamics/Circle/RotationNumber/TranslationNumber.html#CircleDeg1Lift\"><span class=\"name\">CircleDeg1Lift</span></a></span><span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Mathlib/Order/Hom/Basic.html#OrderHom\"><span class=\"name\">OrderHom</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}