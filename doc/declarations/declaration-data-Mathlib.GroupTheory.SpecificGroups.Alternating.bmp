{"name":"Mathlib.GroupTheory.SpecificGroups.Alternating","instances":[{"typeNames":["Subtype"],"name":"fta","className":"Fintype"},{"typeNames":["Subtype"],"name":"instUniqueSubtypePermMemSubgroupPermGroupInstMembershipInstSetLikeSubgroupAlternatingGroup","className":"Unique"},{"typeNames":["alternatingGroup"],"name":"alternatingGroup.normal","className":"Subgroup.Normal"},{"typeNames":["Subtype"],"name":"alternatingGroup.instNontrivialSubtypePermFinHAddNatInstHAddInstAddNatOfNatMemSubgroupPermGroupInstMembershipInstSetLikeSubgroupAlternatingGroupFintypeInstDecidableEqFin","className":"Nontrivial"},{"typeNames":["Subtype"],"name":"alternatingGroup.isSimpleGroup_five","className":"IsSimpleGroup"}],"imports":["Init","Mathlib.Algebra.Group.ConjFinite","Mathlib.GroupTheory.Perm.Fin","Mathlib.GroupTheory.Subgroup.Simple","Mathlib.Tactic.IntervalCases"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/GroupTheory/SpecificGroups/Alternating.lean#L307-L353","name":"alternatingGroup.isSimpleGroup_five","line":307,"kind":"instance","docLink":"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup.isSimpleGroup_five","doc":"Shows that $A_5$ is simple by taking an arbitrary non-identity element and showing by casework\non its cycle type that its normal closure is all of $A_5$. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup.isSimpleGroup_five\"><span class=\"name\">alternatingGroup</span>.<span class=\"name\">isSimpleGroup_five</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Simple.html#IsSimpleGroup\">IsSimpleGroup</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup\">alternatingGroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">5</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/GroupTheory/SpecificGroups/Alternating.lean#L279-L302","name":"alternatingGroup.isConj_swap_mul_swap_of_cycleType_two","line":279,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup.isConj_swap_mul_swap_of_cycleType_two","doc":"Shows that any non-identity element of $A_5$ whose cycle decomposition consists only of swaps\nis conjugate to $(04)(13)$. This is used to show that the normal closure of such a permutation\nin $A_5$ is $A_5$. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup.isConj_swap_mul_swap_of_cycleType_two\"><span class=\"name\">alternatingGroup</span>.<span class=\"name\">isConj_swap_mul_swap_of_cycleType_two</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Equiv.Perm</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">5</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup\">alternatingGroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">5</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h1 : <span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h2 : <span class=\"fn\">∀ <span class=\"fn\">n</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Perm/Cycle/Type.html#Equiv.Perm.cycleType\">Equiv.Perm.cycleType</a> <span class=\"fn\">g</span></span>, <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">2</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Conj.html#IsConj\">IsConj</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Basic.html#Equiv.swap\">Equiv.swap</a> <span class=\"fn\">0</span> <span class=\"fn\">4</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Basic.html#Equiv.swap\">Equiv.swap</a> <span class=\"fn\">1</span> <span class=\"fn\">3</span></span></span>)</span> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/GroupTheory/SpecificGroups/Alternating.lean#L256-L273","name":"alternatingGroup.normalClosure_swap_mul_swap_five","line":256,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup.normalClosure_swap_mul_swap_five","doc":"The normal closure of $(04)(13)$ within $A_5$ is the whole group. This will be\nused to show that the normal closure of any permutation of cycle type $(2,2)$ is the whole group.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup.normalClosure_swap_mul_swap_five\"><span class=\"name\">alternatingGroup</span>.<span class=\"name\">normalClosure_swap_mul_swap_five</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalClosure\">Subgroup.normalClosure</a> <span class=\"fn\">{<span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Basic.html#Equiv.swap\">Equiv.swap</a> <span class=\"fn\">0</span> <span class=\"fn\">4</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Basic.html#Equiv.swap\">Equiv.swap</a> <span class=\"fn\">1</span> <span class=\"fn\">3</span></span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">⋯</span> }</span>}</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/GroupTheory/SpecificGroups/Alternating.lean#L234-L250","name":"alternatingGroup.normalClosure_finRotate_five","line":234,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup.normalClosure_finRotate_five","doc":"The normal closure of the 5-cycle `finRotate 5` within $A_5$ is the whole group. This will be\nused to show that the normal closure of any 5-cycle within $A_5$ is the whole group. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup.normalClosure_finRotate_five\"><span class=\"name\">alternatingGroup</span>.<span class=\"name\">normalClosure_finRotate_five</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalClosure\">Subgroup.normalClosure</a> <span class=\"fn\">{<span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Fin.html#finRotate\">finRotate</a> <span class=\"fn\">5</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">⋯</span> }</span>}</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/GroupTheory/SpecificGroups/Alternating.lean#L226-L230","name":"alternatingGroup.instNontrivialSubtypePermFinHAddNatInstHAddInstAddNatOfNatMemSubgroupPermGroupInstMembershipInstSetLikeSubgroupAlternatingGroupFintypeInstDecidableEqFin","line":226,"kind":"instance","docLink":"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup.instNontrivialSubtypePermFinHAddNatInstHAddInstAddNatOfNatMemSubgroupPermGroupInstMembershipInstSetLikeSubgroupAlternatingGroupFintypeInstDecidableEqFin","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup.instNontrivialSubtypePermFinHAddNatInstHAddInstAddNatOfNatMemSubgroupPermGroupInstMembershipInstSetLikeSubgroupAlternatingGroupFintypeInstDecidableEqFin\"><span class=\"name\">alternatingGroup</span>.<span class=\"name\">instNontrivialSubtypePermFinHAddNatInstHAddInstAddNatOfNatMemSubgroupPermGroupInstMembershipInstSetLikeSubgroupAlternatingGroupFintypeInstDecidableEqFin</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup\">alternatingGroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">3</span></span>)</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/GroupTheory/SpecificGroups/Alternating.lean#L218-L223","name":"alternatingGroup.nontrivial_of_three_le_card","line":218,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup.nontrivial_of_three_le_card","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup.nontrivial_of_three_le_card\"><span class=\"name\">alternatingGroup</span>.<span class=\"name\">nontrivial_of_three_le_card</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h3 : <span class=\"fn\"><span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup\">alternatingGroup</a> <span class=\"fn\">α</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/GroupTheory/SpecificGroups/Alternating.lean#L196-L209","name":"Equiv.Perm.isThreeCycle_sq_of_three_mem_cycleType_five","line":196,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#Equiv.Perm.isThreeCycle_sq_of_three_mem_cycleType_five","doc":"Part of proving $A_5$ is simple. Shows that the square of any element of $A_5$ with a 3-cycle in\nits cycle decomposition is a 3-cycle, so the normal closure of the original element must be\n$A_5$. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#Equiv.Perm.isThreeCycle_sq_of_three_mem_cycleType_five\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">isThreeCycle_sq_of_three_mem_cycleType_five</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Equiv.Perm</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">5</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">3</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Perm/Cycle/Type.html#Equiv.Perm.cycleType\">Equiv.Perm.cycleType</a> <span class=\"fn\">g</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Perm/Cycle/Type.html#Equiv.Perm.IsThreeCycle\">Equiv.Perm.IsThreeCycle</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/GroupTheory/SpecificGroups/Alternating.lean#L177-L190","name":"Equiv.Perm.IsThreeCycle.alternating_normalClosure","line":177,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#Equiv.Perm.IsThreeCycle.alternating_normalClosure","doc":"A key lemma to prove $A_5$ is simple. Shows that any normal subgroup of an alternating group on\nat least 5 elements is the entire alternating group if it contains a 3-cycle. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#Equiv.Perm.IsThreeCycle.alternating_normalClosure\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">IsThreeCycle</span>.<span class=\"name\">alternating_normalClosure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h5 : <span class=\"fn\"><span class=\"fn\">5</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Equiv.Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Perm/Cycle/Type.html#Equiv.Perm.IsThreeCycle\">Equiv.Perm.IsThreeCycle</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.normalClosure\">Subgroup.normalClosure</a> <span class=\"fn\">{<span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">f</span>, <span class=\"fn\">property</span> := <span class=\"fn\">⋯</span> }</span>}</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/GroupTheory/SpecificGroups/Alternating.lean#L149-L172","name":"Equiv.Perm.closure_three_cycles_eq_alternating","line":149,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#Equiv.Perm.closure_three_cycles_eq_alternating","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#Equiv.Perm.closure_three_cycles_eq_alternating\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">closure_three_cycles_eq_alternating</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">{<span class=\"fn\">σ</span> : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Equiv.Perm</a> <span class=\"fn\">α</span></span> | <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Perm/Cycle/Type.html#Equiv.Perm.IsThreeCycle\">Equiv.Perm.IsThreeCycle</a> <span class=\"fn\">σ</span></span>}</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup\">alternatingGroup</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/GroupTheory/SpecificGroups/Alternating.lean#L136-L139","name":"alternatingGroup.isThreeCycle_isConj","line":136,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup.isThreeCycle_isConj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup.isThreeCycle_isConj\"><span class=\"name\">alternatingGroup</span>.<span class=\"name\">isThreeCycle_isConj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h5 : <span class=\"fn\"><span class=\"fn\">5</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup\">alternatingGroup</a> <span class=\"fn\">α</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{τ : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup\">alternatingGroup</a> <span class=\"fn\">α</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hσ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Perm/Cycle/Type.html#Equiv.Perm.IsThreeCycle\">Equiv.Perm.IsThreeCycle</a> <span class=\"fn\">↑<span class=\"fn\">σ</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hτ : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Perm/Cycle/Type.html#Equiv.Perm.IsThreeCycle\">Equiv.Perm.IsThreeCycle</a> <span class=\"fn\">↑<span class=\"fn\">τ</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Conj.html#IsConj\">IsConj</a> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/GroupTheory/SpecificGroups/Alternating.lean#L111-L133","name":"alternatingGroup.isConj_of","line":111,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup.isConj_of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup.isConj_of\"><span class=\"name\">alternatingGroup</span>.<span class=\"name\">isConj_of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup\">alternatingGroup</a> <span class=\"fn\">α</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{τ : <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup\">alternatingGroup</a> <span class=\"fn\">α</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Conj.html#IsConj\">IsConj</a> <span class=\"fn\">↑<span class=\"fn\">σ</span></span> <span class=\"fn\">↑<span class=\"fn\">τ</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hσ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.support\">Equiv.Perm.support</a> <span class=\"fn\">↑<span class=\"fn\">σ</span></span></span>)</span>.card</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Conj.html#IsConj\">IsConj</a> <span class=\"fn\">σ</span> <span class=\"fn\">τ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/GroupTheory/SpecificGroups/Alternating.lean#L107-L108","name":"alternatingGroup.normal","line":107,"kind":"instance","docLink":"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup.normal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup.normal\"><span class=\"name\">alternatingGroup</span>.<span class=\"name\">normal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup.Normal\">Subgroup.Normal</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup\">alternatingGroup</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/GroupTheory/SpecificGroups/Alternating.lean#L96-L100","name":"two_mul_card_alternatingGroup","line":96,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#two_mul_card_alternatingGroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#two_mul_card_alternatingGroup\"><span class=\"name\">two_mul_card_alternatingGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup\">alternatingGroup</a> <span class=\"fn\">α</span></span>)</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Equiv.Perm</a> <span class=\"fn\">α</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/GroupTheory/SpecificGroups/Alternating.lean#L89-L91","name":"Equiv.Perm.finRotate_bit1_mem_alternatingGroup","line":89,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#Equiv.Perm.finRotate_bit1_mem_alternatingGroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#Equiv.Perm.finRotate_bit1_mem_alternatingGroup\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">finRotate_bit1_mem_alternatingGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Fin.html#finRotate\">finRotate</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#bit1\">bit1</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup\">alternatingGroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#bit1\">bit1</a> <span class=\"fn\">n</span></span>)</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/GroupTheory/SpecificGroups/Alternating.lean#L83-L85","name":"Equiv.Perm.IsThreeCycle.mem_alternatingGroup","line":83,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#Equiv.Perm.IsThreeCycle.mem_alternatingGroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#Equiv.Perm.IsThreeCycle.mem_alternatingGroup\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">IsThreeCycle</span>.<span class=\"name\">mem_alternatingGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Equiv.Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Perm/Cycle/Type.html#Equiv.Perm.IsThreeCycle\">Equiv.Perm.IsThreeCycle</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup\">alternatingGroup</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/GroupTheory/SpecificGroups/Alternating.lean#L77-L80","name":"Equiv.Perm.prod_list_swap_mem_alternatingGroup_iff_even_length","line":77,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#Equiv.Perm.prod_list_swap_mem_alternatingGroup_iff_even_length","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#Equiv.Perm.prod_list_swap_mem_alternatingGroup_iff_even_length\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">prod_list_swap_mem_alternatingGroup_iff_even_length</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Equiv.Perm</a> <span class=\"fn\">α</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hl : <span class=\"fn\">∀ <span class=\"fn\">g</span> ∈ <span class=\"fn\">l</span>, <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Perm/Support.html#Equiv.Perm.IsSwap\">Equiv.Perm.IsSwap</a> <span class=\"fn\">g</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/List/BigOperators/Defs.html#List.prod\">List.prod</a> <span class=\"fn\">l</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup\">alternatingGroup</a> <span class=\"fn\">α</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Parity.html#Even\">Even</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#List.length\">List.length</a> <span class=\"fn\">l</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/GroupTheory/SpecificGroups/Alternating.lean#L73-L74","name":"Equiv.Perm.mem_alternatingGroup","line":73,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#Equiv.Perm.mem_alternatingGroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#Equiv.Perm.mem_alternatingGroup\"><span class=\"name\">Equiv</span>.<span class=\"name\">Perm</span>.<span class=\"name\">mem_alternatingGroup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Equiv.Perm</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup\">alternatingGroup</a> <span class=\"fn\">α</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Equiv.Perm.sign</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/GroupTheory/SpecificGroups/Alternating.lean#L66-L67","name":"alternatingGroup_eq_sign_ker","line":66,"kind":"theorem","docLink":"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup_eq_sign_ker","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup_eq_sign_ker\"><span class=\"name\">alternatingGroup_eq_sign_ker</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup\">alternatingGroup</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#MonoidHom.ker\">MonoidHom.ker</a> <span class=\"fn\">Equiv.Perm.sign</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/GroupTheory/SpecificGroups/Alternating.lean#L61-L62","name":"instUniqueSubtypePermMemSubgroupPermGroupInstMembershipInstSetLikeSubgroupAlternatingGroup","line":61,"kind":"instance","docLink":"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#instUniqueSubtypePermMemSubgroupPermGroupInstMembershipInstSetLikeSubgroupAlternatingGroup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#instUniqueSubtypePermMemSubgroupPermGroupInstMembershipInstSetLikeSubgroupAlternatingGroup\"><span class=\"name\">instUniqueSubtypePermMemSubgroupPermGroupInstMembershipInstSetLikeSubgroupAlternatingGroup</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup\">alternatingGroup</a> <span class=\"fn\">α</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/GroupTheory/SpecificGroups/Alternating.lean#L58-L59","name":"fta","line":58,"kind":"instance","docLink":"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#fta","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#fta\"><span class=\"name\">fta</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">↥<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup\">alternatingGroup</a> <span class=\"fn\">α</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/GroupTheory/SpecificGroups/Alternating.lean#L53-L54","name":"alternatingGroup","line":53,"kind":"def","docLink":"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup","doc":"The alternating group on a finite type, realized as a subgroup of `Equiv.Perm`.\nFor $A_n$, use `alternatingGroup (Fin n)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/SpecificGroups/Alternating.html#alternatingGroup\"><span class=\"name\">alternatingGroup</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Basic.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Equiv.Perm</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"}]}