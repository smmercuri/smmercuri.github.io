{"name":"Mathlib.SetTheory.Cardinal.PartENat","instances":[],"imports":["Init","Mathlib.SetTheory.Cardinal.ToNat","Mathlib.Data.Nat.PartENat"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Cardinal/PartENat.lean#L112-L113","name":"Cardinal.mk_toPartENat_eq_coe_card","line":112,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/PartENat.html#Cardinal.mk_toPartENat_eq_coe_card","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/PartENat.html#Cardinal.mk_toPartENat_eq_coe_card\"><span class=\"name\">Cardinal</span>.<span class=\"name\">mk_toPartENat_eq_coe_card</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.toPartENat</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">α</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">α</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Cardinal/PartENat.lean#L108-L109","name":"Cardinal.toPartENat_congr","line":108,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/PartENat.html#Cardinal.toPartENat_congr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/PartENat.html#Cardinal.toPartENat_congr\"><span class=\"name\">Cardinal</span>.<span class=\"name\">toPartENat_congr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.toPartENat</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">α</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Cardinal.toPartENat</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">β</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Cardinal/PartENat.lean#L104-L105","name":"Cardinal.toPartENat_lift","line":104,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/PartENat.html#Cardinal.toPartENat_lift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/PartENat.html#Cardinal.toPartENat_lift\"><span class=\"name\">Cardinal</span>.<span class=\"name\">toPartENat_lift</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{v}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.toPartENat</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.lift\">Cardinal.lift.{u, v}</a>    <span class=\"fn\">c</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Cardinal.toPartENat</span> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Cardinal/PartENat.lean#L99-L101","name":"Cardinal.toPartENat_mono","line":99,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/PartENat.html#Cardinal.toPartENat_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/PartENat.html#Cardinal.toPartENat_mono\"><span class=\"name\">Cardinal</span>.<span class=\"name\">toPartENat_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c' : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.toPartENat</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">Cardinal.toPartENat</span> <span class=\"fn\">c'</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Cardinal/PartENat.lean#L94-L96","name":"Cardinal.toPartENat_eq_iff_of_le_aleph0","line":94,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/PartENat.html#Cardinal.toPartENat_eq_iff_of_le_aleph0","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/PartENat.html#Cardinal.toPartENat_eq_iff_of_le_aleph0\"><span class=\"name\">Cardinal</span>.<span class=\"name\">toPartENat_eq_iff_of_le_aleph0</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c' : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hc' : <span class=\"fn\"><span class=\"fn\">c'</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.toPartENat</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Cardinal.toPartENat</span> <span class=\"fn\">c'</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c'</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Cardinal/PartENat.lean#L87-L91","name":"Cardinal.toPartENat_le_iff_of_lt_aleph0","line":87,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/PartENat.html#Cardinal.toPartENat_le_iff_of_lt_aleph0","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/PartENat.html#Cardinal.toPartENat_le_iff_of_lt_aleph0\"><span class=\"name\">Cardinal</span>.<span class=\"name\">toPartENat_le_iff_of_lt_aleph0</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c' : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc' : <span class=\"fn\"><span class=\"fn\">c'</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.toPartENat</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">Cardinal.toPartENat</span> <span class=\"fn\">c'</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c'</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Cardinal/PartENat.lean#L80-L84","name":"Cardinal.toPartENat_le_iff_of_le_aleph0","line":80,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/PartENat.html#Cardinal.toPartENat_le_iff_of_le_aleph0","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/PartENat.html#Cardinal.toPartENat_le_iff_of_le_aleph0\"><span class=\"name\">Cardinal</span>.<span class=\"name\">toPartENat_le_iff_of_le_aleph0</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_1}</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c' : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.toPartENat</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">Cardinal.toPartENat</span> <span class=\"fn\">c'</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c'</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Cardinal/PartENat.lean#L77-L78","name":"Cardinal.toPartENat_strictMonoOn","line":77,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/PartENat.html#Cardinal.toPartENat_strictMonoOn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/PartENat.html#Cardinal.toPartENat_strictMonoOn\"><span class=\"name\">Cardinal</span>.<span class=\"name\">toPartENat_strictMonoOn</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#StrictMonoOn\">StrictMonoOn</a> <span class=\"fn\">(<span class=\"fn\">⇑<a href=\"./Mathlib/SetTheory/Cardinal/PartENat.html#Cardinal.toPartENat\">Cardinal.toPartENat</a></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Intervals/Basic.html#Set.Iic\">Set.Iic</a> <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Cardinal/PartENat.lean#L75-L75","name":"Cardinal.toPartENat_eq_top_iff_le_aleph0","line":75,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/PartENat.html#Cardinal.toPartENat_eq_top_iff_le_aleph0","doc":"**Alias** of `Cardinal.toPartENat_eq_top`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/PartENat.html#Cardinal.toPartENat_eq_top_iff_le_aleph0\"><span class=\"name\">Cardinal</span>.<span class=\"name\">toPartENat_eq_top_iff_le_aleph0</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.toPartENat</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Cardinal/PartENat.lean#L71-L72","name":"Cardinal.toPartENat_surjective","line":71,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/PartENat.html#Cardinal.toPartENat_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/PartENat.html#Cardinal.toPartENat_surjective\"><span class=\"name\">Cardinal</span>.<span class=\"name\">toPartENat_surjective</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">⇑<a href=\"./Mathlib/SetTheory/Cardinal/PartENat.html#Cardinal.toPartENat\">Cardinal.toPartENat</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Cardinal/PartENat.lean#L67-L68","name":"Cardinal.aleph0_toPartENat","line":67,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/PartENat.html#Cardinal.aleph0_toPartENat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/PartENat.html#Cardinal.aleph0_toPartENat\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph0_toPartENat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.toPartENat</span> <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Cardinal/PartENat.lean#L62-L63","name":"Cardinal.mk_toPartENat_of_infinite","line":62,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/PartENat.html#Cardinal.mk_toPartENat_of_infinite","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/PartENat.html#Cardinal.mk_toPartENat_of_infinite\"><span class=\"name\">Cardinal</span>.<span class=\"name\">mk_toPartENat_of_infinite</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h : <span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Infinite\">Infinite</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.toPartENat</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">α</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Cardinal/PartENat.lean#L58-L59","name":"Cardinal.toPartENat_cast","line":58,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/PartENat.html#Cardinal.toPartENat_cast","doc":"**Alias** of `Cardinal.toPartENat_natCast`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/PartENat.html#Cardinal.toPartENat_cast\"><span class=\"name\">Cardinal</span>.<span class=\"name\">toPartENat_cast</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.toPartENat</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Cardinal/PartENat.lean#L54-L55","name":"Cardinal.toPartENat_apply_of_aleph0_le","line":54,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/PartENat.html#Cardinal.toPartENat_apply_of_aleph0_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/PartENat.html#Cardinal.toPartENat_apply_of_aleph0_le\"><span class=\"name\">Cardinal</span>.<span class=\"name\">toPartENat_apply_of_aleph0_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.toPartENat</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Cardinal/PartENat.lean#L47-L51","name":"Cardinal.toPartENat_eq_top","line":47,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/PartENat.html#Cardinal.toPartENat_eq_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/PartENat.html#Cardinal.toPartENat_eq_top\"><span class=\"name\">Cardinal</span>.<span class=\"name\">toPartENat_eq_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.toPartENat</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Cardinal/PartENat.lean#L43-L44","name":"Cardinal.toPartENat_apply_of_lt_aleph0","line":43,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/PartENat.html#Cardinal.toPartENat_apply_of_lt_aleph0","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/PartENat.html#Cardinal.toPartENat_apply_of_lt_aleph0\"><span class=\"name\">Cardinal</span>.<span class=\"name\">toPartENat_apply_of_lt_aleph0</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.toPartENat</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Cardinal.toNat</span> <span class=\"fn\">c</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Cardinal/PartENat.lean#L39-L40","name":"Cardinal.toPartENat_natCast","line":39,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/PartENat.html#Cardinal.toPartENat_natCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/PartENat.html#Cardinal.toPartENat_natCast\"><span class=\"name\">Cardinal</span>.<span class=\"name\">toPartENat_natCast</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.toPartENat</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Cardinal/PartENat.lean#L36-L36","name":"Cardinal.partENatOfENat_toENat","line":36,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/PartENat.html#Cardinal.partENatOfENat_toENat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/PartENat.html#Cardinal.partENatOfENat_toENat\"><span class=\"name\">Cardinal</span>.<span class=\"name\">partENatOfENat_toENat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Cardinal.toENat</span> <span class=\"fn\">c</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Cardinal.toPartENat</span> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/SetTheory/Cardinal/PartENat.lean#L28-L32","name":"Cardinal.toPartENat","line":28,"kind":"def","docLink":"./Mathlib/SetTheory/Cardinal/PartENat.html#Cardinal.toPartENat","doc":"This function sends finite cardinals to the corresponding natural, and infinite cardinals\nto `⊤`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/PartENat.html#Cardinal.toPartENat\"><span class=\"name\">Cardinal</span>.<span class=\"name\">toPartENat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_1}</a> <a href=\"./Mathlib/Algebra/Order/Hom/Monoid.html#OrderAddMonoidHom\">→+o</a> <a href=\"./Mathlib/Data/Nat/PartENat.html#PartENat\">PartENat</a></span></div></div>"}]}