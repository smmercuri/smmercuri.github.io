{"name":"Mathlib.Topology.CompactOpen","instances":[{"typeNames":["ContinuousMap"],"name":"ContinuousMap.compactOpen","className":"TopologicalSpace"},{"typeNames":["ContinuousMap"],"name":"ContinuousMap.instT0SpaceContinuousMapCompactOpen","className":"T0Space"},{"typeNames":["ContinuousMap"],"name":"ContinuousMap.instT1SpaceContinuousMapCompactOpen","className":"T1Space"},{"typeNames":["ContinuousMap"],"name":"ContinuousMap.instT2SpaceContinuousMapCompactOpen","className":"T2Space"}],"imports":["Init","Mathlib.Topology.ContinuousFunction.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L469-L474","name":"QuotientMap.continuous_lift_prod_right","line":469,"kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#QuotientMap.continuous_lift_prod_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#QuotientMap.continuous_lift_prod_right\"><span class=\"name\">QuotientMap</span>.<span class=\"name\">continuous_lift_prod_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₀ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#LocallyCompactSpace\">LocallyCompactSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">X₀</span> → <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#QuotientMap\">QuotientMap</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">X</span></span> → <span class=\"fn\">Z</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">fun (<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">X₀</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p</span>.1</span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">p</span>.2</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L455-L466","name":"QuotientMap.continuous_lift_prod_left","line":455,"kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#QuotientMap.continuous_lift_prod_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#QuotientMap.continuous_lift_prod_left\"><span class=\"name\">QuotientMap</span>.<span class=\"name\">continuous_lift_prod_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X₀ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#LocallyCompactSpace\">LocallyCompactSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">X₀</span> → <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#QuotientMap\">QuotientMap</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Y</span></span> → <span class=\"fn\">Z</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">fun (<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\">X₀</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Y</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">p</span>.1</span></span>, <span class=\"fn\"><span class=\"fn\">p</span>.2</span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L443-L445","name":"Homeomorph.continuousMapOfUnique_symm_apply","line":443,"kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#Homeomorph.continuousMapOfUnique_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#Homeomorph.continuousMapOfUnique_symm_apply\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">continuousMapOfUnique_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Homeomorph.html#Homeomorph.symm\">Homeomorph.symm</a> <span class=\"fn\">Homeomorph.continuousMapOfUnique</span></span>)</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">default</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L438-L439","name":"Homeomorph.continuousMapOfUnique_apply","line":438,"kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#Homeomorph.continuousMapOfUnique_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#Homeomorph.continuousMapOfUnique_apply\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">continuousMapOfUnique_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Homeomorph.continuousMapOfUnique</span> <span class=\"fn\">y</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L425-L434","name":"Homeomorph.continuousMapOfUnique","line":425,"kind":"def","docLink":"./Mathlib/Topology/CompactOpen.html#Homeomorph.continuousMapOfUnique","doc":"If `X` has a single element, then `Y` is homeomorphic to `C(X, Y)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#Homeomorph.continuousMapOfUnique\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">continuousMapOfUnique</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Unique.html#Unique\">Unique</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Mathlib/Topology/Homeomorph.html#Homeomorph\">≃ₜ</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L419-L421","name":"Homeomorph.curry","line":419,"kind":"def","docLink":"./Mathlib/Topology/CompactOpen.html#Homeomorph.curry","doc":"Currying as a homeomorphism between the function spaces `C(X × Y, Z)` and `C(X, C(Y, Z))`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#Homeomorph.curry\"><span class=\"name\">Homeomorph</span>.<span class=\"name\">curry</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#LocallyCompactSpace\">LocallyCompactSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#LocallyCompactSpace\">LocallyCompactSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Y</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Z</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span> <a href=\"./Mathlib/Topology/Homeomorph.html#Homeomorph\">≃ₜ</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Z</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L401-L402","name":"ContinuousMap.continuous_const'","line":401,"kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous_const'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous_const'\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">continuous_const'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.const\">ContinuousMap.const</a> <span class=\"fn\">X</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L397-L398","name":"ContinuousMap.coe_const'","line":397,"kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.coe_const'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.coe_const'\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">coe_const'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">ContinuousMap.const'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.const\">ContinuousMap.const</a> <span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L392-L393","name":"ContinuousMap.const'","line":392,"kind":"def","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.const'","doc":"The family of constant maps: `Y → C(X, Y)` as a continuous map. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.const'\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">const'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L384-L388","name":"ContinuousMap.continuous_uncurry","line":384,"kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous_uncurry","doc":"The uncurrying process is a continuous map between function spaces. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous_uncurry\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">continuous_uncurry</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#LocallyCompactSpace\">LocallyCompactSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#LocallyCompactSpace\">LocallyCompactSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">ContinuousMap.uncurry</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L379-L380","name":"ContinuousMap.uncurry","line":379,"kind":"def","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.uncurry","doc":"The uncurried form of a continuous map `X → C(Y, Z)` as a continuous map `X × Y → Z` (if `Y` is\nlocally compact). If `X` is also locally compact, then this is a homeomorphism between the two\nfunction spaces, see `Homeomorph.curry`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.uncurry\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">uncurry</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#LocallyCompactSpace\">LocallyCompactSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Z</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Y</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Z</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L378-L378","name":"ContinuousMap.uncurry_apply","line":378,"kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.uncurry_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.uncurry_apply\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">uncurry_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#LocallyCompactSpace\">LocallyCompactSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Z</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Y</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.uncurry\">ContinuousMap.uncurry</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.uncurry\">Function.uncurry</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">X</span>) (<span class=\"fn\">y</span> : <span class=\"fn\">Y</span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">y</span></span></span>)</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L370-L372","name":"ContinuousMap.continuous_uncurry_of_continuous","line":370,"kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous_uncurry_of_continuous","doc":"The uncurried form of a continuous map `X → C(Y, Z)` is a continuous map `X × Y → Z`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous_uncurry_of_continuous\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">continuous_uncurry_of_continuous</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#LocallyCompactSpace\">LocallyCompactSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Z</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.uncurry\">Function.uncurry</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">X</span>) (<span class=\"fn\">y</span> : <span class=\"fn\">Y</span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">y</span></span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L361-L366","name":"ContinuousMap.continuous_curry","line":361,"kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous_curry","doc":"The currying process is a continuous map between function spaces. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous_curry\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">continuous_curry</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#LocallyCompactSpace\">LocallyCompactSpace</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Y</span></span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">ContinuousMap.curry</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L355-L357","name":"ContinuousMap.continuous_of_continuous_uncurry","line":355,"kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous_of_continuous_uncurry","doc":"To show continuity of a map `α → C(β, γ)`, it suffices to show that its uncurried form\n`α × β → γ` is continuous. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous_of_continuous_uncurry\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">continuous_of_continuous_uncurry</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Z</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.uncurry\">Function.uncurry</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">X</span>) (<span class=\"fn\">y</span> : <span class=\"fn\">Y</span>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">y</span></span></span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L350-L350","name":"ContinuousMap.continuous_curry'","line":350,"kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous_curry'","doc":"If a map `α × β → γ` is continuous, then its curried form `α → C(β, γ)` is continuous. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous_curry'\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">continuous_curry'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Y</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Z</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.curry'\">ContinuousMap.curry'</a> <span class=\"fn\">f</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L344-L344","name":"ContinuousMap.curry'","line":344,"kind":"def","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.curry'","doc":"Auxiliary definition, see `ContinuousMap.curry` and `Homeomorph.curry`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.curry'\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">curry'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Y</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Z</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Z</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L338-L339","name":"ContinuousMap.curry_apply","line":338,"kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.curry_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.curry_apply\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">curry_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Y</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Z</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.curry\">ContinuousMap.curry</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\">a</span>, <span class=\"fn\">b</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L332-L334","name":"ContinuousMap.curry","line":332,"kind":"def","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.curry","doc":"The curried form of a continuous map `α × β → γ` as a continuous map `α → C(β, γ)`.\nIf `a × β` is locally compact, this is continuous. If `α` and `β` are both locally\ncompact, then this is a homeomorphism, see `Homeomorph.curry`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.curry\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">curry</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Y</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Z</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Z</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L316-L322","name":"ContinuousMap.continuous_coev","line":316,"kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous_coev","doc":"The coevaluation map `Y → C(X, Y × X)` is continuous (always). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous_coev\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">continuous_coev</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.coev\">ContinuousMap.coev</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L312-L312","name":"ContinuousMap.image_coev","line":312,"kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.image_coev","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.image_coev\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">image_coev</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">Y</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.coev\">ContinuousMap.coev</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span> <span class=\"fn\">y</span></span>)</span></span> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">{<span class=\"fn\">y</span>}</span> <a href=\"./Mathlib/Data/SProd.html#SProd.sprod\">×ˢ</a> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L306-L307","name":"ContinuousMap.coev","line":306,"kind":"def","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.coev","doc":"The coevaluation map `Y → C(X, Y × X)` sending a point `x : Y` to the continuous function\non `X` sending `y` to `(x, y)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.coev\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">coev</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Y : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">X</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L305-L305","name":"ContinuousMap.coev_apply","line":305,"kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.coev_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.coev_apply\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">coev_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Y : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">Y</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.coev\">ContinuousMap.coev</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span> <span class=\"fn\">b</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Prod.mk\">Prod.mk</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L268-L294","name":"ContinuousMap.exists_tendsto_compactOpen_iff_forall","line":268,"kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.exists_tendsto_compactOpen_iff_forall","doc":"A family `F` of functions in `C(X, Y)` converges in the compact-open topology, if and only if\nit converges in the compact-open topology on each compact subset of `X`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.exists_tendsto_compactOpen_iff_forall\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">exists_tendsto_compactOpen_iff_forall</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#WeaklyLocallyCompactSpace\">WeaklyLocallyCompactSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation.html#T2Space\">T2Space</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.NeBot\">Filter.NeBot</a> <span class=\"fn\">l</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∃ (f : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>), <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">F</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">f</span></span>)</span></span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>),\n    <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">s</span></span> → <span class=\"fn\">∃ (f : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">↑<span class=\"fn\">s</span></span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>), <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.restrict\">ContinuousMap.restrict</a> <span class=\"fn\">s</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">f</span></span>)</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L259-L263","name":"ContinuousMap.tendsto_compactOpen_iff_forall","line":259,"kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.tendsto_compactOpen_iff_forall","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.tendsto_compactOpen_iff_forall\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">tendsto_compactOpen_iff_forall</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">F</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">f</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ (<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>),\n    <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.restrict\">ContinuousMap.restrict</a> <span class=\"fn\">K</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.restrict\">ContinuousMap.restrict</a> <span class=\"fn\">K</span> <span class=\"fn\">f</span></span>)</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L253-L256","name":"ContinuousMap.tendsto_compactOpen_restrict","line":253,"kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.tendsto_compactOpen_restrict","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.tendsto_compactOpen_restrict\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">tendsto_compactOpen_restrict</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hFf : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">F</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">f</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.restrict\">ContinuousMap.restrict</a> <span class=\"fn\">s</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.restrict\">ContinuousMap.restrict</a> <span class=\"fn\">s</span> <span class=\"fn\">f</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L251-L251","name":"ContinuousMap.nhds_compactOpen_eq_sInf_nhds_induced","line":251,"kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.nhds_compactOpen_eq_sInf_nhds_induced","doc":"**Alias** of `ContinuousMap.nhds_compactOpen_eq_iInf_nhds_induced`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.nhds_compactOpen_eq_sInf_nhds_induced\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">nhds_compactOpen_eq_sInf_nhds_induced</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨅ (s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>), <span class=\"fn\">⨅ (_ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">s</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.comap\">Filter.comap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.restrict\">ContinuousMap.restrict</a> <span class=\"fn\">s</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.restrict\">ContinuousMap.restrict</a> <span class=\"fn\">s</span> <span class=\"fn\">f</span></span>)</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L245-L248","name":"ContinuousMap.nhds_compactOpen_eq_iInf_nhds_induced","line":245,"kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.nhds_compactOpen_eq_iInf_nhds_induced","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.nhds_compactOpen_eq_iInf_nhds_induced\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">nhds_compactOpen_eq_iInf_nhds_induced</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨅ (s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>), <span class=\"fn\">⨅ (_ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">s</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.comap\">Filter.comap</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.restrict\">ContinuousMap.restrict</a> <span class=\"fn\">s</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.restrict\">ContinuousMap.restrict</a> <span class=\"fn\">s</span> <span class=\"fn\">f</span></span>)</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L243-L243","name":"ContinuousMap.compactOpen_eq_sInf_induced","line":243,"kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.compactOpen_eq_sInf_induced","doc":"**Alias** of `ContinuousMap.compactOpen_eq_iInf_induced`.\n\n---\n\nThe compact-open topology on `C(X, Y)`\nis equal to the infimum of the compact-open topologies on `C(s, Y)` for `s` a compact subset of `X`.\nThe key point of the proof is that for every compact set `K`,\nthe universal set `Set.univ : Set K` is a compact set as well. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.compactOpen_eq_sInf_induced\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">compactOpen_eq_sInf_induced</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">ContinuousMap.compactOpen</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">⨅ (K : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>), <span class=\"fn\">⨅ (_ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#TopologicalSpace.induced\">TopologicalSpace.induced</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.restrict\">ContinuousMap.restrict</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">ContinuousMap.compactOpen</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L232-L240","name":"ContinuousMap.compactOpen_eq_iInf_induced","line":232,"kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.compactOpen_eq_iInf_induced","doc":"The compact-open topology on `C(X, Y)`\nis equal to the infimum of the compact-open topologies on `C(s, Y)` for `s` a compact subset of `X`.\nThe key point of the proof is that for every compact set `K`,\nthe universal set `Set.univ : Set K` is a compact set as well. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.compactOpen_eq_iInf_induced\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">compactOpen_eq_iInf_induced</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">ContinuousMap.compactOpen</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">⨅ (K : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>), <span class=\"fn\">⨅ (_ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#TopologicalSpace.induced\">TopologicalSpace.induced</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.restrict\">ContinuousMap.restrict</a> <span class=\"fn\">K</span></span>)</span> <span class=\"fn\">ContinuousMap.compactOpen</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L222-L225","name":"ContinuousMap.compactOpen_le_induced","line":222,"kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.compactOpen_le_induced","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.compactOpen_le_induced\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">compactOpen_le_induced</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">ContinuousMap.compactOpen</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#TopologicalSpace.induced\">TopologicalSpace.induced</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.restrict\">ContinuousMap.restrict</a> <span class=\"fn\">s</span></span>)</span> <span class=\"fn\">ContinuousMap.compactOpen</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L218-L219","name":"ContinuousMap.continuous_restrict","line":218,"kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous_restrict","doc":"For any subset `s` of `X`, the restriction of continuous functions to `s` is continuous\nas a function from `C(X, Y)` to `C(s, Y)` with their respective compact-open topologies. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous_restrict\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">continuous_restrict</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">fun (<span class=\"fn\">F</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.restrict\">ContinuousMap.restrict</a> <span class=\"fn\">s</span> <span class=\"fn\">F</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L209-L210","name":"ContinuousMap.instT2SpaceContinuousMapCompactOpen","line":209,"kind":"instance","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.instT2SpaceContinuousMapCompactOpen","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.instT2SpaceContinuousMapCompactOpen\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">instT2SpaceContinuousMapCompactOpen</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation.html#T2Space\">T2Space</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Separation.html#T2Space\">T2Space</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L206-L207","name":"ContinuousMap.instT1SpaceContinuousMapCompactOpen","line":206,"kind":"instance","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.instT1SpaceContinuousMapCompactOpen","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.instT1SpaceContinuousMapCompactOpen\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">instT1SpaceContinuousMapCompactOpen</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation.html#T1Space\">T1Space</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Separation.html#T1Space\">T1Space</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L203-L204","name":"ContinuousMap.instT0SpaceContinuousMapCompactOpen","line":203,"kind":"instance","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.instT0SpaceContinuousMapCompactOpen","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.instT0SpaceContinuousMapCompactOpen\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">instT0SpaceContinuousMapCompactOpen</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Separation.html#T0Space\">T0Space</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Separation.html#T0Space\">T0Space</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L199-L201","name":"ContinuousMap.isClopen_setOf_mapsTo","line":199,"kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.isClopen_setOf_mapsTo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.isClopen_setOf_mapsTo\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">isClopen_setOf_mapsTo</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hK : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClopen\">IsClopen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClopen\">IsClopen</a> <span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span> | <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\">K</span> <span class=\"fn\">U</span></span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L195-L197","name":"ContinuousMap.isClosed_setOf_mapsTo","line":195,"kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.isClosed_setOf_mapsTo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.isClosed_setOf_mapsTo\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">isClosed_setOf_mapsTo</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ht : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsClosed\">IsClosed</a> <span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span> | <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\">s</span> <span class=\"fn\">t</span></span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L190-L191","name":"ContinuousMap.continuous_coe","line":190,"kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous_coe","doc":"Coercion from `C(X, Y)` with compact-open topology to `X → Y` with pointwise convergence\ntopology is a continuous map.\n\nPorting note: merged `continuous_coe` with `continuous_coe'` removing unneeded assumptions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous_coe\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">continuous_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">DFunLike.coe</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L181-L182","name":"ContinuousMap.continuous_eval_const","line":181,"kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous_eval_const","doc":"Evaluation of a continuous map `f` at a point `x` is continuous in `f`.\n\nPorting note: merged `continuous_eval_const` with `continuous_eval_const'` removing unneeded\nassumptions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous_eval_const\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">continuous_eval_const</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">fun (<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L174-L174","name":"ContinuousMap.continuous_eval'","line":174,"kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous_eval'","doc":"**Alias** of `ContinuousMap.continuous_eval`.\n\n---\n\nThe evaluation map `C(X, Y) × X → Y` is continuous\nif `X, Y` is a locally compact pair of spaces. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous_eval'\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">continuous_eval'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#LocallyCompactPair\">LocallyCompactPair</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">fun (<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">X</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.1</span> <span class=\"fn\"><span class=\"fn\">p</span>.2</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L166-L170","name":"ContinuousMap.continuous_eval","line":166,"kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous_eval","doc":"The evaluation map `C(X, Y) × X → Y` is continuous\nif `X, Y` is a locally compact pair of spaces. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous_eval\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">continuous_eval</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#LocallyCompactPair\">LocallyCompactPair</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">fun (<span class=\"fn\">p</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">X</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.1</span> <span class=\"fn\"><span class=\"fn\">p</span>.2</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L154-L156","name":"ContinuousMap.continuous.comp'","line":154,"kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous.comp'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous.comp'\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">continuous</span>.<span class=\"name\">comp'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#LocallyCompactPair\">LocallyCompactPair</a> <span class=\"fn\">Y</span> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X' : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">X'</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Z</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">X'</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">X'</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.comp\">ContinuousMap.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L149-L151","name":"Continuous.compCM","line":149,"kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#Continuous.compCM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#Continuous.compCM\"><span class=\"name\">Continuous</span>.<span class=\"name\">compCM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#LocallyCompactPair\">LocallyCompactPair</a> <span class=\"fn\">Y</span> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X' : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">X'</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Z</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">X'</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">X'</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.comp\">ContinuousMap.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L145-L147","name":"ContinuousOn.compCM","line":145,"kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousOn.compCM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousOn.compCM\"><span class=\"name\">ContinuousOn</span>.<span class=\"name\">compCM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#LocallyCompactPair\">LocallyCompactPair</a> <span class=\"fn\">Y</span> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X' : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">X'</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Z</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">X'</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X'</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">g</span> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">f</span> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousOn\">ContinuousOn</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">X'</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.comp\">ContinuousMap.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span></span>)</span> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L141-L143","name":"ContinuousWithinAt.compCM","line":141,"kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousWithinAt.compCM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousWithinAt.compCM\"><span class=\"name\">ContinuousWithinAt</span>.<span class=\"name\">compCM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#LocallyCompactPair\">LocallyCompactPair</a> <span class=\"fn\">Y</span> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X' : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">X'</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">X'</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Z</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">X'</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X'</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousWithinAt\">ContinuousWithinAt</a> <span class=\"fn\">g</span> <span class=\"fn\">s</span> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousWithinAt\">ContinuousWithinAt</a> <span class=\"fn\">f</span> <span class=\"fn\">s</span> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousWithinAt\">ContinuousWithinAt</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">X'</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.comp\">ContinuousMap.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span></span>)</span> <span class=\"fn\">s</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L137-L139","name":"ContinuousAt.compCM","line":137,"kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousAt.compCM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousAt.compCM\"><span class=\"name\">ContinuousAt</span>.<span class=\"name\">compCM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#LocallyCompactPair\">LocallyCompactPair</a> <span class=\"fn\">Y</span> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X' : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">X'</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">X'</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Z</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">X'</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousAt\">ContinuousAt</a> <span class=\"fn\">g</span> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousAt\">ContinuousAt</a> <span class=\"fn\">f</span> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousAt\">ContinuousAt</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">X'</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.comp\">ContinuousMap.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span></span>)</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L129-L132","name":"Filter.Tendsto.compCM","line":129,"kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#Filter.Tendsto.compCM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#Filter.Tendsto.compCM\"><span class=\"name\">Filter</span>.<span class=\"name\">Tendsto</span>.<span class=\"name\">compCM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#LocallyCompactPair\">LocallyCompactPair</a> <span class=\"fn\">Y</span> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Z</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Z</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">g</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">g₀</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">f</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">f₀</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.comp\">ContinuousMap.comp</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span>)</span></span></span>)</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.comp\">ContinuousMap.comp</a> <span class=\"fn\">g₀</span> <span class=\"fn\">f₀</span></span>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L117-L126","name":"ContinuousMap.continuous_comp'","line":117,"kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous_comp'","doc":"Composition is a continuous map from `C(X, Y) × C(Y, Z)` to `C(X, Z)`,\nprovided that `Y` is locally compact.\nThis is Prop. 9 of Chap. X, §3, №. 4 of Bourbaki's *Topologie Générale*. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous_comp'\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">continuous_comp'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#LocallyCompactPair\">LocallyCompactPair</a> <span class=\"fn\">Y</span> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Z</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.comp\">ContinuousMap.comp</a> <span class=\"fn\"><span class=\"fn\">x</span>.2</span> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L107-L109","name":"ContinuousMap.continuous_comp_left","line":107,"kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous_comp_left","doc":"`C(·, Z)` is a functor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous_comp_left\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">continuous_comp_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">fun (<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Z</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.comp\">ContinuousMap.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L103-L104","name":"ContinuousMap.embedding_comp","line":103,"kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.embedding_comp","doc":"If `g : C(Y, Z)` is a topological embedding,\nthen the composition `ContinuousMap.comp g : C(X, Y) → C(X, Z)` is an embedding too. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.embedding_comp\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">embedding_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Z</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Embedding\">Embedding</a> <span class=\"fn\">⇑<span class=\"fn\">g</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Embedding\">Embedding</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.comp\">ContinuousMap.comp</a> <span class=\"fn\">g</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L96-L99","name":"ContinuousMap.inducing_comp","line":96,"kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.inducing_comp","doc":"If `g : C(Y, Z)` is a topology inducing map,\nthen the composition `ContinuousMap.comp g : C(X, Y) → C(X, Z)` is a topology inducing map too. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.inducing_comp\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">inducing_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Z</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Inducing\">Inducing</a> <span class=\"fn\">⇑<span class=\"fn\">g</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Induced.html#Inducing\">Inducing</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.comp\">ContinuousMap.comp</a> <span class=\"fn\">g</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L90-L91","name":"ContinuousMap.continuous_comp","line":90,"kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous_comp","doc":"`C(X, ·)` is a functor. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous_comp\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">continuous_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Z</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.comp\">ContinuousMap.comp</a> <span class=\"fn\">g</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L83-L85","name":"ContinuousMap.continuous_compactOpen","line":83,"kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous_compactOpen","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.continuous_compactOpen\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">continuous_compactOpen</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Z</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Y</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span> → <span class=\"fn\">∀ (<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Z</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsOpen\">IsOpen</a> <span class=\"fn\">U</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsOpen\">IsOpen</a> <span class=\"fn\">{<span class=\"fn\">x</span> : <span class=\"fn\">X</span> | <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span></span>)</span> <span class=\"fn\">K</span> <span class=\"fn\">U</span></span>}</span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L78-L81","name":"ContinuousMap.tendsto_nhds_compactOpen","line":78,"kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.tendsto_nhds_compactOpen","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.tendsto_nhds_compactOpen\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">tendsto_nhds_compactOpen</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Z : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Z</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Z</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Z</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">f</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">g</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ (<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Y</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span> → <span class=\"fn\">∀ (<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Z</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsOpen\">IsOpen</a> <span class=\"fn\">U</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">g</span></span>)</span> <span class=\"fn\">K</span> <span class=\"fn\">U</span></span> → <span class=\"fn\">∀ᶠ (a : <span class=\"fn\">α</span>) in <span class=\"fn\">l</span>, <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">a</span></span>)</span></span>)</span> <span class=\"fn\">K</span> <span class=\"fn\">U</span></span></span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L72-L76","name":"ContinuousMap.nhds_compactOpen","line":72,"kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.nhds_compactOpen","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.nhds_compactOpen\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">nhds_compactOpen</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">⨅ (K : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>),\n    <span class=\"fn\">⨅ (_ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span>),\n      <span class=\"fn\">⨅ (U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Y</span></span>), <span class=\"fn\">⨅ (_ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsOpen\">IsOpen</a> <span class=\"fn\">U</span></span>), <span class=\"fn\">⨅ (_ : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\">K</span> <span class=\"fn\">U</span></span>), <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.principal\">Filter.principal</a> <span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span> | <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">g</span></span>)</span> <span class=\"fn\">K</span> <span class=\"fn\">U</span></span>}</span></span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L68-L70","name":"ContinuousMap.eventually_mapsTo","line":68,"kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.eventually_mapsTo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.eventually_mapsTo\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">eventually_mapsTo</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hK : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsOpen\">IsOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\">K</span> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ᶠ (g : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>) in <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">f</span></span>, <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">g</span></span>)</span> <span class=\"fn\">K</span> <span class=\"fn\">U</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L63-L65","name":"ContinuousMap.isOpen_setOf_mapsTo","line":63,"kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.isOpen_setOf_mapsTo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.isOpen_setOf_mapsTo\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">isOpen_setOf_mapsTo</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{U : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Y</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hK : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hU : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsOpen\">IsOpen</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsOpen\">IsOpen</a> <span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span> | <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\">K</span> <span class=\"fn\">U</span></span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L59-L61","name":"ContinuousMap.compactOpen_eq","line":59,"kind":"theorem","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.compactOpen_eq","doc":"Definition of `ContinuousMap.compactOpen`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.compactOpen_eq\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">compactOpen_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">ContinuousMap.compactOpen</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Topology/Order.html#TopologicalSpace.generateFrom\">TopologicalSpace.generateFrom</a>\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.image2\">Set.image2</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span>) (<span class=\"fn\">U</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Y</span></span>) =&gt; <span class=\"fn\">{<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span> | <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set.MapsTo\">Set.MapsTo</a> <span class=\"fn\">(<span class=\"fn\">⇑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\">K</span> <span class=\"fn\">U</span></span>}</span></span>)</span> <span class=\"fn\">{<span class=\"fn\">K</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">X</span></span> | <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#IsCompact\">IsCompact</a> <span class=\"fn\">K</span></span>}</span>\n      <span class=\"fn\">{<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">Y</span></span> | <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#IsOpen\">IsOpen</a> <span class=\"fn\">t</span></span>}</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/CompactOpen.lean#L54-L55","name":"ContinuousMap.compactOpen","line":54,"kind":"instance","docLink":"./Mathlib/Topology/CompactOpen.html#ContinuousMap.compactOpen","doc":"The compact-open topology on the space of continuous maps `C(X, Y)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/CompactOpen.html#ContinuousMap.compactOpen\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">compactOpen</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span></span></div></div>"}]}