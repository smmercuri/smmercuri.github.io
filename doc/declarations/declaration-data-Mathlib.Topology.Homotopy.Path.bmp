{"name":"Mathlib.Topology.Homotopy.Path","instances":[{"typeNames":["Path.Homotopic.Quotient"],"name":"Path.Homotopic.instInhabitedQuotientUnitInstTopologicalSpacePUnitUnit","className":"Inhabited"}],"imports":["Init","Mathlib.Topology.Homotopy.Basic","Mathlib.Topology.Connected.PathConnected","Mathlib.Analysis.Convex.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L370-L374","name":"ContinuousMap.Homotopy.evalAt","line":370,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/Path.html#ContinuousMap.Homotopy.evalAt","doc":"Given a homotopy `H : f ∼ g`, get the path traced by the point `x` as it moves from\n`f x` to `g x`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#ContinuousMap.Homotopy.evalAt\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">evalAt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopy\">ContinuousMap.Homotopy</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L359-L363","name":"ContinuousMap.homotopic_const_iff","line":359,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#ContinuousMap.homotopic_const_iff","doc":"Two constant continuous maps with nonempty domain are homotopic if and only if their values are\njoined by a path in the codomain. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#ContinuousMap.homotopic_const_iff\"><span class=\"name\">ContinuousMap</span>.<span class=\"name\">homotopic_const_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopic\">ContinuousMap.Homotopic</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.const\">ContinuousMap.const</a> <span class=\"fn\">Y</span> <span class=\"fn\">x₀</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.const\">ContinuousMap.const</a> <span class=\"fn\">Y</span> <span class=\"fn\">x₁</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Joined\">Joined</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L348-L352","name":"Path.toHomotopyConst","line":348,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.toHomotopyConst","doc":"A path `Path x₀ x₁` generates a homotopy between constant functions `fun _ ↦ x₀` and\n`fun _ ↦ x₁`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.toHomotopyConst\"><span class=\"name\">Path</span>.<span class=\"name\">toHomotopyConst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Basic.html#ContinuousMap.Homotopy\">ContinuousMap.Homotopy</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.const\">ContinuousMap.const</a> <span class=\"fn\">Y</span> <span class=\"fn\">x₀</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap.const\">ContinuousMap.const</a> <span class=\"fn\">Y</span> <span class=\"fn\">x₁</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L347-L347","name":"Path.toHomotopyConst_apply","line":347,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.toHomotopyConst_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.toHomotopyConst_apply\"><span class=\"name\">Path</span>.<span class=\"name\">toHomotopyConst_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Y</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.toHomotopyConst\">Path.toHomotopyConst</a> <span class=\"fn\">p</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\"><span class=\"fn\">a</span>.1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L336-L340","name":"Path.Homotopic.hpath_hext","line":336,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.hpath_hext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.hpath_hext\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopic</span>.<span class=\"name\">hpath_hext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₃ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₂ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₂</span> <span class=\"fn\">x₃</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\">∀ (<span class=\"fn\">t</span> : <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p₁</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">p₂</span> <span class=\"fn\">t</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HEq\">HEq</a> <span class=\"fn\">⟦<span class=\"fn\">p₁</span>⟧</span> <span class=\"fn\">⟦<span class=\"fn\">p₂</span>⟧</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L331-L332","name":"Path.Homotopic.map_lift","line":331,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.map_lift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.map_lift\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopic</span>.<span class=\"name\">map_lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⟦<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path.map\">Path.map</a> <span class=\"fn\">P₀</span> <span class=\"fn\">⋯</span></span>⟧</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.Quotient.mapFn\">Path.Homotopic.Quotient.mapFn</a> <span class=\"fn\">⟦<span class=\"fn\">P₀</span>⟧</span> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L326-L328","name":"Path.Homotopic.Quotient.mapFn","line":326,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.Quotient.mapFn","doc":"The image of a path homotopy class `P₀` under a map `f`.\nThis is `Path.map` descended to the quotient. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.Quotient.mapFn\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopic</span>.<span class=\"name\">Quotient</span>.<span class=\"name\">mapFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.Quotient\">Path.Homotopic.Quotient</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.Quotient\">Path.Homotopic.Quotient</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x₀</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x₁</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L320-L321","name":"Path.Homotopic.comp_lift","line":320,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.comp_lift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.comp_lift\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopic</span>.<span class=\"name\">comp_lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(P₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⟦<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path.trans\">Path.trans</a> <span class=\"fn\">P₀</span> <span class=\"fn\">P₁</span></span>⟧</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.Quotient.comp\">Path.Homotopic.Quotient.comp</a> <span class=\"fn\">⟦<span class=\"fn\">P₀</span>⟧</span> <span class=\"fn\">⟦<span class=\"fn\">P₁</span>⟧</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L315-L317","name":"Path.Homotopic.Quotient.comp","line":315,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.Quotient.comp","doc":"The composition of path homotopy classes. This is `Path.trans` descended to the quotient. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.Quotient.comp\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopic</span>.<span class=\"name\">Quotient</span>.<span class=\"name\">comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.Quotient\">Path.Homotopic.Quotient</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(P₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.Quotient\">Path.Homotopic.Quotient</a> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.Quotient\">Path.Homotopic.Quotient</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L311-L312","name":"Path.Homotopic.instInhabitedQuotientUnitInstTopologicalSpacePUnitUnit","line":311,"kind":"instance","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.instInhabitedQuotientUnitInstTopologicalSpacePUnitUnit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.instInhabitedQuotientUnitInstTopologicalSpacePUnitUnit\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopic</span>.<span class=\"name\">instInhabitedQuotientUnitInstTopologicalSpacePUnitUnit</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.Quotient\">Path.Homotopic.Quotient</a> <a href=\"./Init/Prelude.html#Unit.unit\">()</a> <a href=\"./Init/Prelude.html#Unit.unit\">()</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L305-L306","name":"Path.Homotopic.Quotient","line":305,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.Quotient","doc":"The quotient on `Path x₀ x₁` by the equivalence relation `Path.Homotopic`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.Quotient\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopic</span>.<span class=\"name\">Quotient</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x₀ : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₁ : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L299-L300","name":"Path.Homotopic.setoid","line":299,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.setoid","doc":"The setoid on `Path`s defined by the equivalence relation `Path.Homotopic`. That is, two paths are\nequivalent if there is a `Homotopy` between them.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.setoid\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopic</span>.<span class=\"name\">setoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x₀ : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x₁ : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Setoid\">Setoid</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L290-L292","name":"Path.Homotopic.hcomp","line":290,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.hcomp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.hcomp\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopic</span>.<span class=\"name\">hcomp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic\">Path.Homotopic</a> <span class=\"fn\">p₀</span> <span class=\"fn\">p₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hq : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic\">Path.Homotopic</a> <span class=\"fn\">q₀</span> <span class=\"fn\">q₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic\">Path.Homotopic</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path.trans\">Path.trans</a> <span class=\"fn\">p₀</span> <span class=\"fn\">q₀</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path.trans\">Path.trans</a> <span class=\"fn\">p₁</span> <span class=\"fn\">q₁</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L285-L287","name":"Path.Homotopic.map","line":285,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.map\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopic</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic\">Path.Homotopic</a> <span class=\"fn\">p</span> <span class=\"fn\">q</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic\">Path.Homotopic</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path.map\">Path.map</a> <span class=\"fn\">p</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path.map\">Path.map</a> <span class=\"fn\">q</span> <span class=\"fn\">⋯</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L281-L282","name":"Path.Homotopic.equivalence","line":281,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.equivalence","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.equivalence\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopic</span>.<span class=\"name\">equivalence</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#Equivalence\">Equivalence</a> <span class=\"fn\">Path.Homotopic</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L276-L278","name":"Path.Homotopic.trans","line":276,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.trans\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopic</span>.<span class=\"name\">trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃p₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃p₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃p₂ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic\">Path.Homotopic</a> <span class=\"fn\">p₀</span> <span class=\"fn\">p₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic\">Path.Homotopic</a> <span class=\"fn\">p₁</span> <span class=\"fn\">p₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic\">Path.Homotopic</a> <span class=\"fn\">p₀</span> <span class=\"fn\">p₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L271-L272","name":"Path.Homotopic.symm","line":271,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.symm\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopic</span>.<span class=\"name\">symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃p₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃p₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic\">Path.Homotopic</a> <span class=\"fn\">p₀</span> <span class=\"fn\">p₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic\">Path.Homotopic</a> <span class=\"fn\">p₁</span> <span class=\"fn\">p₀</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L266-L267","name":"Path.Homotopic.refl","line":266,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.refl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic.refl\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopic</span>.<span class=\"name\">refl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic\">Path.Homotopic</a> <span class=\"fn\">p</span> <span class=\"fn\">p</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L259-L260","name":"Path.Homotopic","line":259,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic","doc":"Two paths `p₀` and `p₁` are `Path.Homotopic` if there exists a `Homotopy` between them.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopic\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L243-L252","name":"Path.Homotopy.map","line":243,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.map","doc":"Given `F : Homotopy p q`, and `f : C(X, Y)`, we can define a homotopy from `p.map f.continuous` to\n`q.map f.continuous`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.map\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Path.Homotopy</a> <span class=\"fn\">p</span> <span class=\"fn\">q</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Path.Homotopy</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path.map\">Path.map</a> <span class=\"fn\">p</span> <span class=\"fn\">⋯</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path.map\">Path.map</a> <span class=\"fn\">q</span> <span class=\"fn\">⋯</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L242-L242","name":"Path.Homotopy.map_toFun","line":242,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.map_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.map_toFun\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">map_toFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Path.Homotopy</a> <span class=\"fn\">p</span> <span class=\"fn\">q</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.map\">Path.Homotopy.map</a> <span class=\"fn\">F</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">⇑<span class=\"fn\">F</span></span></span>)</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L242-L242","name":"Path.Homotopy.map_apply","line":242,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.map_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.map_apply\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">map_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Y : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">Y</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Path.Homotopy</a> <span class=\"fn\">p</span> <span class=\"fn\">q</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">C(</a><span class=\"fn\">X</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">,</a> <span class=\"fn\">Y</span><a href=\"./Mathlib/Topology/ContinuousFunction/Basic.html#ContinuousMap\">)</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.map\">Path.Homotopy.map</a> <span class=\"fn\">F</span> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">⇑<span class=\"fn\">F</span></span></span>)</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L225-L235","name":"Path.Homotopy.symm₂","line":225,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm₂","doc":"Suppose `F : Homotopy p q`. Then we have a `Homotopy p.symm q.symm` by reversing the second\nargument.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm₂\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">symm₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Path.Homotopy</a> <span class=\"fn\">p</span> <span class=\"fn\">q</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Path.Homotopy</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path.symm\">Path.symm</a> <span class=\"fn\">p</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path.symm\">Path.symm</a> <span class=\"fn\">q</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L224-L224","name":"Path.Homotopy.symm₂_toFun","line":224,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm₂_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm₂_toFun\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">symm₂_toFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Path.Homotopy</a> <span class=\"fn\">p</span> <span class=\"fn\">q</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm₂\">Path.Homotopy.symm₂</a> <span class=\"fn\">F</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.1</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval.symm\">unitInterval.symm</a> <span class=\"fn\"><span class=\"fn\">x</span>.2</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L224-L224","name":"Path.Homotopy.symm₂_apply","line":224,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm₂_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm₂_apply\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">symm₂_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Path.Homotopy</a> <span class=\"fn\">p</span> <span class=\"fn\">q</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm₂\">Path.Homotopy.symm₂</a> <span class=\"fn\">F</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span>.1</span>, <span class=\"fn\"><a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval.symm\">unitInterval.symm</a> <span class=\"fn\"><span class=\"fn\">x</span>.2</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L196-L218","name":"Path.Homotopy.reparam","line":196,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.reparam","doc":"Suppose `p` is a path, then we have a homotopy from `p` to `p.reparam f` by the convexity of `I`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.reparam\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">reparam</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span> → <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#Continuous\">Continuous</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf₀ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf₁ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Path.Homotopy</a> <span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path.reparam\">Path.reparam</a> <span class=\"fn\">p</span> <span class=\"fn\">f</span> <span class=\"fn\">hf</span> <span class=\"fn\">hf₀</span> <span class=\"fn\">hf₁</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L186-L188","name":"Path.Homotopy.hcomp_half","line":186,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.hcomp_half","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.hcomp_half\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">hcomp_half</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Path.Homotopy</a> <span class=\"fn\">p₀</span> <span class=\"fn\">q₀</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Path.Homotopy</a> <span class=\"fn\">p₁</span> <span class=\"fn\">q₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.hcomp\">Path.Homotopy.hcomp</a> <span class=\"fn\">F</span> <span class=\"fn\">G</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">t</span>, <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\"><span class=\"fn\">1</span> / <span class=\"fn\">2</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">⋯</span> }</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₁</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L176-L183","name":"Path.Homotopy.hcomp_apply","line":176,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.hcomp_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.hcomp_apply\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">hcomp_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Path.Homotopy</a> <span class=\"fn\">p₀</span> <span class=\"fn\">q₀</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Path.Homotopy</a> <span class=\"fn\">p₁</span> <span class=\"fn\">q₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.hcomp\">Path.Homotopy.hcomp</a> <span class=\"fn\">F</span> <span class=\"fn\">G</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">if h : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.2</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">1</span> / <span class=\"fn\">2</span></span></span> then <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.eval\">Path.Homotopy.eval</a> <span class=\"fn\">F</span> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span>)</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.2</span></span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">⋯</span> }</span></span>\n  else <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.eval\">Path.Homotopy.eval</a> <span class=\"fn\">G</span> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span>)</span> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.2</span></span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">⋯</span> }</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L161-L173","name":"Path.Homotopy.hcomp","line":161,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.hcomp","doc":"Suppose `p₀` and `q₀` are paths from `x₀` to `x₁`, `p₁` and `q₁` are paths from `x₁` to `x₂`.\nFurthermore, suppose `F : Homotopy p₀ q₀` and `G : Homotopy p₁ q₁`. Then we can define a homotopy\nfrom `p₀.trans p₁` to `q₀.trans q₁`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.hcomp\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">hcomp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₂ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₁</span> <span class=\"fn\">x₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Path.Homotopy</a> <span class=\"fn\">p₀</span> <span class=\"fn\">q₀</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Path.Homotopy</a> <span class=\"fn\">p₁</span> <span class=\"fn\">q₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Path.Homotopy</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path.trans\">Path.trans</a> <span class=\"fn\">p₀</span> <span class=\"fn\">p₁</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path.trans\">Path.trans</a> <span class=\"fn\">q₀</span> <span class=\"fn\">q₁</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L146-L148","name":"Path.Homotopy.cast","line":146,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.cast","doc":"Casting a `Homotopy p₀ p₁` to a `Homotopy q₀ q₁` where `p₀ = q₀` and `p₁ = q₁`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.cast\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">cast</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Path.Homotopy</a> <span class=\"fn\">p₀</span> <span class=\"fn\">p₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₀ : <span class=\"fn\"><span class=\"fn\">p₀</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">q₀</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">q₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Path.Homotopy</a> <span class=\"fn\">q₀</span> <span class=\"fn\">q₁</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L145-L145","name":"Path.Homotopy.cast_apply","line":145,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.cast_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.cast_apply\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">cast_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Path.Homotopy</a> <span class=\"fn\">p₀</span> <span class=\"fn\">p₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₀ : <span class=\"fn\"><span class=\"fn\">p₀</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">q₀</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">q₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.cast\">Path.Homotopy.cast</a> <span class=\"fn\">F</span> <span class=\"fn\">h₀</span> <span class=\"fn\">h₁</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L145-L145","name":"Path.Homotopy.cast_toFun","line":145,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.cast_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.cast_toFun\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">cast_toFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{q₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Path.Homotopy</a> <span class=\"fn\">p₀</span> <span class=\"fn\">p₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₀ : <span class=\"fn\"><span class=\"fn\">p₀</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">q₀</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\">p₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">q₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.cast\">Path.Homotopy.cast</a> <span class=\"fn\">F</span> <span class=\"fn\">h₀</span> <span class=\"fn\">h₁</span></span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L139-L141","name":"Path.Homotopy.symm_trans","line":139,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm_trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm_trans\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">symm_trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₂ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Path.Homotopy</a> <span class=\"fn\">p₀</span> <span class=\"fn\">p₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Path.Homotopy</a> <span class=\"fn\">p₁</span> <span class=\"fn\">p₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm\">Path.Homotopy.symm</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.trans\">Path.Homotopy.trans</a> <span class=\"fn\">F</span> <span class=\"fn\">G</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.trans\">Path.Homotopy.trans</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm\">Path.Homotopy.symm</a> <span class=\"fn\">G</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm\">Path.Homotopy.symm</a> <span class=\"fn\">F</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L130-L136","name":"Path.Homotopy.trans_apply","line":130,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.trans_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.trans_apply\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">trans_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₂ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Path.Homotopy</a> <span class=\"fn\">p₀</span> <span class=\"fn\">p₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Path.Homotopy</a> <span class=\"fn\">p₁</span> <span class=\"fn\">p₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.trans\">Path.Homotopy.trans</a> <span class=\"fn\">F</span> <span class=\"fn\">G</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">if h : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.1</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">1</span> / <span class=\"fn\">2</span></span></span> then <span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.1</span></span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">⋯</span> }</span>, <span class=\"fn\"><span class=\"fn\">x</span>.2</span>)</span></span>\n  else <span class=\"fn\"><span class=\"fn\">G</span> <span class=\"fn\">(<span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">x</span>.1</span></span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">⋯</span> }</span>, <span class=\"fn\"><span class=\"fn\">x</span>.2</span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L126-L127","name":"Path.Homotopy.trans","line":126,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.trans","doc":"Given `Homotopy p₀ p₁` and `Homotopy p₁ p₂`, we can define a `Homotopy p₀ p₂` by putting the first\nhomotopy on `[0, 1/2]` and the second on `[1/2, 1]`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.trans\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₂ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Path.Homotopy</a> <span class=\"fn\">p₀</span> <span class=\"fn\">p₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(G : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Path.Homotopy</a> <span class=\"fn\">p₁</span> <span class=\"fn\">p₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Path.Homotopy</a> <span class=\"fn\">p₀</span> <span class=\"fn\">p₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L119-L120","name":"Path.Homotopy.symm_bijective","line":119,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm_bijective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm_bijective\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">symm_bijective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Bijective\">Function.Bijective</a> <span class=\"fn\">Path.Homotopy.symm</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L115-L116","name":"Path.Homotopy.symm_symm","line":115,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm_symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm_symm\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">symm_symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Path.Homotopy</a> <span class=\"fn\">p₀</span> <span class=\"fn\">p₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm\">Path.Homotopy.symm</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm\">Path.Homotopy.symm</a> <span class=\"fn\">F</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">F</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L110-L111","name":"Path.Homotopy.symm","line":110,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm","doc":"Given a `Homotopy p₀ p₁`, we can define a `Homotopy p₁ p₀` by reversing the homotopy.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Path.Homotopy</a> <span class=\"fn\">p₀</span> <span class=\"fn\">p₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Path.Homotopy</a> <span class=\"fn\">p₁</span> <span class=\"fn\">p₀</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L109-L109","name":"Path.Homotopy.symm_toFun","line":109,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm_toFun\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">symm_toFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Path.Homotopy</a> <span class=\"fn\">p₀</span> <span class=\"fn\">p₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm\">Path.Homotopy.symm</a> <span class=\"fn\">F</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval.symm\">unitInterval.symm</a> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span>, <span class=\"fn\"><span class=\"fn\">x</span>.2</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L109-L109","name":"Path.Homotopy.symm_apply","line":109,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm_apply\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Path.Homotopy</a> <span class=\"fn\">p₀</span> <span class=\"fn\">p₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.symm\">Path.Homotopy.symm</a> <span class=\"fn\">F</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval.symm\">unitInterval.symm</a> <span class=\"fn\"><span class=\"fn\">x</span>.1</span></span>, <span class=\"fn\"><span class=\"fn\">x</span>.2</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L103-L104","name":"Path.Homotopy.refl","line":103,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.refl","doc":"Given a path `p`, we can define a `Homotopy p p` by `F (t, x) = p x`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.refl\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">refl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Path.Homotopy</a> <span class=\"fn\">p</span> <span class=\"fn\">p</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L102-L102","name":"Path.Homotopy.refl_toFun","line":102,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.refl_toFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.refl_toFun\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">refl_toFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.refl\">Path.Homotopy.refl</a> <span class=\"fn\">p</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\"><span class=\"fn\">x</span>.2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L102-L102","name":"Path.Homotopy.refl_apply","line":102,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.refl_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.refl_apply\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">refl_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.refl\">Path.Homotopy.refl</a> <span class=\"fn\">p</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\"><span class=\"fn\">x</span>.2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L89-L91","name":"Path.Homotopy.eval_one","line":89,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.eval_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.eval_one\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">eval_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Path.Homotopy</a> <span class=\"fn\">p₀</span> <span class=\"fn\">p₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.eval\">Path.Homotopy.eval</a> <span class=\"fn\">F</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p₁</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L83-L85","name":"Path.Homotopy.eval_zero","line":83,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.eval_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.eval_zero\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">eval_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Path.Homotopy</a> <span class=\"fn\">p₀</span> <span class=\"fn\">p₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.eval\">Path.Homotopy.eval</a> <span class=\"fn\">F</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p₀</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L76-L79","name":"Path.Homotopy.eval","line":76,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.eval","doc":"Evaluating a path homotopy at an intermediate point, giving us a `Path`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.eval\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">eval</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Path.Homotopy</a> <span class=\"fn\">p₀</span> <span class=\"fn\">p₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L69-L71","name":"Path.Homotopy.target","line":69,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.target","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.target\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">target</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Path.Homotopy</a> <span class=\"fn\">p₀</span> <span class=\"fn\">p₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\">t</span>, <span class=\"fn\">1</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₁</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L63-L65","name":"Path.Homotopy.source","line":63,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.source","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.source\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">source</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><a href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\">Path.Homotopy</a> <span class=\"fn\">p₀</span> <span class=\"fn\">p₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\">↑<a href=\"./Mathlib/Topology/UnitInterval.html#unitInterval\">unitInterval</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span> <span class=\"fn\">(<span class=\"fn\">t</span>, <span class=\"fn\">0</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x₀</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L58-L59","name":"Path.Homotopy.coeFn_injective","line":58,"kind":"theorem","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.coeFn_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy.coeFn_injective\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span>.<span class=\"name\">coeFn_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">DFunLike.coe</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/eaede86aa7777630a3826cd8f3fbf0cbaafa53e6/Mathlib/Topology/Homotopy/Path.lean#L48-L49","name":"Path.Homotopy","line":48,"kind":"def","docLink":"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy","doc":"The type of homotopies between two paths.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Topology/Homotopy/Path.html#Path.Homotopy\"><span class=\"name\">Path</span>.<span class=\"name\">Homotopy</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₀ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p₀ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p₁ : <span class=\"fn\"><a href=\"./Mathlib/Topology/Connected/PathConnected.html#Path\">Path</a> <span class=\"fn\">x₀</span> <span class=\"fn\">x₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"}]}