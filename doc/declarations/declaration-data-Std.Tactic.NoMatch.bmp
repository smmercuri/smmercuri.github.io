{"name":"Std.Tactic.NoMatch","instances":[],"imports":["Init","Lean.Elab.ElabRules"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Tactic/NoMatch.lean#L37-L42","name":"Std.Tactic.introDot","line":37,"kind":"def","docLink":"./Std/Tactic/NoMatch.html#Std.Tactic.introDot","doc":"The syntax `intro.` is deprecated in favor of `nofun`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/NoMatch.html#Std.Tactic.introDot\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">introDot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Tactic/NoMatch.lean#L34-L35","name":"Std.Tactic.«tacticMatch_,,With.»","line":34,"kind":"def","docLink":"./Std/Tactic/NoMatch.html#Std.Tactic.«tacticMatch_,,With.»","doc":"The syntax `match ⋯ with.` has been deprecated in favor of `nomatch ⋯`.\n\nBoth now support multiple discriminants.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/NoMatch.html#Std.Tactic.«tacticMatch_,,With.»\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">«tacticMatch_,,With</span>.<span class=\"name\">»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Tactic/NoMatch.lean#L28-L31","name":"Std.Tactic.lambdaDot","line":28,"kind":"def","docLink":"./Std/Tactic/NoMatch.html#Std.Tactic.lambdaDot","doc":"The syntax `λ.` has been deprecated in favor of `nofun`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/NoMatch.html#Std.Tactic.lambdaDot\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">lambdaDot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Tactic/NoMatch.lean#L23-L26","name":"Std.Tactic.funDot","line":23,"kind":"def","docLink":"./Std/Tactic/NoMatch.html#Std.Tactic.funDot","doc":"The syntax `fun.` has been deprecated in favor of `nofun`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/NoMatch.html#Std.Tactic.funDot\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">funDot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Tactic/NoMatch.lean#L14-L21","name":"Std.Tactic.matchWithDot","line":14,"kind":"def","docLink":"./Std/Tactic/NoMatch.html#Std.Tactic.matchWithDot","doc":"The syntax `match ⋯ with.` has been deprecated in favor of `nomatch ⋯`.\n\nBoth now support multiple discriminants.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/NoMatch.html#Std.Tactic.matchWithDot\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">matchWithDot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"}]}