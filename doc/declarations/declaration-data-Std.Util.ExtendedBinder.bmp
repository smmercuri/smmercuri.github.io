{"name":"Std.Util.ExtendedBinder","instances":[],"imports":["Init","Lean.Elab.MacroArgUtil","Lean.Linter.MissingDocs"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Util/ExtendedBinder.lean#L70-L73","name":"Std.ExtendedBinder.checkBinderPredicate","line":70,"kind":"def","docLink":"./Std/Util/ExtendedBinder.html#Std.ExtendedBinder.checkBinderPredicate","doc":"Missing docs handler for `binder_predicate` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Util/ExtendedBinder.html#Std.ExtendedBinder.checkBinderPredicate\"><span class=\"name\">Std</span>.<span class=\"name\">ExtendedBinder</span>.<span class=\"name\">checkBinderPredicate</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Linter/MissingDocs.html#Lean.Linter.MissingDocs.SimpleHandler\">Lean.Linter.MissingDocs.SimpleHandler</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Util/ExtendedBinder.lean#L57-L65","name":"Std.ExtendedBinder.binderPredicate","line":57,"kind":"def","docLink":"./Std/Util/ExtendedBinder.html#Std.ExtendedBinder.binderPredicate","doc":"Declares a binder predicate.  For example:\n```\nbinder_predicate x \" > \" y:term => `($x > $y)\n```\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Util/ExtendedBinder.html#Std.ExtendedBinder.binderPredicate\"><span class=\"name\">Std</span>.<span class=\"name\">ExtendedBinder</span>.<span class=\"name\">binderPredicate</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Util/ExtendedBinder.lean#L43-L44","name":"Std.ExtendedBinder.«term∀ᵉ_,_»","line":43,"kind":"def","docLink":"./Std/Util/ExtendedBinder.html#Std.ExtendedBinder.«term∀ᵉ_,_»","doc":"The syntax `∀ᵉ (x < 2) (y < 3), p x y` is shorthand for `∀ x < 2, ∀ y < 3, p x y`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Util/ExtendedBinder.html#Std.ExtendedBinder.«term∀ᵉ_,_»\"><span class=\"name\">Std</span>.<span class=\"name\">ExtendedBinder</span>.<span class=\"name\">«term∀ᵉ_,_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Util/ExtendedBinder.lean#L32-L33","name":"Std.ExtendedBinder.«term∃ᵉ_,_»","line":32,"kind":"def","docLink":"./Std/Util/ExtendedBinder.html#Std.ExtendedBinder.«term∃ᵉ_,_»","doc":"The syntax `∃ᵉ (x < 2) (y < 3), p x y` is shorthand for `∃ x < 2, ∃ y < 3, p x y`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Util/ExtendedBinder.html#Std.ExtendedBinder.«term∃ᵉ_,_»\"><span class=\"name\">Std</span>.<span class=\"name\">ExtendedBinder</span>.<span class=\"name\">«term∃ᵉ_,_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Util/ExtendedBinder.lean#L29-L30","name":"Std.ExtendedBinder.extBinders","line":29,"kind":"def","docLink":"./Std/Util/ExtendedBinder.html#Std.ExtendedBinder.extBinders","doc":"A single (unparenthesized) binder, or a list of parenthesized binders "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Util/ExtendedBinder.html#Std.ExtendedBinder.extBinders\"><span class=\"name\">Std</span>.<span class=\"name\">ExtendedBinder</span>.<span class=\"name\">extBinders</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Util/ExtendedBinder.lean#L27-L28","name":"Std.ExtendedBinder.extBinderCollection","line":27,"kind":"def","docLink":"./Std/Util/ExtendedBinder.html#Std.ExtendedBinder.extBinderCollection","doc":"A list of parenthesized binders "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Util/ExtendedBinder.html#Std.ExtendedBinder.extBinderCollection\"><span class=\"name\">Std</span>.<span class=\"name\">ExtendedBinder</span>.<span class=\"name\">extBinderCollection</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Util/ExtendedBinder.lean#L25-L26","name":"Std.ExtendedBinder.extBinderParenthesized","line":25,"kind":"def","docLink":"./Std/Util/ExtendedBinder.html#Std.ExtendedBinder.extBinderParenthesized","doc":"A extended binder in parentheses "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Util/ExtendedBinder.html#Std.ExtendedBinder.extBinderParenthesized\"><span class=\"name\">Std</span>.<span class=\"name\">ExtendedBinder</span>.<span class=\"name\">extBinderParenthesized</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/std4/blob/e5306c3b0edefe722370b7387ee9bcd4631d6c17/Std/Util/ExtendedBinder.lean#L20-L24","name":"Std.ExtendedBinder.extBinder","line":20,"kind":"def","docLink":"./Std/Util/ExtendedBinder.html#Std.ExtendedBinder.extBinder","doc":"An extended binder has the form `x`, `x : ty`, or `x pred`\nwhere `pred` is a `binderPred` like `< 2`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Util/ExtendedBinder.html#Std.ExtendedBinder.extBinder\"><span class=\"name\">Std</span>.<span class=\"name\">ExtendedBinder</span>.<span class=\"name\">extBinder</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"}]}